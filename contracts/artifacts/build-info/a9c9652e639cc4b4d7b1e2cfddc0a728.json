{
	"id": "a9c9652e639cc4b4d7b1e2cfddc0a728",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Lottery.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract LotteryGame {\n    // 彩票資訊\n    struct Egginfo {\n        bytes32 uid; // 購買彩票id , 32 * 8  = 256位\n        uint8 mul; // 倍數\n        uint248 blocknumber; //區塊號碼\n    }\n\n    // 開獎號碼\n    struct OpenedLotInfo {\n        uint32 Lotterynum; // 開獎號碼\n        uint8 mul; // 倍數\n    }\n\n    // 用戶資訊\n    struct userinfo {\n        Egginfo[] eggsinfo; // 彩票購買紀錄\n        OpenedLotInfo[] openedeggs; // 最近一次開獎號碼\n        uint256 ReferralProfit; // 紀錄推薦獎勵\n        bool actived; // 是否激活,用於需要自己購買至少一注彩票推薦才有效\n    }\n\n    // 中獎資訊\n    struct Winninginfo {\n        uint32 LotteryNum; // 彩票號碼\n        uint8 mul; // 倍數\n        uint256 timestamp; // 購買彩票時間區塊時間戳\n        address winner; // 中獎人地址\n    }\n\n    // 投資者資訊\n    struct investorbalance {\n        uint256 balance; // 餘額\n        uint256 LastInvestTime; // 最近一次投資時間,投資時間必須至少7天才能取回\n        bool HasInvested; // 是否已經投資過，沒有投資過不能分紅\n    }\n\n    // 每注彩票金額\n    uint256 private constant PerEggPrice = 0.02 ether; // 0.02BNB\n\n    // 接受投資的獎池最大值(獎池小於10000時才能投資)\n    uint256 private constant Maxinum_Investment_pool = 10000 ether; // 10000BNB\n\n    // 最小投資金額\n    uint256 private constant Mininum_Investment_amount = 1 ether; // 1BNB\n\n    // 最大投資金額\n    uint256 private constant Maxinum_Investment_amount = 1000 ether; // 1000BNB\n\n    // 開發者地址\n    address public DevAddress;\n\n    // 開發者收益 所有彩票購買金額3% + 所有中獎金額的5%\n    uint256 private DevProfit;\n\n    // 所有投資者的地址 分配投資收益\n    address[] private investors;\n\n    // 投資者資訊: 紀錄投資金額.投資時間\n    mapping(address => investorbalance) private InvestorsBalance;\n\n    // 投資者總投資金額\n    uint256 public TotalInvestmentAmount;\n\n    // 投資者收益: 所有中獎金額的5%\n    uint256 public InvestorsProfit;\n\n    // 最近一次分紅時間\n    uint256 public RecentDividendTime;\n\n    // 所有推薦者獎勵, 方便計算獎池 (獎池 = 合約餘額 - 推薦者推薦 - 投資者收益 - 開發者收益)\n    uint256 private TotalReferralProfit;\n\n    // 最近一次購買彩票時間: 當合約長期(15天)無人購買彩票時，允許開發者銷毀\n    uint256 private LastBuyEggTime;\n\n    // 所有用戶資訊\n    mapping(address => userinfo) private UsersInfo;\n\n    // 所有推薦者資訊: 紀錄推薦關係 , A地址推薦了B地址\n    mapping(address => address) private referrals;\n\n    // 所有中獎紀錄資訊: 紀錄所有人的中獎紀錄 方便公開中獎資訊\n    Winninginfo[] private WinningRecord;\n\n    constructor() {\n        DevAddress = msg.sender;\n        RecentDividendTime = block.timestamp;\n        LastBuyEggTime = block.timestamp;\n    }\n\n    // 安全加法\n    // internal:只能在合約內部使用（或被繼承的合約使用）; pure: 這個函數只依賴輸入參數，不讀取也不改寫區塊鏈上的資料（狀態變數）不會消耗gas fee\n    // 使用assert判斷若發生錯誤行為(惡意行為)會扣除gas fee ,使用require則不會扣除\n    function SafeMathadd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n\n        return c;\n    }\n\n    // 安全減法\n    function SafeMathsub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n\n        return a - b;\n    }\n\n    // 安全乘法\n    function SafeMathmul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n\n        assert((c / a) == b);\n\n        return c;\n    }\n\n    // 安全除法\n    function SafeMathdiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n\n        uint256 c = a / b;\n\n        return c;\n    }\n\n    // 購買彩票\n    function BuyEggs(\n        uint16 LotCount,\n        uint8 mul,\n        uint232 Lucknum,\n        address ref\n    ) external payable {\n        require(msg.value >= PerEggPrice, \"Buy at least one egg\");\n        require(mul >= 1 && mul <= 100, \"Multiples between 1 and 100\");\n        require(\n            LotCount >= 1 && LotCount <= 1000,\n            \"Number of eggs between 1 and 100\"\n        );\n        uint256 AllLotteryCount = SafeMathdiv(msg.value, PerEggPrice);\n\n        require(AllLotteryCount == LotCount * mul, \"Invalid data\");\n\n        for (uint256 i = 0; i < LotCount; i++) {\n            Egginfo memory egginfo = Egginfo(\n                keccak256(\n                    abi.encodePacked(\n                        block.timestamp,\n                        block.coinbase,\n                        msg.sender,\n                        Lucknum++\n                    )\n                ),\n                mul,\n                uint248(block.number)\n            );\n\n            UsersInfo[msg.sender].eggsinfo.push(egginfo);\n        }\n\n        if (!UsersInfo[msg.sender].actived)\n            UsersInfo[msg.sender].actived = true;\n\n        // 投資返勵\n        uint256 profit = SafeMathdiv(SafeMathmul(msg.value, 3), 100);\n\n        // 推薦返勵\n        uint256 Refprofit = SafeMathdiv(SafeMathmul(msg.value, 4), 100);\n\n        // 開發者加上3%\n        DevProfit += profit;\n\n        // 投資者加上3%\n        InvestorsProfit += profit;\n\n        // 判斷目前推薦者是否為空\n        if (referrals[msg.sender] == address(0)) {\n            // 判斷傳入的推薦者地址是否有效\n\n            // 不能將自己作為推薦者||傳入為空||未激活\n            if (\n                ref == msg.sender ||\n                ref == address(0) ||\n                !UsersInfo[msg.sender].actived\n            ) {\n                // 如果傳入無效值就以開發者地址當作推薦人\n                ref = DevAddress;\n            }\n            referrals[msg.sender] = ref;\n\n            // 判斷推薦者是否為開發者,若為真再加上推薦獎勵\n            if (referrals[msg.sender] == DevAddress) {\n                DevProfit += Refprofit;\n            } else {\n                UsersInfo[referrals[msg.sender]].ReferralProfit += Refprofit;\n                TotalReferralProfit += Refprofit;\n            }\n\n            LastBuyEggTime = block.timestamp;\n        }\n    }\n\n    // 根據開獎號碼計算中獎等級\n    function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {\n        if (LotteryNum > 67108864) return 0;\n        if (LotteryNum >= 16777216) return 10;\n        if (LotteryNum >= 4194304) return 9;\n        if (LotteryNum >= 1048576) return 8;\n        if (LotteryNum >= 262144) return 7;\n        if (LotteryNum >= 65536) return 6;\n        if (LotteryNum >= 16384) return 5;\n        if (LotteryNum >= 4096) return 4;\n        if (LotteryNum >= 1024) return 3;\n        if (LotteryNum >= 256) {\n            return 2;\n        } else {\n            return 1;\n        }\n    }\n\n    // 根據中獎等級計算獲獎倍數\n    function GetWinningmultiple(uint256 winninginfo)\n        private\n        pure\n        returns (uint256)\n    {\n        if (winninginfo == 0) return 0;\n        if (winninginfo == 10) return 5;\n        if (winninginfo == 9) return 20;\n        if (winninginfo == 8) return 80;\n        if (winninginfo == 7) return 320;\n        if (winninginfo == 6) return 1200;\n        if (winninginfo == 5) return 4800;\n        if (winninginfo == 4) return 20000;\n        if (winninginfo == 3) return 100000;\n        if (winninginfo == 2) return 500000;\n        if (winninginfo == 1) return 2000000;\n\n        return 0;\n    }\n\n    // 彩票開獎\n    function OpenEggs() external {\n        // 判斷開獎的人有沒有未開獎的彩票\n        require(\n            UsersInfo[msg.sender].eggsinfo.length > 0,\n            \"You don't have undraw lottery tickets\"\n        );\n\n        // 判斷區塊號 當前區塊號是否>購買彩票區塊號大 , 不能在購買的彩票區塊上開獎\n        require(\n            block.number >\n                UsersInfo[msg.sender]\n                    .eggsinfo[UsersInfo[msg.sender].eggsinfo.length - 1]\n                    .blocknumber,\n            \"It's not time\"\n        );\n\n        // 判斷是否有過往開獎號碼，有的話移除保存新的\n        if (UsersInfo[msg.sender].openedeggs.length > 0)\n            delete UsersInfo[msg.sender].openedeggs;\n\n        // 彩票總中獎金額\n        uint256 WinningAmount;\n\n        for (uint256 i = 0; i < UsersInfo[msg.sender].eggsinfo.length; i++) {\n            // 判斷是否失效 超過256區塊後就會失效\n\n            if (\n                uint256(\n                    blockhash(UsersInfo[msg.sender].eggsinfo[i].blocknumber)\n                ) == 0\n            ) continue;\n\n            // 計算開獎號碼\n            uint32 LotteryNum = uint32(\n                bytes4(\n                    keccak256(\n                        abi.encodePacked(\n                            UsersInfo[msg.sender].eggsinfo[i].uid,\n                            blockhash(\n                                UsersInfo[msg.sender].eggsinfo[i].blocknumber\n                            )\n                        )\n                    )\n                )\n            );\n\n            // 中獎等級\n            uint256 Winningrade = GetWinninggrade(LotteryNum);\n\n            // 判斷是否中獎\n            if (Winningrade > 0) {\n                uint256 WinningMoney = GetWinningmultiple(Winningrade) *\n                    UsersInfo[msg.sender].eggsinfo[i].mul *\n                    PerEggPrice;\n\n                WinningAmount += WinningMoney;\n\n                Winninginfo memory winning = Winninginfo(\n                    LotteryNum,\n                    UsersInfo[msg.sender].eggsinfo[i].mul,\n                    uint40(block.timestamp),\n                    msg.sender\n                );\n\n                WinningRecord.push(winning);\n            }\n\n            OpenedLotInfo memory OpenedLotterys = OpenedLotInfo(\n                LotteryNum,\n                UsersInfo[msg.sender].eggsinfo[i].mul\n            );\n\n            UsersInfo[msg.sender].openedeggs.push(OpenedLotterys);\n        }\n\n        // 刪除用戶購買紀錄刪除避免重複開獎\n        delete UsersInfo[msg.sender].eggsinfo;\n\n        // 每次中獎金額不能超過總獎池的70%\n        if (WinningAmount > 0) {\n            uint256 MaxWinningAmount = SafeMathdiv(\n                SafeMathmul(\n                    SafeMathsub(\n                        address(this).balance,\n                        (InvestorsProfit + TotalReferralProfit + DevProfit)\n                    ),\n                    70\n                ),\n                100\n            );\n\n            if (WinningAmount > MaxWinningAmount)\n                WinningAmount = MaxWinningAmount;\n\n            uint256 profit = SafeMathdiv(SafeMathmul(WinningAmount, 5), 100);\n            InvestorsProfit += profit;\n            DevProfit += profit;\n\n            payable(msg.sender).transfer(WinningAmount - profit * 2);\n        }\n    }\n\n    // 投資者投資\n    function InvestmentDeposit() external payable {\n        // 判斷投資金額是否符合要求\n        require(\n            msg.value >= Mininum_Investment_amount &&\n                msg.value <= Maxinum_Investment_amount,\n            \"Investment amount beteween 1 and 1000\"\n        );\n\n        // 判斷獎池金額\n        require(\n            SafeMathsub(\n                address(this).balance,\n                (InvestorsProfit + TotalReferralProfit + DevProfit)\n            ) <= Maxinum_Investment_pool\n        );\n\n        // 累加總投資金額\n        TotalInvestmentAmount += msg.value;\n        // 累加該投資者投資金額\n        InvestorsBalance[msg.sender].balance += msg.value;\n        InvestorsBalance[msg.sender].LastInvestTime = block.timestamp;\n\n        // 判斷投資者是否是第一次投資\n        if (!InvestorsBalance[msg.sender].HasInvested) {\n            InvestorsBalance[msg.sender].HasInvested = true;\n            investors.push(msg.sender);\n        }\n    }\n\n    // 投資者退出\n    function InvestmentWithdrawal(uint256 WithdrawalAmount) external {\n        // 判斷取款金額是否大於最小投資金額\n        require(\n            WithdrawalAmount >= Mininum_Investment_amount,\n            \"Minimum investment amount is required,it's smaller than the minimum deposit\"\n        );\n\n        // 判斷金額是否足夠\n        require(\n            WithdrawalAmount <= InvestorsBalance[msg.sender].balance,\n            \"Not enough fund to withdraw!\"\n        );\n\n        // 判斷當前時間和上一次投資時間是否已經超過1周，1周以上才能退出投資\n        require(\n            block.timestamp >=\n                InvestorsBalance[msg.sender].LastInvestTime + 1 weeks,\n            \"Cannot withdraw after one week!\"\n        );\n\n        // 判斷獎池金額是否足夠，不足時無法取出\n        require(\n            SafeMathsub(\n                address(this).balance,\n                (InvestorsProfit + TotalReferralProfit + DevProfit)\n            ) >= WithdrawalAmount,\n            \"Insufficient fund to withdraw!\"\n        );\n\n        // 該投資者投資金額減去本次取款金額\n        InvestorsBalance[msg.sender].balance -= WithdrawalAmount;\n        // 總投資額也減去\n        TotalInvestmentAmount -= WithdrawalAmount;\n        // 把本次取款金額歸還\n        payable(msg.sender).transfer(WithdrawalAmount);\n    }\n\n    // 投資者分紅\n    function DistributeInvestmentIncome() external {\n        // 判斷發起者是否有資格 只有投資者或開發者才能夠發起分紅\n        require(\n            InvestorsBalance[msg.sender].balance >= Mininum_Investment_amount ||\n                msg.sender == DevAddress,\n            \"You must be a investor\"\n        );\n\n        uint256 Tmpinvestorsprofit = InvestorsProfit;\n        uint256 developeraward = 0;\n\n        // 總獎池超過10000時0.5%給投資者 0.5%給開發者\n        uint256 prizepool = SafeMathsub(\n            address(this).balance,\n            (InvestorsProfit + TotalReferralProfit + DevProfit)\n        );\n\n        if (prizepool >= Maxinum_Investment_pool) {\n            Tmpinvestorsprofit += prizepool / 200;\n            developeraward += prizepool / 200;\n        }\n        InvestorsProfit = 0;\n\n        for (uint256 i = 0; i < investors.length; i++) {\n            if (\n                InvestorsBalance[investors[i]].balance >=\n                Mininum_Investment_amount\n            ) {\n                // 他的分紅= 他的投資 / 總投資 * 投資者總收益\n\n                uint256 thisinvestorprofit = SafeMathdiv(\n                    SafeMathmul(\n                        InvestorsBalance[investors[i]].balance,\n                        Tmpinvestorsprofit\n                    ),\n                    TotalInvestmentAmount\n                );\n\n                payable(investors[i]).transfer(thisinvestorprofit);\n            }\n        }\n\n        if (developeraward > 0) {\n            payable(DevAddress).transfer(developeraward);\n        }\n    }\n\n    // 提取推薦者獎勵\n    function WithdrawReferralProfit() external {\n        // 推薦獎勵至少要有0.01才能提領\n        require(\n            UsersInfo[msg.sender].ReferralProfit >= 0.01 ether,\n            \"Not enough profit to withdraw!\"\n        );\n\n        uint256 profit = UsersInfo[msg.sender].ReferralProfit;\n        UsersInfo[msg.sender].ReferralProfit = 0;\n\n        TotalReferralProfit -= profit;\n        payable(msg.sender).transfer(profit);\n    }\n\n    // 提取開發者獎勵\n    function DeveloperWithdrawal() external {\n        require(msg.sender == DevAddress, \"You must be the developer\");\n        uint256 devprofit = DevProfit;\n        DevProfit = 0;\n\n        payable(DevAddress).transfer(devprofit);\n    }\n\n    // 查詢中獎紀錄\n    function GetWinningRecord(uint256 RecordCount)\n        public\n        view\n        returns (Winninginfo[] memory)\n    {\n        uint256 RecordCt = RecordCount;\n        uint256 WinningRecordLen = WinningRecord.length;\n\n        if (RecordCt > WinningRecordLen) {\n            RecordCt = WinningRecordLen;\n        }\n\n        Winninginfo[] memory LatelyWinnersRecord = new Winninginfo[](RecordCt);\n\n        for (uint256 i = 0; i < RecordCt; i++) {\n            LatelyWinnersRecord[i] = WinningRecord[WinningRecordLen - 1 - i];\n        }\n\n        return LatelyWinnersRecord;\n    }\n\n    // 查詢開獎資訊\n    function GetLatestLottery() public view returns (OpenedLotInfo[] memory) {\n        return UsersInfo[msg.sender].openedeggs;\n    }\n\n    // 查詢投資餘額\n    function GetInvestmentBalance(address addr) public view returns (uint256) {\n        return InvestorsBalance[addr].balance;\n    }\n\n    // 合約銷毀 當合約長久沒有玩開發者可以銷毀,已投資資金返回\n    function DestructContract() external {\n        require(msg.sender == DevAddress);\n        require(block.timestamp >= LastBuyEggTime + 15 days);\n\n        if (address(this).balance >= TotalInvestmentAmount) {\n            for (uint256 i = 0; i < investors.length; i++) {\n                if (\n                    InvestorsBalance[investors[i]].balance >=\n                    Mininum_Investment_amount\n                ) {\n                    payable(investors[i]).transfer(\n                        InvestorsBalance[investors[i]].balance\n                    );\n                }\n            }\n        } else {\n            // 如果不夠則以比例返回\n            uint256 contractBalance = address(this).balance;\n\n            if (contractBalance >= Mininum_Investment_amount) {\n                for (uint256 i = 0; i < investors.length; i++) {\n                    if (\n                        InvestorsBalance[investors[i]].balance >=\n                        Mininum_Investment_amount\n                    ) {\n                        // 投資者投資餘額 * 合約餘額 / 總投資金額\n                        payable(investors[i]).transfer(\n                            (InvestorsBalance[investors[i]].balance *\n                                contractBalance) / TotalInvestmentAmount\n                        );\n                    }\n                }\n            }\n        }\n\n        selfdestruct(payable(DevAddress));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Lottery.sol": {
				"LotteryGame": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "LotCount",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "mul",
									"type": "uint8"
								},
								{
									"internalType": "uint232",
									"name": "Lucknum",
									"type": "uint232"
								},
								{
									"internalType": "address",
									"name": "ref",
									"type": "address"
								}
							],
							"name": "BuyEggs",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DestructContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DevAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DeveloperWithdrawal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DistributeInvestmentIncome",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "GetInvestmentBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GetLatestLottery",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "Lotterynum",
											"type": "uint32"
										},
										{
											"internalType": "uint8",
											"name": "mul",
											"type": "uint8"
										}
									],
									"internalType": "struct LotteryGame.OpenedLotInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "RecordCount",
									"type": "uint256"
								}
							],
							"name": "GetWinningRecord",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "LotteryNum",
											"type": "uint32"
										},
										{
											"internalType": "uint8",
											"name": "mul",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "winner",
											"type": "address"
										}
									],
									"internalType": "struct LotteryGame.Winninginfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "InvestmentDeposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "WithdrawalAmount",
									"type": "uint256"
								}
							],
							"name": "InvestmentWithdrawal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "InvestorsProfit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "OpenEggs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RecentDividendTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TotalInvestmentAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WithdrawReferralProfit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Lottery.sol\":70:18486  contract LotteryGame {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Lottery.sol\":2929:3071  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Lottery.sol\":2953:2963  DevAddress */\n  0x00\n    /* \"contracts/Lottery.sol\":2953:2976  DevAddress = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Lottery.sol\":2966:2976  msg.sender */\n  caller\n    /* \"contracts/Lottery.sol\":2953:2976  DevAddress = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Lottery.sol\":3007:3022  block.timestamp */\n  timestamp\n    /* \"contracts/Lottery.sol\":2986:3004  RecentDividendTime */\n  0x06\n    /* \"contracts/Lottery.sol\":2986:3022  RecentDividendTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Lottery.sol\":3032:3046  LastBuyEggTime */\n  0x08\n    /* \"contracts/Lottery.sol\":3032:3064  LastBuyEggTime = block.timestamp */\n  sstore\n    /* \"contracts/Lottery.sol\":70:18486  contract LotteryGame {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Lottery.sol\":70:18486  contract LotteryGame {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa659f4dc\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xcf438305\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xcf438305\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd9498a83\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd5f6f4d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf4e79b5b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0xa659f4dc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb1c617ff\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc9ea0299\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xca6aae29\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x2b5baca1\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x2b5baca1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x49821332\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7da384fd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x89a4c1a0\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x12db1357\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x22629256\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x289f9019\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Lottery.sol\":13714:15297  function DistributeInvestmentIncome() external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/Lottery.sol\":15332:15771  function WithdrawReferralProfit() external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_21\n      tag_25\n      jump\t// in\n        /* \"contracts/Lottery.sol\":17057:18484  function DestructContract() external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_21\n      tag_28\n      jump\t// in\n        /* \"contracts/Lottery.sol\":16069:16642  function GetWinningRecord(uint256 RecordCount)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lottery.sol\":11279:12272  function InvestmentDeposit() external payable {... */\n    tag_6:\n      tag_21\n      tag_37\n      jump\t// in\n        /* \"contracts/Lottery.sol\":7857:11250  function OpenEggs() external {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_21\n      tag_40\n      jump\t// in\n        /* \"contracts/Lottery.sol\":1699:1724  address public DevAddress */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      sload(0x00)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_42:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1284:1316   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1266:1317   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1254:1256   */\n      0x20\n        /* \"#utility.yul\":1239:1257   */\n      add\n        /* \"contracts/Lottery.sol\":1699:1724  address public DevAddress */\n      tag_34\n        /* \"#utility.yul\":1120:1323   */\n      jump\n        /* \"contracts/Lottery.sol\":2079:2115  uint256 public TotalInvestmentAmount */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      sload(0x04)\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1474:1499   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1462:1464   */\n      0x20\n        /* \"#utility.yul\":1447:1465   */\n      add\n        /* \"contracts/Lottery.sol\":2079:2115  uint256 public TotalInvestmentAmount */\n      tag_34\n        /* \"#utility.yul\":1328:1505   */\n      jump\n        /* \"contracts/Lottery.sol\":2239:2272  uint256 public RecentDividendTime */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_47\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/Lottery.sol\":4155:6544  function BuyEggs(... */\n    tag_11:\n      tag_21\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"contracts/Lottery.sol\":2170:2200  uint256 public InvestorsProfit */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_47\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/Lottery.sol\":16835:16963  function GetInvestmentBalance(address addr) public view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_47\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":16926:16948  InvestorsBalance[addr] */\n      and\n        /* \"contracts/Lottery.sol\":16900:16907  uint256 */\n      0x00\n        /* \"contracts/Lottery.sol\":16926:16948  InvestorsBalance[addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":16926:16942  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":16926:16948  InvestorsBalance[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":16926:16956  InvestorsBalance[addr].balance */\n      sload\n      swap1\n        /* \"contracts/Lottery.sol\":16835:16963  function GetInvestmentBalance(address addr) public view returns (uint256) {... */\n      jump\n        /* \"contracts/Lottery.sol\":16674:16803  function GetLatestLottery() public view returns (OpenedLotInfo[] memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n        /* \"contracts/Lottery.sol\":12301:13685  function InvestmentWithdrawal(uint256 WithdrawalAmount) external {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_21\n      tag_76\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/Lottery.sol\":15806:16037  function DeveloperWithdrawal() external {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_21\n      tag_80\n      jump\t// in\n        /* \"contracts/Lottery.sol\":13714:15297  function DistributeInvestmentIncome() external {... */\n    tag_22:\n        /* \"contracts/Lottery.sol\":13900:13910  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":13883:13911  InvestorsBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":13883:13899  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":13883:13911  InvestorsBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":13883:13919  InvestorsBalance[msg.sender].balance */\n      sload\n        /* \"contracts/Lottery.sol\":1547:1554  1 ether */\n      0x0de0b6b3a7640000\n      gt\n        /* \"contracts/Lottery.sol\":13883:13948  InvestorsBalance[msg.sender].balance >= Mininum_Investment_amount */\n      iszero\n      dup1\n        /* \"contracts/Lottery.sol\":13883:13992  InvestorsBalance[msg.sender].balance >= Mininum_Investment_amount ||... */\n      tag_82\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":13982:13992  DevAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Lottery.sol\":13968:13978  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":13968:13992  msg.sender == DevAddress */\n      eq\n        /* \"contracts/Lottery.sol\":13883:13992  InvestorsBalance[msg.sender].balance >= Mininum_Investment_amount ||... */\n    tag_82:\n        /* \"contracts/Lottery.sol\":13862:14040  require(... */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3567:3569   */\n      0x20\n        /* \"contracts/Lottery.sol\":13862:14040  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3549:3570   */\n      mstore\n        /* \"#utility.yul\":3606:3608   */\n      0x16\n        /* \"#utility.yul\":3586:3604   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3579:3609   */\n      mstore\n      shl(0x51, 0x2cb7ba9036bab9ba10313290309034b73b32b9ba37b9)\n        /* \"#utility.yul\":3625:3643   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3618:3670   */\n      mstore\n        /* \"#utility.yul\":3687:3705   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":13862:14040  require(... */\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts/Lottery.sol\":14080:14095  InvestorsProfit */\n      sload(0x05)\n        /* \"contracts/Lottery.sol\":14331:14340  DevProfit */\n      sload(0x01)\n        /* \"contracts/Lottery.sol\":14309:14328  TotalReferralProfit */\n      sload(0x07)\n        /* \"contracts/Lottery.sol\":14051:14077  uint256 Tmpinvestorsprofit */\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"contracts/Lottery.sol\":14230:14351  SafeMathsub(... */\n      tag_86\n      swap2\n        /* \"contracts/Lottery.sol\":14255:14276  address(this).balance */\n      selfbalance\n      swap2\n        /* \"contracts/Lottery.sol\":14291:14328  InvestorsProfit + TotalReferralProfit */\n      tag_87\n      swap1\n        /* \"contracts/Lottery.sol\":14080:14095  InvestorsProfit */\n      dup8\n        /* \"contracts/Lottery.sol\":14291:14328  InvestorsProfit + TotalReferralProfit */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/Lottery.sol\":14291:14340  InvestorsProfit + TotalReferralProfit + DevProfit */\n      tag_89\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_89:\n        /* \"contracts/Lottery.sol\":14230:14241  SafeMathsub */\n      tag_90\n        /* \"contracts/Lottery.sol\":14230:14351  SafeMathsub(... */\n      jump\t// in\n    tag_86:\n        /* \"contracts/Lottery.sol\":14210:14351  uint256 prizepool = SafeMathsub(... */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":1438:1449  10000 ether */\n      0x021e19e0c9bab2400000\n        /* \"contracts/Lottery.sol\":14366:14375  prizepool */\n      dup2\n        /* \"contracts/Lottery.sol\":14366:14402  prizepool >= Maxinum_Investment_pool */\n      lt\n        /* \"contracts/Lottery.sol\":14362:14513  if (prizepool >= Maxinum_Investment_pool) {... */\n      tag_91\n      jumpi\n        /* \"contracts/Lottery.sol\":14440:14455  prizepool / 200 */\n      tag_92\n        /* \"contracts/Lottery.sol\":14452:14455  200 */\n      0xc8\n        /* \"contracts/Lottery.sol\":14440:14449  prizepool */\n      dup3\n        /* \"contracts/Lottery.sol\":14440:14455  prizepool / 200 */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contracts/Lottery.sol\":14418:14455  Tmpinvestorsprofit += prizepool / 200 */\n      tag_94\n      swap1\n      dup5\n      tag_88\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n        /* \"contracts/Lottery.sol\":14487:14502  prizepool / 200 */\n      tag_95\n        /* \"contracts/Lottery.sol\":14499:14502  200 */\n      0xc8\n        /* \"contracts/Lottery.sol\":14487:14496  prizepool */\n      dup3\n        /* \"contracts/Lottery.sol\":14487:14502  prizepool / 200 */\n      tag_93\n      jump\t// in\n    tag_95:\n        /* \"contracts/Lottery.sol\":14469:14502  developeraward += prizepool / 200 */\n      tag_96\n      swap1\n      dup4\n      tag_88\n      jump\t// in\n    tag_96:\n      swap2\n      pop\n        /* \"contracts/Lottery.sol\":14362:14513  if (prizepool >= Maxinum_Investment_pool) {... */\n    tag_91:\n        /* \"contracts/Lottery.sol\":14540:14541  0 */\n      0x00\n        /* \"contracts/Lottery.sol\":14522:14537  InvestorsProfit */\n      0x05\n        /* \"contracts/Lottery.sol\":14522:14541  InvestorsProfit = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Lottery.sol\":14552:15188  for (uint256 i = 0; i < investors.length; i++) {... */\n    tag_97:\n        /* \"contracts/Lottery.sol\":14576:14585  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":14576:14592  investors.length */\n      sload\n        /* \"contracts/Lottery.sol\":14572:14592  i < investors.length */\n      dup2\n      lt\n        /* \"contracts/Lottery.sol\":14552:15188  for (uint256 i = 0; i < investors.length; i++) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"contracts/Lottery.sol\":1547:1554  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Lottery.sol\":14634:14650  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":14634:14664  InvestorsBalance[investors[i]] */\n      0x00\n        /* \"contracts/Lottery.sol\":14651:14660  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":14661:14662  i */\n      dup5\n        /* \"contracts/Lottery.sol\":14651:14663  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":14634:14664  InvestorsBalance[investors[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":14634:14672  InvestorsBalance[investors[i]].balance */\n      sload\n        /* \"contracts/Lottery.sol\":14634:14717  InvestorsBalance[investors[i]].balance >=... */\n      lt\n        /* \"contracts/Lottery.sol\":14613:15178  if (... */\n      tag_104\n      jumpi\n        /* \"contracts/Lottery.sol\":14830:14856  uint256 thisinvestorprofit */\n      0x00\n        /* \"contracts/Lottery.sol\":14859:15094  SafeMathdiv(... */\n      tag_105\n        /* \"contracts/Lottery.sol\":14892:15033  SafeMathmul(... */\n      tag_106\n        /* \"contracts/Lottery.sol\":14929:14945  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":14929:14959  InvestorsBalance[investors[i]] */\n      0x00\n        /* \"contracts/Lottery.sol\":14946:14955  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":14956:14957  i */\n      dup7\n        /* \"contracts/Lottery.sol\":14946:14958  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_108\n      jumpi\n      tag_108\n      tag_102\n      jump\t// in\n    tag_108:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":14929:14959  InvestorsBalance[investors[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":14929:14967  InvestorsBalance[investors[i]].balance */\n      sload\n        /* \"contracts/Lottery.sol\":14993:15011  Tmpinvestorsprofit */\n      dup8\n        /* \"contracts/Lottery.sol\":14892:14903  SafeMathmul */\n      tag_110\n        /* \"contracts/Lottery.sol\":14892:15033  SafeMathmul(... */\n      jump\t// in\n    tag_106:\n        /* \"contracts/Lottery.sol\":15055:15076  TotalInvestmentAmount */\n      sload(0x04)\n        /* \"contracts/Lottery.sol\":14859:14870  SafeMathdiv */\n      tag_111\n        /* \"contracts/Lottery.sol\":14859:15094  SafeMathdiv(... */\n      jump\t// in\n    tag_105:\n        /* \"contracts/Lottery.sol\":14830:15094  uint256 thisinvestorprofit = SafeMathdiv(... */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":15121:15130  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":15131:15132  i */\n      dup3\n        /* \"contracts/Lottery.sol\":15121:15133  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_113\n      tag_102\n      jump\t// in\n    tag_113:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"contracts/Lottery.sol\":15113:15163  payable(investors[i]).transfer(thisinvestorprofit) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":15121:15133  investors[i] */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/Lottery.sol\":15113:15163  payable(investors[i]).transfer(thisinvestorprofit) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/Lottery.sol\":15144:15162  thisinvestorprofit */\n      dup5\n      swap2\n        /* \"contracts/Lottery.sol\":15113:15163  payable(investors[i]).transfer(thisinvestorprofit) */\n      dup2\n        /* \"contracts/Lottery.sol\":15121:15133  investors[i] */\n      dup2\n        /* \"contracts/Lottery.sol\":15113:15163  payable(investors[i]).transfer(thisinvestorprofit) */\n      dup2\n        /* \"contracts/Lottery.sol\":15144:15162  thisinvestorprofit */\n      dup6\n        /* \"contracts/Lottery.sol\":15121:15133  investors[i] */\n      dup9\n        /* \"contracts/Lottery.sol\":15113:15163  payable(investors[i]).transfer(thisinvestorprofit) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n        /* \"contracts/Lottery.sol\":14732:15178  {... */\n      pop\n        /* \"contracts/Lottery.sol\":14613:15178  if (... */\n    tag_104:\n        /* \"contracts/Lottery.sol\":14594:14597  i++ */\n      0x01\n      add\n        /* \"contracts/Lottery.sol\":14552:15188  for (uint256 i = 0; i < investors.length; i++) {... */\n      jump(tag_97)\n    tag_98:\n      pop\n        /* \"contracts/Lottery.sol\":15202:15220  developeraward > 0 */\n      dup2\n      iszero\n        /* \"contracts/Lottery.sol\":15198:15291  if (developeraward > 0) {... */\n      tag_117\n      jumpi\n        /* \"contracts/Lottery.sol\":15244:15254  DevAddress */\n      0x00\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":15236:15280  payable(DevAddress).transfer(developeraward) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":15244:15254  DevAddress */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/Lottery.sol\":15236:15280  payable(DevAddress).transfer(developeraward) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/Lottery.sol\":15265:15279  developeraward */\n      dup6\n      swap2\n        /* \"contracts/Lottery.sol\":15236:15280  payable(DevAddress).transfer(developeraward) */\n      dup2\n        /* \"contracts/Lottery.sol\":15244:15254  DevAddress */\n      dup2\n        /* \"contracts/Lottery.sol\":15236:15280  payable(DevAddress).transfer(developeraward) */\n      dup2\n        /* \"contracts/Lottery.sol\":15265:15279  developeraward */\n      dup6\n        /* \"contracts/Lottery.sol\":15244:15254  DevAddress */\n      dup9\n        /* \"contracts/Lottery.sol\":15236:15280  payable(DevAddress).transfer(developeraward) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n        /* \"contracts/Lottery.sol\":15198:15291  if (developeraward > 0) {... */\n    tag_117:\n        /* \"contracts/Lottery.sol\":13761:15297  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Lottery.sol\":13714:15297  function DistributeInvestmentIncome() external {... */\n      jump\t// out\n        /* \"contracts/Lottery.sol\":15332:15771  function WithdrawReferralProfit() external {... */\n    tag_25:\n        /* \"contracts/Lottery.sol\":15468:15478  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":15458:15479  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":15458:15467  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":15458:15479  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":15458:15494  UsersInfo[msg.sender].ReferralProfit */\n      0x02\n      add\n      sload\n        /* \"contracts/Lottery.sol\":15498:15508  0.01 ether */\n      0x2386f26fc10000\n      gt\n        /* \"contracts/Lottery.sol\":15458:15508  UsersInfo[msg.sender].ReferralProfit >= 0.01 ether */\n      iszero\n        /* \"contracts/Lottery.sol\":15437:15564  require(... */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4534:4536   */\n      0x20\n        /* \"contracts/Lottery.sol\":15437:15564  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4516:4537   */\n      mstore\n        /* \"#utility.yul\":4573:4575   */\n      0x1e\n        /* \"#utility.yul\":4553:4571   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4546:4576   */\n      mstore\n        /* \"#utility.yul\":4612:4644   */\n      0x4e6f7420656e6f7567682070726f66697420746f207769746864726177210000\n        /* \"#utility.yul\":4592:4610   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4585:4645   */\n      mstore\n        /* \"#utility.yul\":4662:4680   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":15437:15564  require(... */\n      tag_84\n        /* \"#utility.yul\":4332:4686   */\n      jump\n        /* \"contracts/Lottery.sol\":15437:15564  require(... */\n    tag_121:\n        /* \"contracts/Lottery.sol\":15602:15612  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":15575:15589  uint256 profit */\n      0x00\n        /* \"contracts/Lottery.sol\":15592:15613  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":15592:15601  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":15592:15613  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":15592:15628  UsersInfo[msg.sender].ReferralProfit */\n      0x02\n      add\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":15638:15678  UsersInfo[msg.sender].ReferralProfit = 0 */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Lottery.sol\":15689:15708  TotalReferralProfit */\n      0x07\n        /* \"contracts/Lottery.sol\":15689:15718  TotalReferralProfit -= profit */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":15592:15628  UsersInfo[msg.sender].ReferralProfit */\n      swap2\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Lottery.sol\":15689:15718  TotalReferralProfit -= profit */\n      tag_124\n      swap1\n        /* \"contracts/Lottery.sol\":15592:15628  UsersInfo[msg.sender].ReferralProfit */\n      dup5\n      swap1\n        /* \"contracts/Lottery.sol\":15689:15718  TotalReferralProfit -= profit */\n      tag_125\n      jump\t// in\n    tag_124:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Lottery.sol\":15728:15764  payable(msg.sender).transfer(profit) */\n      mload(0x40)\n        /* \"contracts/Lottery.sol\":15736:15746  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Lottery.sol\":15728:15764  payable(msg.sender).transfer(profit) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/Lottery.sol\":15757:15763  profit */\n      dup4\n      swap1\n        /* \"contracts/Lottery.sol\":15728:15764  payable(msg.sender).transfer(profit) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/Lottery.sol\":15757:15763  profit */\n      dup6\n        /* \"contracts/Lottery.sol\":15736:15746  msg.sender */\n      dup9\n        /* \"contracts/Lottery.sol\":15728:15764  payable(msg.sender).transfer(profit) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n        /* \"contracts/Lottery.sol\":15375:15771  {... */\n      pop\n        /* \"contracts/Lottery.sol\":15332:15771  function WithdrawReferralProfit() external {... */\n      jump\t// out\n        /* \"contracts/Lottery.sol\":17057:18484  function DestructContract() external {... */\n    tag_28:\n        /* \"contracts/Lottery.sol\":17126:17136  DevAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Lottery.sol\":17112:17122  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":17112:17136  msg.sender == DevAddress */\n      eq\n        /* \"contracts/Lottery.sol\":17104:17137  require(msg.sender == DevAddress) */\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n        /* \"contracts/Lottery.sol\":17174:17188  LastBuyEggTime */\n      sload(0x08)\n        /* \"contracts/Lottery.sol\":17174:17198  LastBuyEggTime + 15 days */\n      tag_130\n      swap1\n        /* \"contracts/Lottery.sol\":17191:17198  15 days */\n      0x13c680\n        /* \"contracts/Lottery.sol\":17174:17198  LastBuyEggTime + 15 days */\n      tag_88\n      jump\t// in\n    tag_130:\n        /* \"contracts/Lottery.sol\":17155:17170  block.timestamp */\n      timestamp\n        /* \"contracts/Lottery.sol\":17155:17198  block.timestamp >= LastBuyEggTime + 15 days */\n      lt\n      iszero\n        /* \"contracts/Lottery.sol\":17147:17199  require(block.timestamp >= LastBuyEggTime + 15 days) */\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n        /* \"contracts/Lottery.sol\":17239:17260  TotalInvestmentAmount */\n      sload(0x04)\n        /* \"contracts/Lottery.sol\":17214:17235  address(this).balance */\n      selfbalance\n        /* \"contracts/Lottery.sol\":17214:17260  address(this).balance >= TotalInvestmentAmount */\n      lt\n        /* \"contracts/Lottery.sol\":17210:18434  if (address(this).balance >= TotalInvestmentAmount) {... */\n      tag_132\n      jumpi\n        /* \"contracts/Lottery.sol\":17281:17290  uint256 i */\n      0x00\n        /* \"contracts/Lottery.sol\":17276:17643  for (uint256 i = 0; i < investors.length; i++) {... */\n    tag_133:\n        /* \"contracts/Lottery.sol\":17300:17309  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":17300:17316  investors.length */\n      sload\n        /* \"contracts/Lottery.sol\":17296:17316  i < investors.length */\n      dup2\n      lt\n        /* \"contracts/Lottery.sol\":17276:17643  for (uint256 i = 0; i < investors.length; i++) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"contracts/Lottery.sol\":1547:1554  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Lottery.sol\":17366:17382  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":17366:17396  InvestorsBalance[investors[i]] */\n      0x00\n        /* \"contracts/Lottery.sol\":17383:17392  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":17393:17394  i */\n      dup5\n        /* \"contracts/Lottery.sol\":17383:17395  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_137\n      jumpi\n      tag_137\n      tag_102\n      jump\t// in\n    tag_137:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":17366:17396  InvestorsBalance[investors[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":17366:17404  InvestorsBalance[investors[i]].balance */\n      sload\n        /* \"contracts/Lottery.sol\":17366:17453  InvestorsBalance[investors[i]].balance >=... */\n      lt\n        /* \"contracts/Lottery.sol\":17341:17629  if (... */\n      tag_139\n      jumpi\n        /* \"contracts/Lottery.sol\":17502:17511  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":17512:17513  i */\n      dup2\n        /* \"contracts/Lottery.sol\":17502:17514  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_141\n      jumpi\n      tag_141\n      tag_102\n      jump\t// in\n    tag_141:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"contracts/Lottery.sol\":17567:17576  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":17567:17579  investors[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":17502:17514  investors[i] */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/Lottery.sol\":17494:17610  payable(investors[i]).transfer(... */\n      0x08fc\n      swap3\n        /* \"contracts/Lottery.sol\":17550:17566  InvestorsBalance */\n      0x03\n      swap3\n        /* \"contracts/Lottery.sol\":17567:17576  investors */\n      swap1\n        /* \"contracts/Lottery.sol\":17577:17578  i */\n      dup7\n      swap1\n        /* \"contracts/Lottery.sol\":17567:17579  investors[i] */\n      dup2\n      lt\n      tag_144\n      jumpi\n      tag_144\n      tag_102\n      jump\t// in\n    tag_144:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":17550:17580  InvestorsBalance[investors[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      dup3\n      keccak256\n        /* \"contracts/Lottery.sol\":17550:17588  InvestorsBalance[investors[i]].balance */\n      sload\n        /* \"contracts/Lottery.sol\":17494:17610  payable(investors[i]).transfer(... */\n      swap1\n      mload\n      dup2\n      iszero\n      swap1\n      swap4\n      mul\n      swap3\n        /* \"contracts/Lottery.sol\":17550:17588  InvestorsBalance[investors[i]].balance */\n      swap1\n      swap2\n        /* \"contracts/Lottery.sol\":17494:17610  payable(investors[i]).transfer(... */\n      dup2\n        /* \"contracts/Lottery.sol\":17567:17579  investors[i] */\n      dup2\n        /* \"contracts/Lottery.sol\":17494:17610  payable(investors[i]).transfer(... */\n      dup2\n        /* \"contracts/Lottery.sol\":17550:17588  InvestorsBalance[investors[i]].balance */\n      dup6\n        /* \"contracts/Lottery.sol\":17494:17610  payable(investors[i]).transfer(... */\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n        /* \"contracts/Lottery.sol\":17341:17629  if (... */\n    tag_139:\n        /* \"contracts/Lottery.sol\":17318:17321  i++ */\n      0x01\n      add\n        /* \"contracts/Lottery.sol\":17276:17643  for (uint256 i = 0; i < investors.length; i++) {... */\n      jump(tag_133)\n    tag_134:\n      pop\n        /* \"contracts/Lottery.sol\":17210:18434  if (address(this).balance >= TotalInvestmentAmount) {... */\n      jump(tag_148)\n    tag_132:\n        /* \"contracts/Lottery.sol\":17745:17766  address(this).balance */\n      selfbalance\n        /* \"contracts/Lottery.sol\":1547:1554  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Lottery.sol\":17785:17829  contractBalance >= Mininum_Investment_amount */\n      dup2\n      lt\n        /* \"contracts/Lottery.sol\":17781:18424  if (contractBalance >= Mininum_Investment_amount) {... */\n      tag_149\n      jumpi\n        /* \"contracts/Lottery.sol\":17854:17863  uint256 i */\n      0x00\n        /* \"contracts/Lottery.sol\":17849:18410  for (uint256 i = 0; i < investors.length; i++) {... */\n    tag_150:\n        /* \"contracts/Lottery.sol\":17873:17882  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":17873:17889  investors.length */\n      sload\n        /* \"contracts/Lottery.sol\":17869:17889  i < investors.length */\n      dup2\n      lt\n        /* \"contracts/Lottery.sol\":17849:18410  for (uint256 i = 0; i < investors.length; i++) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/Lottery.sol\":1547:1554  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Lottery.sol\":17947:17963  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":17947:17977  InvestorsBalance[investors[i]] */\n      0x00\n        /* \"contracts/Lottery.sol\":17964:17973  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":17974:17975  i */\n      dup5\n        /* \"contracts/Lottery.sol\":17964:17976  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_154\n      tag_102\n      jump\t// in\n    tag_154:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":17947:17977  InvestorsBalance[investors[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":17947:17985  InvestorsBalance[investors[i]].balance */\n      sload\n        /* \"contracts/Lottery.sol\":17947:18038  InvestorsBalance[investors[i]].balance >=... */\n      lt\n        /* \"contracts/Lottery.sol\":17918:18392  if (... */\n      tag_156\n      jumpi\n        /* \"contracts/Lottery.sol\":18177:18186  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":18187:18188  i */\n      dup2\n        /* \"contracts/Lottery.sol\":18177:18189  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_102\n      jump\t// in\n    tag_158:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"contracts/Lottery.sol\":18322:18343  TotalInvestmentAmount */\n      sload(0x04)\n        /* \"contracts/Lottery.sol\":18247:18256  investors */\n      0x02\n        /* \"contracts/Lottery.sol\":18247:18259  investors[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":18177:18189  investors[i] */\n      swap1\n      swap4\n      and\n      swap4\n        /* \"contracts/Lottery.sol\":18169:18369  payable(investors[i]).transfer(... */\n      0x08fc\n      swap4\n        /* \"contracts/Lottery.sol\":18303:18318  contractBalance */\n      dup8\n      swap3\n        /* \"contracts/Lottery.sol\":18230:18246  InvestorsBalance */\n      0x03\n      swap3\n        /* \"contracts/Lottery.sol\":18177:18189  investors[i] */\n      swap2\n        /* \"contracts/Lottery.sol\":18257:18258  i */\n      dup9\n      swap1\n        /* \"contracts/Lottery.sol\":18247:18259  investors[i] */\n      dup2\n      lt\n      tag_161\n      jumpi\n      tag_161\n      tag_102\n      jump\t// in\n    tag_161:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":18230:18260  InvestorsBalance[investors[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":18230:18268  InvestorsBalance[investors[i]].balance */\n      sload\n        /* \"contracts/Lottery.sol\":18230:18318  InvestorsBalance[investors[i]].balance *... */\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"contracts/Lottery.sol\":18229:18343  (InvestorsBalance[investors[i]].balance *... */\n      tag_165\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_165:\n        /* \"contracts/Lottery.sol\":18169:18369  payable(investors[i]).transfer(... */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n        /* \"contracts/Lottery.sol\":17918:18392  if (... */\n    tag_156:\n        /* \"contracts/Lottery.sol\":17891:17894  i++ */\n      0x01\n      add\n        /* \"contracts/Lottery.sol\":17849:18410  for (uint256 i = 0; i < investors.length; i++) {... */\n      jump(tag_150)\n    tag_151:\n      pop\n        /* \"contracts/Lottery.sol\":17781:18424  if (contractBalance >= Mininum_Investment_amount) {... */\n    tag_149:\n        /* \"contracts/Lottery.sol\":17659:18434  {... */\n      pop\n        /* \"contracts/Lottery.sol\":17210:18434  if (address(this).balance >= TotalInvestmentAmount) {... */\n    tag_148:\n        /* \"contracts/Lottery.sol\":18465:18475  DevAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Lottery.sol\":18444:18477  selfdestruct(payable(DevAddress)) */\n      selfdestruct\n        /* \"contracts/Lottery.sol\":16069:16642  function GetWinningRecord(uint256 RecordCount)... */\n    tag_33:\n        /* \"contracts/Lottery.sol\":16264:16277  WinningRecord */\n      0x0b\n        /* \"contracts/Lottery.sol\":16264:16284  WinningRecord.length */\n      sload\n        /* \"contracts/Lottery.sol\":16161:16181  Winninginfo[] memory */\n      0x60\n      swap1\n        /* \"contracts/Lottery.sol\":16216:16227  RecordCount */\n      dup3\n      swap1\n        /* \"contracts/Lottery.sol\":16299:16326  RecordCt > WinningRecordLen */\n      dup1\n      dup3\n      gt\n        /* \"contracts/Lottery.sol\":16295:16380  if (RecordCt > WinningRecordLen) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"contracts/Lottery.sol\":16353:16369  WinningRecordLen */\n      dup1\n        /* \"contracts/Lottery.sol\":16342:16369  RecordCt = WinningRecordLen */\n      swap2\n      pop\n        /* \"contracts/Lottery.sol\":16295:16380  if (RecordCt > WinningRecordLen) {... */\n    tag_169:\n        /* \"contracts/Lottery.sol\":16390:16430  Winninginfo[] memory LatelyWinnersRecord */\n      0x00\n        /* \"contracts/Lottery.sol\":16451:16459  RecordCt */\n      dup3\n        /* \"contracts/Lottery.sol\":16433:16460  new Winninginfo[](RecordCt) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_171\n      jumpi\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_173\n      jumpi\n      dup2\n      0x20\n      add\n    tag_174:\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      swap3\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n      dup3\n      mstore\n      not(0x00)\n      swap1\n      swap3\n      add\n      swap2\n      add\n      dup2\n      tag_174\n      jumpi\n      swap1\n      pop\n    tag_173:\n      pop\n        /* \"contracts/Lottery.sol\":16390:16460  Winninginfo[] memory LatelyWinnersRecord = new Winninginfo[](RecordCt) */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":16476:16485  uint256 i */\n      0x00\n        /* \"contracts/Lottery.sol\":16471:16599  for (uint256 i = 0; i < RecordCt; i++) {... */\n    tag_177:\n        /* \"contracts/Lottery.sol\":16495:16503  RecordCt */\n      dup4\n        /* \"contracts/Lottery.sol\":16491:16492  i */\n      dup2\n        /* \"contracts/Lottery.sol\":16491:16503  i < RecordCt */\n      lt\n        /* \"contracts/Lottery.sol\":16471:16599  for (uint256 i = 0; i < RecordCt; i++) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/Lottery.sol\":16549:16562  WinningRecord */\n      0x0b\n        /* \"contracts/Lottery.sol\":16586:16587  i */\n      dup2\n        /* \"contracts/Lottery.sol\":16563:16583  WinningRecordLen - 1 */\n      tag_180\n        /* \"contracts/Lottery.sol\":16582:16583  1 */\n      0x01\n        /* \"contracts/Lottery.sol\":16563:16579  WinningRecordLen */\n      dup7\n        /* \"contracts/Lottery.sol\":16563:16583  WinningRecordLen - 1 */\n      tag_125\n      jump\t// in\n    tag_180:\n        /* \"contracts/Lottery.sol\":16563:16587  WinningRecordLen - 1 - i */\n      tag_181\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_181:\n        /* \"contracts/Lottery.sol\":16549:16588  WinningRecord[WinningRecordLen - 1 - i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_183\n      jumpi\n      tag_183\n      tag_102\n      jump\t// in\n    tag_183:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":16524:16588  LatelyWinnersRecord[i] = WinningRecord[WinningRecordLen - 1 - i] */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/Lottery.sol\":16549:16588  WinningRecord[WinningRecordLen - 1 - i] */\n      0x03\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/Lottery.sol\":16524:16588  LatelyWinnersRecord[i] = WinningRecord[WinningRecordLen - 1 - i] */\n      dup1\n      sload\n      0xffffffff\n      dup2\n      and\n      dup5\n      mstore\n      0xff\n      0x0100000000\n      swap1\n      swap2\n      div\n      and\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      mstore\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/Lottery.sol\":16524:16546  LatelyWinnersRecord[i] */\n      dup3\n      mload\n        /* \"contracts/Lottery.sol\":16524:16543  LatelyWinnersRecord */\n      dup4\n      swap1\n        /* \"contracts/Lottery.sol\":16544:16545  i */\n      dup4\n      swap1\n        /* \"contracts/Lottery.sol\":16524:16546  LatelyWinnersRecord[i] */\n      dup2\n      lt\n      tag_186\n      jumpi\n      tag_186\n      tag_102\n      jump\t// in\n    tag_186:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Lottery.sol\":16524:16588  LatelyWinnersRecord[i] = WinningRecord[WinningRecordLen - 1 - i] */\n      mstore\n        /* \"contracts/Lottery.sol\":16505:16508  i++ */\n      0x01\n      add\n        /* \"contracts/Lottery.sol\":16471:16599  for (uint256 i = 0; i < RecordCt; i++) {... */\n      jump(tag_177)\n    tag_178:\n      pop\n        /* \"contracts/Lottery.sol\":16616:16635  LatelyWinnersRecord */\n      swap5\n        /* \"contracts/Lottery.sol\":16069:16642  function GetWinningRecord(uint256 RecordCount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":11279:12272  function InvestmentDeposit() external payable {... */\n    tag_37:\n        /* \"contracts/Lottery.sol\":1547:1554  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Lottery.sol\":11404:11413  msg.value */\n      callvalue\n        /* \"contracts/Lottery.sol\":11404:11442  msg.value >= Mininum_Investment_amount */\n      lt\n      iszero\n        /* \"contracts/Lottery.sol\":11404:11500  msg.value >= Mininum_Investment_amount &&... */\n      dup1\n      iszero\n      tag_188\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":1648:1658  1000 ether */\n      0x3635c9adc5dea00000\n        /* \"contracts/Lottery.sol\":11462:11471  msg.value */\n      callvalue\n        /* \"contracts/Lottery.sol\":11462:11500  msg.value <= Maxinum_Investment_amount */\n      gt\n      iszero\n        /* \"contracts/Lottery.sol\":11404:11500  msg.value >= Mininum_Investment_amount &&... */\n    tag_188:\n        /* \"contracts/Lottery.sol\":11383:11563  require(... */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5331:5333   */\n      0x20\n        /* \"contracts/Lottery.sol\":11383:11563  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5313:5334   */\n      mstore\n        /* \"#utility.yul\":5370:5372   */\n      0x25\n        /* \"#utility.yul\":5350:5368   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5343:5373   */\n      mstore\n        /* \"#utility.yul\":5409:5443   */\n      0x496e766573746d656e7420616d6f756e7420626574657765656e203120616e64\n        /* \"#utility.yul\":5389:5407   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5382:5444   */\n      mstore\n      shl(0xdc, 0x0203130303)\n        /* \"#utility.yul\":5460:5478   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5453:5488   */\n      mstore\n        /* \"#utility.yul\":5505:5524   */\n      0x84\n      add\n        /* \"contracts/Lottery.sol\":11383:11563  require(... */\n      tag_84\n        /* \"#utility.yul\":5129:5530   */\n      jump\n        /* \"contracts/Lottery.sol\":11383:11563  require(... */\n    tag_189:\n        /* \"contracts/Lottery.sol\":1438:1449  10000 ether */\n      0x021e19e0c9bab2400000\n        /* \"contracts/Lottery.sol\":11625:11758  SafeMathsub(... */\n      tag_192\n        /* \"contracts/Lottery.sol\":11654:11675  address(this).balance */\n      selfbalance\n        /* \"contracts/Lottery.sol\":11734:11743  DevProfit */\n      sload(0x01)\n        /* \"contracts/Lottery.sol\":11712:11731  TotalReferralProfit */\n      sload(0x07)\n        /* \"contracts/Lottery.sol\":11694:11709  InvestorsProfit */\n      sload(0x05)\n        /* \"contracts/Lottery.sol\":11694:11731  InvestorsProfit + TotalReferralProfit */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n        /* \"contracts/Lottery.sol\":11625:11758  SafeMathsub(... */\n    tag_192:\n        /* \"contracts/Lottery.sol\":11625:11785  SafeMathsub(... */\n      gt\n      iszero\n        /* \"contracts/Lottery.sol\":11604:11795  require(... */\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n        /* \"contracts/Lottery.sol\":11864:11873  msg.value */\n      callvalue\n        /* \"contracts/Lottery.sol\":11839:11860  TotalInvestmentAmount */\n      0x04\n      0x00\n        /* \"contracts/Lottery.sol\":11839:11873  TotalInvestmentAmount += msg.value */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_196:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Lottery.sol\":11942:11952  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":11925:11953  InvestorsBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":11925:11941  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":11925:11953  InvestorsBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":11925:11974  InvestorsBalance[msg.sender].balance += msg.value */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":11965:11974  msg.value */\n      callvalue\n      swap3\n        /* \"contracts/Lottery.sol\":11925:11953  InvestorsBalance[msg.sender] */\n      swap1\n        /* \"contracts/Lottery.sol\":11925:11974  InvestorsBalance[msg.sender].balance += msg.value */\n      tag_197\n      swap1\n        /* \"contracts/Lottery.sol\":11965:11974  msg.value */\n      dup5\n      swap1\n        /* \"contracts/Lottery.sol\":11925:11974  InvestorsBalance[msg.sender].balance += msg.value */\n      tag_88\n      jump\t// in\n    tag_197:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Lottery.sol\":12001:12011  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":11984:12012  InvestorsBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":11984:12000  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":11984:12012  InvestorsBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":12030:12045  block.timestamp */\n      timestamp\n        /* \"contracts/Lottery.sol\":11984:12027  InvestorsBalance[msg.sender].LastInvestTime */\n      0x01\n      dup3\n      add\n        /* \"contracts/Lottery.sol\":11984:12045  InvestorsBalance[msg.sender].LastInvestTime = block.timestamp */\n      sstore\n        /* \"contracts/Lottery.sol\":12112:12152  InvestorsBalance[msg.sender].HasInvested */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Lottery.sol\":12107:12266  if (!InvestorsBalance[msg.sender].HasInvested) {... */\n      tag_198\n      jumpi\n        /* \"contracts/Lottery.sol\":12185:12195  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":12168:12196  InvestorsBalance[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":12168:12184  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":12168:12196  InvestorsBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":12168:12208  InvestorsBalance[msg.sender].HasInvested */\n      0x02\n      swap1\n      dup2\n      add\n        /* \"contracts/Lottery.sol\":12168:12215  InvestorsBalance[msg.sender].HasInvested = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Lottery.sol\":12211:12215  true */\n      0x01\n        /* \"contracts/Lottery.sol\":12168:12215  InvestorsBalance[msg.sender].HasInvested = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Lottery.sol\":12229:12255  investors.push(msg.sender) */\n      dup2\n      sload\n      swap1\n      dup2\n      add\n      dup3\n      sstore\n      swap2\n      mstore\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Lottery.sol\":12107:12266  if (!InvestorsBalance[msg.sender].HasInvested) {... */\n    tag_198:\n        /* \"contracts/Lottery.sol\":11279:12272  function InvestmentDeposit() external payable {... */\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7857:11250  function OpenEggs() external {... */\n    tag_40:\n        /* \"contracts/Lottery.sol\":7984:7994  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":8014:8015  0 */\n      0x00\n        /* \"contracts/Lottery.sol\":7974:7995  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":7974:7983  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":7974:7995  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":7974:8011  UsersInfo[msg.sender].eggsinfo.length */\n      sload\n        /* \"contracts/Lottery.sol\":7953:8078  require(... */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5737:5739   */\n      0x20\n        /* \"contracts/Lottery.sol\":7953:8078  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5719:5740   */\n      mstore\n        /* \"#utility.yul\":5776:5778   */\n      0x25\n        /* \"#utility.yul\":5756:5774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5749:5779   */\n      mstore\n        /* \"#utility.yul\":5815:5849   */\n      0x596f7520646f6e2774206861766520756e64726177206c6f7474657279207469\n        /* \"#utility.yul\":5795:5813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5788:5850   */\n      mstore\n      shl(0xd8, 0x636b657473)\n        /* \"#utility.yul\":5866:5884   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5859:5894   */\n      mstore\n        /* \"#utility.yul\":5911:5930   */\n      0x84\n      add\n        /* \"contracts/Lottery.sol\":7953:8078  require(... */\n      tag_84\n        /* \"#utility.yul\":5535:5936   */\n      jump\n        /* \"contracts/Lottery.sol\":7953:8078  require(... */\n    tag_201:\n        /* \"contracts/Lottery.sol\":8267:8277  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":8257:8278  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":8257:8266  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":8257:8278  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":8309:8346  UsersInfo[msg.sender].eggsinfo.length */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":8309:8350  UsersInfo[msg.sender].eggsinfo.length - 1 */\n      tag_204\n      swap1\n        /* \"contracts/Lottery.sol\":8349:8350  1 */\n      0x01\n      swap1\n        /* \"contracts/Lottery.sol\":8309:8350  UsersInfo[msg.sender].eggsinfo.length - 1 */\n      tag_125\n      jump\t// in\n    tag_204:\n        /* \"contracts/Lottery.sol\":8257:8351  UsersInfo[msg.sender]... */\n      dup2\n      sload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_206\n      tag_102\n      jump\t// in\n    tag_206:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/Lottery.sol\":8257:8384  UsersInfo[msg.sender]... */\n      0x01\n      add\n      sload\n      0x0100\n      swap1\n      div\n      sub(shl(0xf8, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":8226:8238  block.number */\n      number\n        /* \"contracts/Lottery.sol\":8226:8384  block.number >... */\n      gt\n        /* \"contracts/Lottery.sol\":8205:8423  require(... */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6143:6145   */\n      0x20\n        /* \"contracts/Lottery.sol\":8205:8423  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6125:6146   */\n      mstore\n        /* \"#utility.yul\":6182:6184   */\n      0x0d\n        /* \"#utility.yul\":6162:6180   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6155:6185   */\n      mstore\n      shl(0x98, 0x49742773206e6f742074696d65)\n        /* \"#utility.yul\":6201:6219   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6194:6237   */\n      mstore\n        /* \"#utility.yul\":6254:6272   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":8205:8423  require(... */\n      tag_84\n        /* \"#utility.yul\":5941:6278   */\n      jump\n        /* \"contracts/Lottery.sol\":8205:8423  require(... */\n    tag_208:\n        /* \"contracts/Lottery.sol\":8523:8533  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":8555:8556  0 */\n      0x00\n        /* \"contracts/Lottery.sol\":8513:8534  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":8513:8522  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":8513:8534  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":8513:8545  UsersInfo[msg.sender].openedeggs */\n      0x01\n      add\n        /* \"contracts/Lottery.sol\":8513:8552  UsersInfo[msg.sender].openedeggs.length */\n      sload\n        /* \"contracts/Lottery.sol\":8513:8556  UsersInfo[msg.sender].openedeggs.length > 0 */\n      iszero\n        /* \"contracts/Lottery.sol\":8509:8609  if (UsersInfo[msg.sender].openedeggs.length > 0)... */\n      tag_212\n      jumpi\n        /* \"contracts/Lottery.sol\":8587:8597  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":8577:8598  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":8577:8586  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":8577:8598  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":8570:8609  delete UsersInfo[msg.sender].openedeggs */\n      tag_212\n      swap2\n        /* \"contracts/Lottery.sol\":8577:8609  UsersInfo[msg.sender].openedeggs */\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n        /* \"contracts/Lottery.sol\":8570:8609  delete UsersInfo[msg.sender].openedeggs */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"contracts/Lottery.sol\":8653:8674  uint256 WinningAmount */\n      0x00\n      dup1\n        /* \"contracts/Lottery.sol\":8685:10375  for (uint256 i = 0; i < UsersInfo[msg.sender].eggsinfo.length; i++) {... */\n    tag_214:\n        /* \"contracts/Lottery.sol\":8719:8729  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":8709:8730  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":8709:8718  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":8709:8730  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":8709:8746  UsersInfo[msg.sender].eggsinfo.length */\n      sload\n        /* \"contracts/Lottery.sol\":8705:8746  i < UsersInfo[msg.sender].eggsinfo.length */\n      dup2\n      lt\n        /* \"contracts/Lottery.sol\":8685:10375  for (uint256 i = 0; i < UsersInfo[msg.sender].eggsinfo.length; i++) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/Lottery.sol\":8903:8913  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":8893:8914  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":8893:8902  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":8893:8914  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":8893:8926  UsersInfo[msg.sender].eggsinfo[i] */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":8924:8925  i */\n      dup3\n      swap1\n        /* \"contracts/Lottery.sol\":8893:8926  UsersInfo[msg.sender].eggsinfo[i] */\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_218\n      tag_102\n      jump\t// in\n    tag_218:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/Lottery.sol\":8893:8938  UsersInfo[msg.sender].eggsinfo[i].blocknumber */\n      0x01\n      add\n      sload\n      0x0100\n      swap1\n      div\n      sub(shl(0xf8, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":8883:8939  blockhash(UsersInfo[msg.sender].eggsinfo[i].blocknumber) */\n      blockhash\n        /* \"contracts/Lottery.sol\":8833:8985  if (... */\n      iszero\n        /* \"contracts/Lottery.sol\":8977:8985  continue */\n      tag_216\n        /* \"contracts/Lottery.sol\":8833:8985  if (... */\n      jumpi\n        /* \"contracts/Lottery.sol\":9197:9207  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":9034:9051  uint32 LotteryNum */\n      0x00\n        /* \"contracts/Lottery.sol\":9187:9208  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":9187:9196  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":9187:9208  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":9187:9220  UsersInfo[msg.sender].eggsinfo[i] */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":9218:9219  i */\n      dup4\n      swap1\n        /* \"contracts/Lottery.sol\":9187:9220  UsersInfo[msg.sender].eggsinfo[i] */\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_222\n      tag_102\n      jump\t// in\n    tag_222:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      0x02\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/Lottery.sol\":9187:9224  UsersInfo[msg.sender].eggsinfo[i].uid */\n      sload\n        /* \"contracts/Lottery.sol\":9307:9317  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":9297:9318  UsersInfo[msg.sender] */\n      dup4\n      mstore\n        /* \"contracts/Lottery.sol\":9297:9306  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":9297:9318  UsersInfo[msg.sender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Lottery.sol\":9297:9330  UsersInfo[msg.sender].eggsinfo[i] */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":9328:9329  i */\n      dup5\n      swap1\n        /* \"contracts/Lottery.sol\":9297:9330  UsersInfo[msg.sender].eggsinfo[i] */\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_225\n      tag_102\n      jump\t// in\n    tag_225:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/Lottery.sol\":9297:9342  UsersInfo[msg.sender].eggsinfo[i].blocknumber */\n      0x01\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xf8, 0x01), 0x01)\n      and\n      sub(shl(0xf8, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":9254:9372  blockhash(... */\n      and\n      blockhash\n        /* \"contracts/Lottery.sol\":9141:9398  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_227\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":6440:6459   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"#utility.yul\":6475:6487   */\n      dup3\n      add\n        /* \"#utility.yul\":6468:6496   */\n      mstore\n        /* \"#utility.yul\":6521:6523   */\n      0x40\n        /* \"#utility.yul\":6512:6524   */\n      add\n      swap1\n        /* \"#utility.yul\":6283:6530   */\n      jump\n        /* \"contracts/Lottery.sol\":9141:9398  abi.encodePacked(... */\n    tag_227:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Lottery.sol\":9106:9420  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/Lottery.sol\":9054:9452  uint32(... */\n      0xe0\n      shr\n        /* \"contracts/Lottery.sol\":9034:9452  uint32 LotteryNum = uint32(... */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":9495:9514  uint256 Winningrade */\n      0x00\n        /* \"contracts/Lottery.sol\":9517:9544  GetWinninggrade(LotteryNum) */\n      tag_229\n        /* \"contracts/Lottery.sol\":9533:9543  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":9517:9532  GetWinninggrade */\n      tag_230\n        /* \"contracts/Lottery.sol\":9517:9544  GetWinninggrade(LotteryNum) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/Lottery.sol\":9495:9544  uint256 Winningrade = GetWinninggrade(LotteryNum) */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":9597:9612  Winningrade > 0 */\n      dup1\n      iszero\n        /* \"contracts/Lottery.sol\":9593:10134  if (Winningrade > 0) {... */\n      tag_231\n      jumpi\n        /* \"contracts/Lottery.sol\":9719:9729  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":9632:9652  uint256 WinningMoney */\n      0x00\n        /* \"contracts/Lottery.sol\":9709:9730  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":9709:9718  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":9709:9730  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":9709:9742  UsersInfo[msg.sender].eggsinfo[i] */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":1287:1297  0.02 ether */\n      0x470de4df820000\n      swap2\n        /* \"contracts/Lottery.sol\":9709:9730  UsersInfo[msg.sender] */\n      swap1\n        /* \"contracts/Lottery.sol\":9740:9741  i */\n      dup7\n      swap1\n        /* \"contracts/Lottery.sol\":9709:9742  UsersInfo[msg.sender].eggsinfo[i] */\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_233\n      tag_102\n      jump\t// in\n    tag_233:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Lottery.sol\":9709:9746  UsersInfo[msg.sender].eggsinfo[i].mul */\n      0x01\n        /* \"contracts/Lottery.sol\":9709:9742  UsersInfo[msg.sender].eggsinfo[i] */\n      0x02\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/Lottery.sol\":9709:9746  UsersInfo[msg.sender].eggsinfo[i].mul */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Lottery.sol\":9655:9686  GetWinningmultiple(Winningrade) */\n      tag_235\n        /* \"contracts/Lottery.sol\":9674:9685  Winningrade */\n      dup5\n        /* \"contracts/Lottery.sol\":9655:9673  GetWinningmultiple */\n      tag_236\n        /* \"contracts/Lottery.sol\":9655:9686  GetWinningmultiple(Winningrade) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/Lottery.sol\":9655:9746  GetWinningmultiple(Winningrade) *... */\n      tag_237\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_237:\n        /* \"contracts/Lottery.sol\":9655:9780  GetWinningmultiple(Winningrade) *... */\n      tag_238\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_238:\n        /* \"contracts/Lottery.sol\":9632:9780  uint256 WinningMoney = GetWinningmultiple(Winningrade) *... */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":9799:9828  WinningAmount += WinningMoney */\n      tag_239\n        /* \"contracts/Lottery.sol\":9632:9780  uint256 WinningMoney = GetWinningmultiple(Winningrade) *... */\n      dup2\n        /* \"contracts/Lottery.sol\":9799:9828  WinningAmount += WinningMoney */\n      dup7\n      tag_88\n      jump\t// in\n    tag_239:\n        /* \"contracts/Lottery.sol\":9876:10073  Winninginfo(... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup7\n      and\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":9951:9961  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":9847:9873  Winninginfo memory winning */\n      0x00\n        /* \"contracts/Lottery.sol\":9941:9962  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":9941:9950  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":9876:10073  Winninginfo(... */\n      0x20\n        /* \"contracts/Lottery.sol\":9941:9962  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n      swap3\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":9941:9974  UsersInfo[msg.sender].eggsinfo[i] */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":9799:9828  WinningAmount += WinningMoney */\n      swap5\n      swap10\n      pop\n        /* \"contracts/Lottery.sol\":9847:9873  Winninginfo memory winning */\n      swap1\n      swap4\n        /* \"contracts/Lottery.sol\":9876:10073  Winninginfo(... */\n      swap2\n      swap3\n      dup4\n      add\n      swap2\n        /* \"contracts/Lottery.sol\":9972:9973  i */\n      dup9\n      swap1\n        /* \"contracts/Lottery.sol\":9941:9974  UsersInfo[msg.sender].eggsinfo[i] */\n      dup2\n      lt\n      tag_241\n      jumpi\n      tag_241\n      tag_102\n      jump\t// in\n    tag_241:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Lottery.sol\":9941:9978  UsersInfo[msg.sender].eggsinfo[i].mul */\n      0x01\n        /* \"contracts/Lottery.sol\":9941:9974  UsersInfo[msg.sender].eggsinfo[i] */\n      0x02\n      swap1\n      swap4\n      mul\n      add\n        /* \"contracts/Lottery.sol\":9941:9978  UsersInfo[msg.sender].eggsinfo[i].mul */\n      dup3\n      add\n      sload\n      0xff\n      swap1\n      dup2\n      and\n        /* \"contracts/Lottery.sol\":9876:10073  Winninginfo(... */\n      dup6\n      mstore\n      0xffffffffff\n        /* \"contracts/Lottery.sol\":10007:10022  block.timestamp */\n      timestamp\n        /* \"contracts/Lottery.sol\":9876:10073  Winninginfo(... */\n      and\n      dup6\n      dup4\n      add\n      mstore\n        /* \"contracts/Lottery.sol\":10045:10055  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":9876:10073  Winninginfo(... */\n      0x40\n      swap6\n      dup7\n      add\n      mstore\n        /* \"contracts/Lottery.sol\":10092:10105  WinningRecord */\n      0x0b\n        /* \"contracts/Lottery.sol\":10092:10119  WinningRecord.push(winning) */\n      dup1\n      sload\n      swap4\n      dup5\n      add\n      dup2\n      sstore\n      swap1\n      swap4\n      mstore\n      dup5\n      mload\n      0x03\n      swap1\n      swap3\n      mul\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      dup2\n      add\n      dup1\n      sload\n      swap3\n      dup8\n      add\n      mload\n      swap1\n      swap5\n      and\n      0x0100000000\n      mul\n      not(0xffffffffff)\n      swap1\n      swap3\n      and\n      0xffffffff\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      or\n      swap1\n      swap2\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dba\n      dup3\n      add\n      sstore\n      0x60\n      swap1\n      swap2\n      add\n      mload\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbb\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Lottery.sol\":9593:10134  if (Winningrade > 0) {... */\n    tag_231:\n        /* \"contracts/Lottery.sol\":10186:10296  OpenedLotInfo(... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup5\n      and\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":10255:10265  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":10148:10183  OpenedLotInfo memory OpenedLotterys */\n      0x00\n        /* \"contracts/Lottery.sol\":10245:10266  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":10245:10254  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":10186:10296  OpenedLotInfo(... */\n      0x20\n        /* \"contracts/Lottery.sol\":10245:10266  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n      swap3\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":10245:10278  UsersInfo[msg.sender].eggsinfo[i] */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":10148:10183  OpenedLotInfo memory OpenedLotterys */\n      swap2\n      swap4\n        /* \"contracts/Lottery.sol\":10186:10296  OpenedLotInfo(... */\n      dup4\n      add\n      swap2\n        /* \"contracts/Lottery.sol\":10276:10277  i */\n      dup8\n      swap1\n        /* \"contracts/Lottery.sol\":10245:10278  UsersInfo[msg.sender].eggsinfo[i] */\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_245\n      tag_102\n      jump\t// in\n    tag_245:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Lottery.sol\":10245:10282  UsersInfo[msg.sender].eggsinfo[i].mul */\n      0x01\n        /* \"contracts/Lottery.sol\":10245:10278  UsersInfo[msg.sender].eggsinfo[i] */\n      0x02\n      swap1\n      swap4\n      mul\n      add\n        /* \"contracts/Lottery.sol\":10245:10282  UsersInfo[msg.sender].eggsinfo[i].mul */\n      dup3\n      add\n      sload\n      0xff\n      swap1\n      dup2\n      and\n        /* \"contracts/Lottery.sol\":10186:10296  OpenedLotInfo(... */\n      swap1\n      swap5\n      mstore\n        /* \"contracts/Lottery.sol\":10321:10331  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":10311:10332  UsersInfo[msg.sender] */\n      dup4\n      mstore\n        /* \"contracts/Lottery.sol\":10311:10320  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":10311:10332  UsersInfo[msg.sender] */\n      dup2\n      mstore\n      0x40\n      dup4\n      keccak256\n        /* \"contracts/Lottery.sol\":10311:10343  UsersInfo[msg.sender].openedeggs */\n      dup3\n      add\n        /* \"contracts/Lottery.sol\":10311:10364  UsersInfo[msg.sender].openedeggs.push(OpenedLotterys) */\n      dup1\n      sload\n      swap3\n      dup4\n      add\n      dup2\n      sstore\n      dup4\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n      dup5\n      mload\n      swap2\n      add\n      dup1\n      sload\n      swap5\n      swap1\n      swap3\n      add\n      mload\n      swap1\n      swap3\n      and\n      0x0100000000\n      mul\n      not(0xffffffffff)\n      swap1\n      swap4\n      and\n      0xffffffff\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/Lottery.sol\":8685:10375  for (uint256 i = 0; i < UsersInfo[msg.sender].eggsinfo.length; i++) {... */\n    tag_216:\n        /* \"contracts/Lottery.sol\":8748:8751  i++ */\n      0x01\n      add\n        /* \"contracts/Lottery.sol\":8685:10375  for (uint256 i = 0; i < UsersInfo[msg.sender].eggsinfo.length; i++) {... */\n      jump(tag_214)\n    tag_215:\n      pop\n        /* \"contracts/Lottery.sol\":10462:10472  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":10452:10473  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":10452:10461  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":10452:10473  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":10445:10482  delete UsersInfo[msg.sender].eggsinfo */\n      tag_248\n      swap2\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"contracts/Lottery.sol\":10554:10571  WinningAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/Lottery.sol\":10550:11244  if (WinningAmount > 0) {... */\n      tag_250\n      jumpi\n        /* \"contracts/Lottery.sol\":10587:10611  uint256 MaxWinningAmount */\n      0x00\n        /* \"contracts/Lottery.sol\":10614:10910  SafeMathdiv(... */\n      tag_251\n        /* \"contracts/Lottery.sol\":10643:10875  SafeMathmul(... */\n      tag_252\n        /* \"contracts/Lottery.sol\":10676:10833  SafeMathsub(... */\n      tag_253\n        /* \"contracts/Lottery.sol\":10713:10734  address(this).balance */\n      selfbalance\n        /* \"contracts/Lottery.sol\":10801:10810  DevProfit */\n      sload(0x01)\n        /* \"contracts/Lottery.sol\":10779:10798  TotalReferralProfit */\n      sload(0x07)\n        /* \"contracts/Lottery.sol\":10761:10776  InvestorsProfit */\n      sload(0x05)\n        /* \"contracts/Lottery.sol\":10761:10798  InvestorsProfit + TotalReferralProfit */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n        /* \"contracts/Lottery.sol\":10676:10833  SafeMathsub(... */\n    tag_253:\n        /* \"contracts/Lottery.sol\":10855:10857  70 */\n      0x46\n        /* \"contracts/Lottery.sol\":10643:10654  SafeMathmul */\n      tag_110\n        /* \"contracts/Lottery.sol\":10643:10875  SafeMathmul(... */\n      jump\t// in\n    tag_252:\n        /* \"contracts/Lottery.sol\":10893:10896  100 */\n      0x64\n        /* \"contracts/Lottery.sol\":10614:10625  SafeMathdiv */\n      tag_111\n        /* \"contracts/Lottery.sol\":10614:10910  SafeMathdiv(... */\n      jump\t// in\n    tag_251:\n        /* \"contracts/Lottery.sol\":10587:10910  uint256 MaxWinningAmount = SafeMathdiv(... */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":10945:10961  MaxWinningAmount */\n      dup1\n        /* \"contracts/Lottery.sol\":10929:10942  WinningAmount */\n      dup3\n        /* \"contracts/Lottery.sol\":10929:10961  WinningAmount > MaxWinningAmount */\n      gt\n        /* \"contracts/Lottery.sol\":10925:11011  if (WinningAmount > MaxWinningAmount)... */\n      iszero\n      tag_256\n      jumpi\n        /* \"contracts/Lottery.sol\":10995:11011  MaxWinningAmount */\n      dup1\n        /* \"contracts/Lottery.sol\":10979:11011  WinningAmount = MaxWinningAmount */\n      swap2\n      pop\n        /* \"contracts/Lottery.sol\":10925:11011  if (WinningAmount > MaxWinningAmount)... */\n    tag_256:\n        /* \"contracts/Lottery.sol\":11026:11040  uint256 profit */\n      0x00\n        /* \"contracts/Lottery.sol\":11043:11090  SafeMathdiv(SafeMathmul(WinningAmount, 5), 100) */\n      tag_257\n        /* \"contracts/Lottery.sol\":11055:11084  SafeMathmul(WinningAmount, 5) */\n      tag_252\n        /* \"contracts/Lottery.sol\":11067:11080  WinningAmount */\n      dup5\n        /* \"contracts/Lottery.sol\":11082:11083  5 */\n      0x05\n        /* \"contracts/Lottery.sol\":11055:11066  SafeMathmul */\n      tag_110\n        /* \"contracts/Lottery.sol\":11055:11084  SafeMathmul(WinningAmount, 5) */\n      jump\t// in\n        /* \"contracts/Lottery.sol\":11043:11090  SafeMathdiv(SafeMathmul(WinningAmount, 5), 100) */\n    tag_257:\n        /* \"contracts/Lottery.sol\":11026:11090  uint256 profit = SafeMathdiv(SafeMathmul(WinningAmount, 5), 100) */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":11123:11129  profit */\n      dup1\n        /* \"contracts/Lottery.sol\":11104:11119  InvestorsProfit */\n      0x05\n      0x00\n        /* \"contracts/Lottery.sol\":11104:11129  InvestorsProfit += profit */\n      dup3\n      dup3\n      sload\n      tag_259\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_259:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lottery.sol\":11156:11162  profit */\n      dup1\n        /* \"contracts/Lottery.sol\":11143:11152  DevProfit */\n      0x01\n      0x00\n        /* \"contracts/Lottery.sol\":11143:11162  DevProfit += profit */\n      dup3\n      dup3\n      sload\n      tag_260\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_260:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Lottery.sol\":11185:11195  msg.sender */\n      caller\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":11177:11233  payable(msg.sender).transfer(WinningAmount - profit * 2) */\n      0x08fc\n        /* \"contracts/Lottery.sol\":11222:11232  profit * 2 */\n      tag_261\n        /* \"contracts/Lottery.sol\":11222:11228  profit */\n      dup4\n        /* \"contracts/Lottery.sol\":11231:11232  2 */\n      0x02\n        /* \"contracts/Lottery.sol\":11222:11232  profit * 2 */\n      tag_164\n      jump\t// in\n    tag_261:\n        /* \"contracts/Lottery.sol\":11206:11232  WinningAmount - profit * 2 */\n      tag_262\n      swap1\n        /* \"contracts/Lottery.sol\":11206:11219  WinningAmount */\n      dup7\n        /* \"contracts/Lottery.sol\":11206:11232  WinningAmount - profit * 2 */\n      tag_125\n      jump\t// in\n    tag_262:\n        /* \"contracts/Lottery.sol\":11177:11233  payable(msg.sender).transfer(WinningAmount - profit * 2) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"contracts/Lottery.sol\":10550:11244  if (WinningAmount > 0) {... */\n    tag_250:\n        /* \"contracts/Lottery.sol\":7886:11250  {... */\n      pop\n        /* \"contracts/Lottery.sol\":7857:11250  function OpenEggs() external {... */\n      jump\t// out\n        /* \"contracts/Lottery.sol\":4155:6544  function BuyEggs(... */\n    tag_58:\n        /* \"contracts/Lottery.sol\":1287:1297  0.02 ether */\n      0x470de4df820000\n        /* \"contracts/Lottery.sol\":4303:4312  msg.value */\n      callvalue\n        /* \"contracts/Lottery.sol\":4303:4327  msg.value >= PerEggPrice */\n      lt\n      iszero\n        /* \"contracts/Lottery.sol\":4295:4352  require(msg.value >= PerEggPrice, \"Buy at least one egg\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6737:6739   */\n      0x20\n        /* \"contracts/Lottery.sol\":4295:4352  require(msg.value >= PerEggPrice, \"Buy at least one egg\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6719:6740   */\n      mstore\n        /* \"#utility.yul\":6776:6778   */\n      0x14\n        /* \"#utility.yul\":6756:6774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6749:6779   */\n      mstore\n      shl(0x60, 0x427579206174206c65617374206f6e6520656767)\n        /* \"#utility.yul\":6795:6813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6788:6838   */\n      mstore\n        /* \"#utility.yul\":6855:6873   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":4295:4352  require(msg.value >= PerEggPrice, \"Buy at least one egg\") */\n      tag_84\n        /* \"#utility.yul\":6535:6879   */\n      jump\n        /* \"contracts/Lottery.sol\":4295:4352  require(msg.value >= PerEggPrice, \"Buy at least one egg\") */\n    tag_266:\n        /* \"contracts/Lottery.sol\":4377:4378  1 */\n      0x01\n        /* \"contracts/Lottery.sol\":4370:4373  mul */\n      dup4\n        /* \"contracts/Lottery.sol\":4370:4378  mul >= 1 */\n      0xff\n      and\n      lt\n      iszero\n        /* \"contracts/Lottery.sol\":4370:4392  mul >= 1 && mul <= 100 */\n      dup1\n      iszero\n      tag_269\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":4389:4392  100 */\n      0x64\n        /* \"contracts/Lottery.sol\":4382:4385  mul */\n      dup4\n        /* \"contracts/Lottery.sol\":4382:4392  mul <= 100 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/Lottery.sol\":4370:4392  mul >= 1 && mul <= 100 */\n    tag_269:\n        /* \"contracts/Lottery.sol\":4362:4424  require(mul >= 1 && mul <= 100, \"Multiples between 1 and 100\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7086:7088   */\n      0x20\n        /* \"contracts/Lottery.sol\":4362:4424  require(mul >= 1 && mul <= 100, \"Multiples between 1 and 100\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7068:7089   */\n      mstore\n        /* \"#utility.yul\":7125:7127   */\n      0x1b\n        /* \"#utility.yul\":7105:7123   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7098:7128   */\n      mstore\n        /* \"#utility.yul\":7164:7193   */\n      0x4d756c7469706c6573206265747765656e203120616e64203130300000000000\n        /* \"#utility.yul\":7144:7162   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7137:7194   */\n      mstore\n        /* \"#utility.yul\":7211:7229   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":4362:4424  require(mul >= 1 && mul <= 100, \"Multiples between 1 and 100\") */\n      tag_84\n        /* \"#utility.yul\":6884:7235   */\n      jump\n        /* \"contracts/Lottery.sol\":4362:4424  require(mul >= 1 && mul <= 100, \"Multiples between 1 and 100\") */\n    tag_270:\n        /* \"contracts/Lottery.sol\":4467:4468  1 */\n      0x01\n        /* \"contracts/Lottery.sol\":4455:4463  LotCount */\n      dup5\n        /* \"contracts/Lottery.sol\":4455:4468  LotCount >= 1 */\n      0xffff\n      and\n      lt\n      iszero\n        /* \"contracts/Lottery.sol\":4455:4488  LotCount >= 1 && LotCount <= 1000 */\n      dup1\n      iszero\n      tag_273\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":4484:4488  1000 */\n      0x03e8\n        /* \"contracts/Lottery.sol\":4472:4480  LotCount */\n      dup5\n        /* \"contracts/Lottery.sol\":4472:4488  LotCount <= 1000 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/Lottery.sol\":4455:4488  LotCount >= 1 && LotCount <= 1000 */\n    tag_273:\n        /* \"contracts/Lottery.sol\":4434:4546  require(... */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7442:7444   */\n      0x20\n        /* \"contracts/Lottery.sol\":4434:4546  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7424:7445   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7461:7479   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7454:7484   */\n      mstore\n        /* \"#utility.yul\":7520:7554   */\n      0x4e756d626572206f662065676773206265747765656e203120616e6420313030\n        /* \"#utility.yul\":7500:7518   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7493:7555   */\n      mstore\n        /* \"#utility.yul\":7572:7590   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":4434:4546  require(... */\n      tag_84\n        /* \"#utility.yul\":7240:7596   */\n      jump\n        /* \"contracts/Lottery.sol\":4434:4546  require(... */\n    tag_274:\n        /* \"contracts/Lottery.sol\":4556:4579  uint256 AllLotteryCount */\n      0x00\n        /* \"contracts/Lottery.sol\":4582:4617  SafeMathdiv(msg.value, PerEggPrice) */\n      tag_277\n        /* \"contracts/Lottery.sol\":4594:4603  msg.value */\n      callvalue\n        /* \"contracts/Lottery.sol\":1287:1297  0.02 ether */\n      0x470de4df820000\n        /* \"contracts/Lottery.sol\":4582:4593  SafeMathdiv */\n      tag_111\n        /* \"contracts/Lottery.sol\":4582:4617  SafeMathdiv(msg.value, PerEggPrice) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/Lottery.sol\":4556:4617  uint256 AllLotteryCount = SafeMathdiv(msg.value, PerEggPrice) */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":4655:4669  LotCount * mul */\n      tag_278\n      0xff\n      dup6\n      and\n        /* \"contracts/Lottery.sol\":4655:4663  LotCount */\n      dup7\n        /* \"contracts/Lottery.sol\":4655:4669  LotCount * mul */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"contracts/Lottery.sol\":4636:4669  AllLotteryCount == LotCount * mul */\n      0xffff\n      and\n        /* \"contracts/Lottery.sol\":4636:4651  AllLotteryCount */\n      dup2\n        /* \"contracts/Lottery.sol\":4636:4669  AllLotteryCount == LotCount * mul */\n      eq\n        /* \"contracts/Lottery.sol\":4628:4686  require(AllLotteryCount == LotCount * mul, \"Invalid data\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8040:8042   */\n      0x20\n        /* \"contracts/Lottery.sol\":4628:4686  require(AllLotteryCount == LotCount * mul, \"Invalid data\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8022:8043   */\n      mstore\n        /* \"#utility.yul\":8079:8081   */\n      0x0c\n        /* \"#utility.yul\":8059:8077   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8052:8082   */\n      mstore\n      shl(0xa0, 0x496e76616c69642064617461)\n        /* \"#utility.yul\":8098:8116   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8091:8133   */\n      mstore\n        /* \"#utility.yul\":8150:8168   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":4628:4686  require(AllLotteryCount == LotCount * mul, \"Invalid data\") */\n      tag_84\n        /* \"#utility.yul\":7838:8174   */\n      jump\n        /* \"contracts/Lottery.sol\":4628:4686  require(AllLotteryCount == LotCount * mul, \"Invalid data\") */\n    tag_280:\n        /* \"contracts/Lottery.sol\":4702:4711  uint256 i */\n      0x00\n        /* \"contracts/Lottery.sol\":4697:5183  for (uint256 i = 0; i < LotCount; i++) {... */\n    tag_283:\n        /* \"contracts/Lottery.sol\":4721:4729  LotCount */\n      dup6\n        /* \"contracts/Lottery.sol\":4717:4729  i < LotCount */\n      0xffff\n      and\n        /* \"contracts/Lottery.sol\":4717:4718  i */\n      dup2\n        /* \"contracts/Lottery.sol\":4717:4729  i < LotCount */\n      lt\n        /* \"contracts/Lottery.sol\":4697:5183  for (uint256 i = 0; i < LotCount; i++) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"contracts/Lottery.sol\":4750:4772  Egginfo memory egginfo */\n      0x00\n        /* \"contracts/Lottery.sol\":4775:5113  Egginfo(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Lottery.sol\":4873:4888  block.timestamp */\n      timestamp\n        /* \"contracts/Lottery.sol\":4914:4928  block.coinbase */\n      coinbase\n        /* \"contracts/Lottery.sol\":4954:4964  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":4990:4999  Lucknum++ */\n      dup10\n      dup1\n      tag_286\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      swap11\n      pop\n        /* \"contracts/Lottery.sol\":4831:5021  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_288\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":8620:8639   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":8677:8679   */\n      0x60\n        /* \"#utility.yul\":8673:8688   */\n      swap3\n      dup4\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":8669:8722   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":8664:8666   */\n      0x20\n        /* \"#utility.yul\":8655:8667   */\n      dup7\n      add\n        /* \"#utility.yul\":8648:8723   */\n      mstore\n        /* \"#utility.yul\":8757:8772   */\n      swap2\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":8753:8806   */\n      and\n        /* \"#utility.yul\":8748:8750   */\n      0x34\n        /* \"#utility.yul\":8739:8751   */\n      dup4\n      add\n        /* \"#utility.yul\":8732:8807   */\n      mstore\n        /* \"#utility.yul\":8845:8847   */\n      0x18\n        /* \"#utility.yul\":8841:8856   */\n      shl\n      not(0xffffff)\n        /* \"#utility.yul\":8837:8872   */\n      and\n        /* \"#utility.yul\":8832:8834   */\n      0x48\n        /* \"#utility.yul\":8823:8835   */\n      dup3\n      add\n        /* \"#utility.yul\":8816:8873   */\n      mstore\n        /* \"#utility.yul\":8898:8901   */\n      0x65\n        /* \"#utility.yul\":8889:8902   */\n      add\n      swap1\n        /* \"#utility.yul\":8391:8908   */\n      jump\n        /* \"contracts/Lottery.sol\":4831:5021  abi.encodePacked(... */\n    tag_288:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":4800:5039  keccak256(... */\n      dup2\n      mload\n        /* \"contracts/Lottery.sol\":4831:5021  abi.encodePacked(... */\n      0x20\n        /* \"contracts/Lottery.sol\":4800:5039  keccak256(... */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"contracts/Lottery.sol\":4775:5113  Egginfo(... */\n      dup4\n      mstore\n      0xff\n      dup1\n      dup12\n      and\n      dup5\n      dup5\n      add\n      mstore\n      sub(shl(0xf8, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":5086:5098  block.number */\n      number\n        /* \"contracts/Lottery.sol\":4775:5113  Egginfo(... */\n      dup2\n      and\n      swap5\n      dup4\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"contracts/Lottery.sol\":5138:5148  msg.sender */\n      caller\n      0x00\n        /* \"contracts/Lottery.sol\":5128:5149  UsersInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":5128:5137  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":5128:5149  UsersInfo[msg.sender] */\n      dup5\n      mstore\n      dup3\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":5128:5172  UsersInfo[msg.sender].eggsinfo.push(egginfo) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      swap2\n      dup4\n      mstore\n      swap2\n      dup6\n      swap1\n      keccak256\n      dup8\n      mload\n      0x02\n      swap1\n      swap4\n      mul\n      add\n      swap2\n      dup3\n      sstore\n      swap4\n      dup7\n      add\n      mload\n      swap6\n      swap1\n      swap3\n      add\n      mload\n      swap1\n      swap4\n      and\n      0x0100\n      mul\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      dup3\n      add\n      sstore\n        /* \"contracts/Lottery.sol\":4731:4734  i++ */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":4697:5183  for (uint256 i = 0; i < LotCount; i++) {... */\n      jump(tag_283)\n    tag_284:\n      pop\n        /* \"contracts/Lottery.sol\":5208:5218  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":5198:5219  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":5198:5207  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":5198:5219  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":5198:5227  UsersInfo[msg.sender].actived */\n      0x03\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Lottery.sol\":5193:5277  if (!UsersInfo[msg.sender].actived)... */\n      tag_291\n      jumpi\n        /* \"contracts/Lottery.sol\":5251:5261  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":5241:5262  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":5241:5250  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":5241:5262  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":5241:5270  UsersInfo[msg.sender].actived */\n      0x03\n      add\n        /* \"contracts/Lottery.sol\":5241:5277  UsersInfo[msg.sender].actived = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Lottery.sol\":5273:5277  true */\n      0x01\n        /* \"contracts/Lottery.sol\":5241:5277  UsersInfo[msg.sender].actived = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Lottery.sol\":5193:5277  if (!UsersInfo[msg.sender].actived)... */\n    tag_291:\n        /* \"contracts/Lottery.sol\":5312:5326  uint256 profit */\n      0x00\n        /* \"contracts/Lottery.sol\":5329:5372  SafeMathdiv(SafeMathmul(msg.value, 3), 100) */\n      tag_292\n        /* \"contracts/Lottery.sol\":5341:5366  SafeMathmul(msg.value, 3) */\n      tag_252\n        /* \"contracts/Lottery.sol\":5353:5362  msg.value */\n      callvalue\n        /* \"contracts/Lottery.sol\":5364:5365  3 */\n      0x03\n        /* \"contracts/Lottery.sol\":5341:5352  SafeMathmul */\n      tag_110\n        /* \"contracts/Lottery.sol\":5341:5366  SafeMathmul(msg.value, 3) */\n      jump\t// in\n        /* \"contracts/Lottery.sol\":5329:5372  SafeMathdiv(SafeMathmul(msg.value, 3), 100) */\n    tag_292:\n        /* \"contracts/Lottery.sol\":5312:5372  uint256 profit = SafeMathdiv(SafeMathmul(msg.value, 3), 100) */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":5407:5424  uint256 Refprofit */\n      0x00\n        /* \"contracts/Lottery.sol\":5427:5470  SafeMathdiv(SafeMathmul(msg.value, 4), 100) */\n      tag_294\n        /* \"contracts/Lottery.sol\":5439:5464  SafeMathmul(msg.value, 4) */\n      tag_252\n        /* \"contracts/Lottery.sol\":5451:5460  msg.value */\n      callvalue\n        /* \"contracts/Lottery.sol\":5462:5463  4 */\n      0x04\n        /* \"contracts/Lottery.sol\":5439:5450  SafeMathmul */\n      tag_110\n        /* \"contracts/Lottery.sol\":5439:5464  SafeMathmul(msg.value, 4) */\n      jump\t// in\n        /* \"contracts/Lottery.sol\":5427:5470  SafeMathdiv(SafeMathmul(msg.value, 4), 100) */\n    tag_294:\n        /* \"contracts/Lottery.sol\":5407:5470  uint256 Refprofit = SafeMathdiv(SafeMathmul(msg.value, 4), 100) */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":5523:5529  profit */\n      dup2\n        /* \"contracts/Lottery.sol\":5510:5519  DevProfit */\n      0x01\n      0x00\n        /* \"contracts/Lottery.sol\":5510:5529  DevProfit += profit */\n      dup3\n      dup3\n      sload\n      tag_296\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_296:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lottery.sol\":5588:5594  profit */\n      dup2\n        /* \"contracts/Lottery.sol\":5569:5584  InvestorsProfit */\n      0x05\n      0x00\n        /* \"contracts/Lottery.sol\":5569:5594  InvestorsProfit += profit */\n      dup3\n      dup3\n      sload\n      tag_297\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_297:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Lottery.sol\":5664:5674  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":5687:5688  0 */\n      0x00\n        /* \"contracts/Lottery.sol\":5654:5675  referrals[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":5654:5663  referrals */\n      0x0a\n        /* \"contracts/Lottery.sol\":5654:5675  referrals[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":5650:6538  if (referrals[msg.sender] == address(0)) {... */\n      tag_298\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":5856:5873  ref == msg.sender */\n      dup5\n      and\n        /* \"contracts/Lottery.sol\":5863:5873  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":5856:5873  ref == msg.sender */\n      eq\n      dup1\n        /* \"contracts/Lottery.sol\":5856:5910  ref == msg.sender ||... */\n      tag_299\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":5893:5910  ref == address(0) */\n      dup5\n      and\n      iszero\n        /* \"contracts/Lottery.sol\":5856:5910  ref == msg.sender ||... */\n    tag_299:\n        /* \"contracts/Lottery.sol\":5856:5960  ref == msg.sender ||... */\n      dup1\n      tag_300\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":5941:5951  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":5931:5952  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":5931:5940  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":5931:5952  UsersInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":5931:5960  UsersInfo[msg.sender].actived */\n      0x03\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Lottery.sol\":5930:5960  !UsersInfo[msg.sender].actived */\n      iszero\n        /* \"contracts/Lottery.sol\":5856:5960  ref == msg.sender ||... */\n    tag_300:\n        /* \"contracts/Lottery.sol\":5835:6101  if (... */\n      iszero\n      tag_301\n      jumpi\n        /* \"contracts/Lottery.sol\":6076:6086  DevAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      swap4\n      pop\n        /* \"contracts/Lottery.sol\":5835:6101  if (... */\n    tag_301:\n        /* \"contracts/Lottery.sol\":6124:6134  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":6114:6135  referrals[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":6114:6123  referrals */\n      0x0a\n        /* \"contracts/Lottery.sol\":6114:6135  referrals[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":6114:6141  referrals[msg.sender] = ref */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Lottery.sol\":6265:6275  DevAddress */\n      swap2\n      sload\n      and\n        /* \"contracts/Lottery.sol\":6240:6275  referrals[msg.sender] == DevAddress */\n      swap1\n      sub\n        /* \"contracts/Lottery.sol\":6236:6481  if (referrals[msg.sender] == DevAddress) {... */\n      tag_302\n      jumpi\n        /* \"contracts/Lottery.sol\":6308:6317  Refprofit */\n      dup1\n        /* \"contracts/Lottery.sol\":6295:6304  DevProfit */\n      0x01\n      0x00\n        /* \"contracts/Lottery.sol\":6295:6317  DevProfit += Refprofit */\n      dup3\n      dup3\n      sload\n      tag_303\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_303:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Lottery.sol\":6236:6481  if (referrals[msg.sender] == DevAddress) {... */\n      tag_304\n      swap1\n      pop\n      jump\n    tag_302:\n        /* \"contracts/Lottery.sol\":6376:6386  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":6356:6388  UsersInfo[referrals[msg.sender]] */\n      0x00\n        /* \"contracts/Lottery.sol\":6366:6387  referrals[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":6366:6375  referrals */\n      0x0a\n        /* \"contracts/Lottery.sol\":6366:6387  referrals[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Lottery.sol\":6356:6388  UsersInfo[referrals[msg.sender]] */\n      dup4\n      mstore\n        /* \"contracts/Lottery.sol\":6356:6365  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":6356:6388  UsersInfo[referrals[msg.sender]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":6356:6403  UsersInfo[referrals[msg.sender]].ReferralProfit */\n      0x02\n      add\n        /* \"contracts/Lottery.sol\":6356:6416  UsersInfo[referrals[msg.sender]].ReferralProfit += Refprofit */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":6407:6416  Refprofit */\n      dup4\n      swap3\n        /* \"contracts/Lottery.sol\":6356:6388  UsersInfo[referrals[msg.sender]] */\n      swap1\n        /* \"contracts/Lottery.sol\":6356:6416  UsersInfo[referrals[msg.sender]].ReferralProfit += Refprofit */\n      tag_305\n      swap1\n        /* \"contracts/Lottery.sol\":6407:6416  Refprofit */\n      dup5\n      swap1\n        /* \"contracts/Lottery.sol\":6356:6416  UsersInfo[referrals[msg.sender]].ReferralProfit += Refprofit */\n      tag_88\n      jump\t// in\n    tag_305:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lottery.sol\":6457:6466  Refprofit */\n      dup1\n        /* \"contracts/Lottery.sol\":6434:6453  TotalReferralProfit */\n      0x07\n      0x00\n        /* \"contracts/Lottery.sol\":6434:6466  TotalReferralProfit += Refprofit */\n      dup3\n      dup3\n      sload\n      tag_306\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_306:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Lottery.sol\":6236:6481  if (referrals[msg.sender] == DevAddress) {... */\n    tag_304:\n        /* \"contracts/Lottery.sol\":6512:6527  block.timestamp */\n      timestamp\n        /* \"contracts/Lottery.sol\":6495:6509  LastBuyEggTime */\n      0x08\n        /* \"contracts/Lottery.sol\":6495:6527  LastBuyEggTime = block.timestamp */\n      sstore\n        /* \"contracts/Lottery.sol\":5650:6538  if (referrals[msg.sender] == address(0)) {... */\n    tag_298:\n        /* \"contracts/Lottery.sol\":4285:6544  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Lottery.sol\":4155:6544  function BuyEggs(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":16674:16803  function GetLatestLottery() public view returns (OpenedLotInfo[] memory) {... */\n    tag_71:\n        /* \"contracts/Lottery.sol\":16774:16784  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":16764:16785  UsersInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":16764:16773  UsersInfo */\n      0x09\n        /* \"contracts/Lottery.sol\":16764:16785  UsersInfo[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Lottery.sol\":16764:16796  UsersInfo[msg.sender].openedeggs */\n      0x01\n      add\n        /* \"contracts/Lottery.sol\":16757:16796  return UsersInfo[msg.sender].openedeggs */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"contracts/Lottery.sol\":16723:16745  OpenedLotInfo[] memory */\n      0x60\n      swap5\n        /* \"contracts/Lottery.sol\":16757:16796  return UsersInfo[msg.sender].openedeggs */\n      swap3\n      swap4\n        /* \"contracts/Lottery.sol\":16764:16796  UsersInfo[msg.sender].openedeggs */\n      swap2\n      swap3\n        /* \"contracts/Lottery.sol\":16757:16796  return UsersInfo[msg.sender].openedeggs */\n      swap1\n      swap2\n      dup5\n      add\n    tag_309:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_310\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      swap1\n      dup5\n      add\n      sload\n      0xffffffff\n      dup2\n      and\n      dup3\n      mstore\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      dup4\n      add\n      mstore\n      dup3\n      mstore\n      0x01\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_309)\n    tag_310:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":16674:16803  function GetLatestLottery() public view returns (OpenedLotInfo[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Lottery.sol\":12301:13685  function InvestmentWithdrawal(uint256 WithdrawalAmount) external {... */\n    tag_77:\n        /* \"contracts/Lottery.sol\":1547:1554  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Lottery.sol\":12457:12473  WithdrawalAmount */\n      dup2\n        /* \"contracts/Lottery.sol\":12457:12502  WithdrawalAmount >= Mininum_Investment_amount */\n      lt\n      iszero\n        /* \"contracts/Lottery.sol\":12436:12603  require(... */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9115:9117   */\n      0x20\n        /* \"contracts/Lottery.sol\":12436:12603  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9097:9118   */\n      mstore\n        /* \"#utility.yul\":9154:9156   */\n      0x4b\n        /* \"#utility.yul\":9134:9152   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9127:9157   */\n      mstore\n        /* \"#utility.yul\":9193:9227   */\n      0x4d696e696d756d20696e766573746d656e7420616d6f756e7420697320726571\n        /* \"#utility.yul\":9173:9191   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9166:9228   */\n      mstore\n        /* \"#utility.yul\":9264:9298   */\n      0x75697265642c6974277320736d616c6c6572207468616e20746865206d696e69\n        /* \"#utility.yul\":9244:9262   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9237:9299   */\n      mstore\n      shl(0xaa, 0x1b5d5b4819195c1bdcda5d)\n        /* \"#utility.yul\":9315:9334   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":9308:9350   */\n      mstore\n        /* \"#utility.yul\":9367:9386   */\n      0xa4\n      add\n        /* \"contracts/Lottery.sol\":12436:12603  require(... */\n      tag_84\n        /* \"#utility.yul\":8913:9392   */\n      jump\n        /* \"contracts/Lottery.sol\":12436:12603  require(... */\n    tag_313:\n        /* \"contracts/Lottery.sol\":12708:12718  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":12691:12719  InvestorsBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":12691:12707  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":12691:12719  InvestorsBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":12691:12727  InvestorsBalance[msg.sender].balance */\n      sload\n        /* \"contracts/Lottery.sol\":12671:12727  WithdrawalAmount <= InvestorsBalance[msg.sender].balance */\n      dup2\n      gt\n      iszero\n        /* \"contracts/Lottery.sol\":12650:12781  require(... */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9599:9601   */\n      0x20\n        /* \"contracts/Lottery.sol\":12650:12781  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9581:9602   */\n      mstore\n        /* \"#utility.yul\":9638:9640   */\n      0x1c\n        /* \"#utility.yul\":9618:9636   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9611:9641   */\n      mstore\n        /* \"#utility.yul\":9677:9707   */\n      0x4e6f7420656e6f7567682066756e6420746f2077697468647261772100000000\n        /* \"#utility.yul\":9657:9675   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9650:9708   */\n      mstore\n        /* \"#utility.yul\":9725:9743   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":12650:12781  require(... */\n      tag_84\n        /* \"#utility.yul\":9397:9749   */\n      jump\n        /* \"contracts/Lottery.sol\":12650:12781  require(... */\n    tag_316:\n        /* \"contracts/Lottery.sol\":12972:12982  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":12955:12983  InvestorsBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":12955:12971  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":12955:12983  InvestorsBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Lottery.sol\":12955:12998  InvestorsBalance[msg.sender].LastInvestTime */\n      0x01\n      add\n      sload\n        /* \"contracts/Lottery.sol\":12955:13008  InvestorsBalance[msg.sender].LastInvestTime + 1 weeks */\n      tag_319\n      swap1\n        /* \"contracts/Lottery.sol\":13001:13008  1 weeks */\n      0x093a80\n        /* \"contracts/Lottery.sol\":12955:13008  InvestorsBalance[msg.sender].LastInvestTime + 1 weeks */\n      tag_88\n      jump\t// in\n    tag_319:\n        /* \"contracts/Lottery.sol\":12920:12935  block.timestamp */\n      timestamp\n        /* \"contracts/Lottery.sol\":12920:13008  block.timestamp >=... */\n      lt\n      iszero\n        /* \"contracts/Lottery.sol\":12899:13065  require(... */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9956:9958   */\n      0x20\n        /* \"contracts/Lottery.sol\":12899:13065  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9938:9959   */\n      mstore\n        /* \"#utility.yul\":9995:9997   */\n      0x1f\n        /* \"#utility.yul\":9975:9993   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9968:9998   */\n      mstore\n        /* \"#utility.yul\":10034:10067   */\n      0x43616e6e6f74207769746864726177206166746572206f6e65207765656b2100\n        /* \"#utility.yul\":10014:10032   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10007:10068   */\n      mstore\n        /* \"#utility.yul\":10085:10103   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":12899:13065  require(... */\n      tag_84\n        /* \"#utility.yul\":9754:10109   */\n      jump\n        /* \"contracts/Lottery.sol\":12899:13065  require(... */\n    tag_320:\n        /* \"contracts/Lottery.sol\":13300:13316  WithdrawalAmount */\n      dup1\n        /* \"contracts/Lottery.sol\":13163:13296  SafeMathsub(... */\n      tag_323\n        /* \"contracts/Lottery.sol\":13192:13213  address(this).balance */\n      selfbalance\n        /* \"contracts/Lottery.sol\":13272:13281  DevProfit */\n      sload(0x01)\n        /* \"contracts/Lottery.sol\":13250:13269  TotalReferralProfit */\n      sload(0x07)\n        /* \"contracts/Lottery.sol\":13232:13247  InvestorsProfit */\n      sload(0x05)\n        /* \"contracts/Lottery.sol\":13232:13269  InvestorsProfit + TotalReferralProfit */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n        /* \"contracts/Lottery.sol\":13163:13296  SafeMathsub(... */\n    tag_323:\n        /* \"contracts/Lottery.sol\":13163:13316  SafeMathsub(... */\n      lt\n      iszero\n        /* \"contracts/Lottery.sol\":13142:13372  require(... */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10316:10318   */\n      0x20\n        /* \"contracts/Lottery.sol\":13142:13372  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10298:10319   */\n      mstore\n        /* \"#utility.yul\":10355:10357   */\n      0x1e\n        /* \"#utility.yul\":10335:10353   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10328:10358   */\n      mstore\n        /* \"#utility.yul\":10394:10426   */\n      0x496e73756666696369656e742066756e6420746f207769746864726177210000\n        /* \"#utility.yul\":10374:10392   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10367:10427   */\n      mstore\n        /* \"#utility.yul\":10444:10462   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":13142:13372  require(... */\n      tag_84\n        /* \"#utility.yul\":10114:10468   */\n      jump\n        /* \"contracts/Lottery.sol\":13142:13372  require(... */\n    tag_326:\n        /* \"contracts/Lottery.sol\":13460:13470  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":13443:13471  InvestorsBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Lottery.sol\":13443:13459  InvestorsBalance */\n      0x03\n        /* \"contracts/Lottery.sol\":13443:13471  InvestorsBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Lottery.sol\":13443:13499  InvestorsBalance[msg.sender].balance -= WithdrawalAmount */\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":13483:13499  WithdrawalAmount */\n      dup4\n      swap3\n        /* \"contracts/Lottery.sol\":13443:13471  InvestorsBalance[msg.sender] */\n      swap1\n        /* \"contracts/Lottery.sol\":13443:13499  InvestorsBalance[msg.sender].balance -= WithdrawalAmount */\n      tag_329\n      swap1\n        /* \"contracts/Lottery.sol\":13483:13499  WithdrawalAmount */\n      dup5\n      swap1\n        /* \"contracts/Lottery.sol\":13443:13499  InvestorsBalance[msg.sender].balance -= WithdrawalAmount */\n      tag_125\n      jump\t// in\n    tag_329:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lottery.sol\":13567:13583  WithdrawalAmount */\n      dup1\n        /* \"contracts/Lottery.sol\":13542:13563  TotalInvestmentAmount */\n      0x04\n      0x00\n        /* \"contracts/Lottery.sol\":13542:13583  TotalInvestmentAmount -= WithdrawalAmount */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n        /* \"contracts/Lottery.sol\":15806:16037  function DeveloperWithdrawal() external {... */\n    tag_80:\n        /* \"contracts/Lottery.sol\":15878:15888  DevAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Lottery.sol\":15864:15874  msg.sender */\n      caller\n        /* \"contracts/Lottery.sol\":15864:15888  msg.sender == DevAddress */\n      eq\n        /* \"contracts/Lottery.sol\":15856:15918  require(msg.sender == DevAddress, \"You must be the developer\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10675:10677   */\n      0x20\n        /* \"contracts/Lottery.sol\":15856:15918  require(msg.sender == DevAddress, \"You must be the developer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10657:10678   */\n      mstore\n        /* \"#utility.yul\":10714:10716   */\n      0x19\n        /* \"#utility.yul\":10694:10712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10687:10717   */\n      mstore\n        /* \"#utility.yul\":10753:10780   */\n      0x596f75206d7573742062652074686520646576656c6f70657200000000000000\n        /* \"#utility.yul\":10733:10751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10726:10781   */\n      mstore\n        /* \"#utility.yul\":10798:10816   */\n      0x64\n      add\n        /* \"contracts/Lottery.sol\":15856:15918  require(msg.sender == DevAddress, \"You must be the developer\") */\n      tag_84\n        /* \"#utility.yul\":10473:10822   */\n      jump\n        /* \"contracts/Lottery.sol\":15856:15918  require(msg.sender == DevAddress, \"You must be the developer\") */\n    tag_334:\n        /* \"contracts/Lottery.sol\":15948:15957  DevProfit */\n      0x01\n      dup1\n      sload\n        /* \"contracts/Lottery.sol\":15928:15945  uint256 devprofit */\n      0x00\n        /* \"contracts/Lottery.sol\":15967:15980  DevProfit = 0 */\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Lottery.sol\":15999:16009  DevAddress */\n      dup2\n      sload\n        /* \"contracts/Lottery.sol\":15991:16030  payable(DevAddress).transfer(devprofit) */\n      mload(0x40)\n        /* \"contracts/Lottery.sol\":15948:15957  DevProfit */\n      swap2\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Lottery.sol\":15999:16009  DevAddress */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/Lottery.sol\":15991:16030  payable(DevAddress).transfer(devprofit) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/Lottery.sol\":15948:15957  DevProfit */\n      dup5\n      swap2\n        /* \"contracts/Lottery.sol\":15991:16030  payable(DevAddress).transfer(devprofit) */\n      swap1\n      dup2\n        /* \"contracts/Lottery.sol\":15928:15945  uint256 devprofit */\n      dup2\n        /* \"contracts/Lottery.sol\":15991:16030  payable(DevAddress).transfer(devprofit) */\n      dup2\n        /* \"contracts/Lottery.sol\":15948:15957  DevProfit */\n      dup6\n        /* \"contracts/Lottery.sol\":15999:16009  DevAddress */\n      dup9\n        /* \"contracts/Lottery.sol\":15991:16030  payable(DevAddress).transfer(devprofit) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"contracts/Lottery.sol\":3582:3711  function SafeMathsub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_90:\n        /* \"contracts/Lottery.sol\":3648:3655  uint256 */\n      0x00\n        /* \"contracts/Lottery.sol\":3679:3680  a */\n      dup3\n        /* \"contracts/Lottery.sol\":3674:3675  b */\n      dup3\n        /* \"contracts/Lottery.sol\":3674:3680  b <= a */\n      gt\n      iszero\n        /* \"contracts/Lottery.sol\":3667:3681  assert(b <= a) */\n      tag_341\n      jumpi\n      tag_341\n      tag_342\n      jump\t// in\n    tag_341:\n        /* \"contracts/Lottery.sol\":3699:3704  a - b */\n      tag_343\n        /* \"contracts/Lottery.sol\":3703:3704  b */\n      dup3\n        /* \"contracts/Lottery.sol\":3699:3700  a */\n      dup5\n        /* \"contracts/Lottery.sol\":3699:3704  a - b */\n      tag_125\n      jump\t// in\n    tag_343:\n        /* \"contracts/Lottery.sol\":3692:3704  return a - b */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":3582:3711  function SafeMathsub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_339:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":3737:3951  function SafeMathmul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_110:\n        /* \"contracts/Lottery.sol\":3803:3810  uint256 */\n      0x00\n        /* \"contracts/Lottery.sol\":3826:3827  a */\n      dup3\n        /* \"contracts/Lottery.sol\":3831:3832  0 */\n      0x00\n        /* \"contracts/Lottery.sol\":3826:3832  a == 0 */\n      sub\n        /* \"contracts/Lottery.sol\":3822:3867  if (a == 0) {... */\n      tag_345\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":3855:3856  0 */\n      0x00\n        /* \"contracts/Lottery.sol\":3848:3856  return 0 */\n      jump(tag_339)\n        /* \"contracts/Lottery.sol\":3822:3867  if (a == 0) {... */\n    tag_345:\n        /* \"contracts/Lottery.sol\":3877:3886  uint256 c */\n      0x00\n        /* \"contracts/Lottery.sol\":3889:3894  a * b */\n      tag_346\n        /* \"contracts/Lottery.sol\":3893:3894  b */\n      dup4\n        /* \"contracts/Lottery.sol\":3889:3890  a */\n      dup6\n        /* \"contracts/Lottery.sol\":3889:3894  a * b */\n      tag_164\n      jump\t// in\n    tag_346:\n        /* \"contracts/Lottery.sol\":3877:3894  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/Lottery.sol\":3923:3924  b */\n      dup3\n        /* \"contracts/Lottery.sol\":3913:3918  c / a */\n      tag_347\n        /* \"contracts/Lottery.sol\":3917:3918  a */\n      dup6\n        /* \"contracts/Lottery.sol\":3877:3894  uint256 c = a * b */\n      dup4\n        /* \"contracts/Lottery.sol\":3913:3918  c / a */\n      tag_93\n      jump\t// in\n    tag_347:\n        /* \"contracts/Lottery.sol\":3912:3924  (c / a) == b */\n      eq\n        /* \"contracts/Lottery.sol\":3905:3925  assert((c / a) == b) */\n      tag_343\n      jumpi\n      tag_343\n      tag_342\n      jump\t// in\n        /* \"contracts/Lottery.sol\":3977:4129  function SafeMathdiv(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_111:\n        /* \"contracts/Lottery.sol\":4043:4050  uint256 */\n      0x00\n        /* \"contracts/Lottery.sol\":4073:4074  0 */\n      dup1\n        /* \"contracts/Lottery.sol\":4069:4070  b */\n      dup3\n        /* \"contracts/Lottery.sol\":4069:4074  b > 0 */\n      gt\n        /* \"contracts/Lottery.sol\":4062:4075  assert(b > 0) */\n      tag_352\n      jumpi\n      tag_352\n      tag_342\n      jump\t// in\n    tag_352:\n        /* \"contracts/Lottery.sol\":4086:4095  uint256 c */\n      0x00\n        /* \"contracts/Lottery.sol\":4098:4103  a / b */\n      tag_353\n        /* \"contracts/Lottery.sol\":4102:4103  b */\n      dup4\n        /* \"contracts/Lottery.sol\":4098:4099  a */\n      dup6\n        /* \"contracts/Lottery.sol\":4098:4103  a / b */\n      tag_93\n      jump\t// in\n    tag_353:\n        /* \"contracts/Lottery.sol\":4086:4103  uint256 c = a / b */\n      swap5\n        /* \"contracts/Lottery.sol\":3977:4129  function SafeMathdiv(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n    tag_230:\n        /* \"contracts/Lottery.sol\":6660:6667  uint256 */\n      0x00\n        /* \"contracts/Lottery.sol\":6696:6704  67108864 */\n      0x04000000\n        /* \"contracts/Lottery.sol\":6683:6693  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":6683:6704  LotteryNum > 67108864 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Lottery.sol\":6679:6714  if (LotteryNum > 67108864) return 0 */\n      iszero\n      tag_355\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":6713:6714  0 */\n      0x00\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":6679:6714  if (LotteryNum > 67108864) return 0 */\n    tag_355:\n        /* \"contracts/Lottery.sol\":6742:6750  16777216 */\n      0x01000000\n        /* \"contracts/Lottery.sol\":6728:6738  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":6728:6750  LotteryNum >= 16777216 */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/Lottery.sol\":6724:6761  if (LotteryNum >= 16777216) return 10 */\n      tag_356\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":6759:6761  10 */\n      0x0a\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":6724:6761  if (LotteryNum >= 16777216) return 10 */\n    tag_356:\n        /* \"contracts/Lottery.sol\":6789:6796  4194304 */\n      0x400000\n        /* \"contracts/Lottery.sol\":6775:6785  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":6775:6796  LotteryNum >= 4194304 */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/Lottery.sol\":6771:6806  if (LotteryNum >= 4194304) return 9 */\n      tag_357\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":6805:6806  9 */\n      0x09\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":6771:6806  if (LotteryNum >= 4194304) return 9 */\n    tag_357:\n        /* \"contracts/Lottery.sol\":6834:6841  1048576 */\n      0x100000\n        /* \"contracts/Lottery.sol\":6820:6830  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":6820:6841  LotteryNum >= 1048576 */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/Lottery.sol\":6816:6851  if (LotteryNum >= 1048576) return 8 */\n      tag_358\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":6850:6851  8 */\n      0x08\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":6816:6851  if (LotteryNum >= 1048576) return 8 */\n    tag_358:\n        /* \"contracts/Lottery.sol\":6879:6885  262144 */\n      0x040000\n        /* \"contracts/Lottery.sol\":6865:6875  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":6865:6885  LotteryNum >= 262144 */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/Lottery.sol\":6861:6895  if (LotteryNum >= 262144) return 7 */\n      tag_359\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":6894:6895  7 */\n      0x07\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":6861:6895  if (LotteryNum >= 262144) return 7 */\n    tag_359:\n        /* \"contracts/Lottery.sol\":6923:6928  65536 */\n      0x010000\n        /* \"contracts/Lottery.sol\":6909:6919  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":6909:6928  LotteryNum >= 65536 */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/Lottery.sol\":6905:6938  if (LotteryNum >= 65536) return 6 */\n      tag_360\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":6937:6938  6 */\n      0x06\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":6905:6938  if (LotteryNum >= 65536) return 6 */\n    tag_360:\n        /* \"contracts/Lottery.sol\":6966:6971  16384 */\n      0x4000\n        /* \"contracts/Lottery.sol\":6952:6962  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":6952:6971  LotteryNum >= 16384 */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/Lottery.sol\":6948:6981  if (LotteryNum >= 16384) return 5 */\n      tag_361\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":6980:6981  5 */\n      0x05\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":6948:6981  if (LotteryNum >= 16384) return 5 */\n    tag_361:\n        /* \"contracts/Lottery.sol\":7009:7013  4096 */\n      0x1000\n        /* \"contracts/Lottery.sol\":6995:7005  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":6995:7013  LotteryNum >= 4096 */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/Lottery.sol\":6991:7023  if (LotteryNum >= 4096) return 4 */\n      tag_362\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7022:7023  4 */\n      0x04\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":6991:7023  if (LotteryNum >= 4096) return 4 */\n    tag_362:\n        /* \"contracts/Lottery.sol\":7051:7055  1024 */\n      0x0400\n        /* \"contracts/Lottery.sol\":7037:7047  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":7037:7055  LotteryNum >= 1024 */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/Lottery.sol\":7033:7065  if (LotteryNum >= 1024) return 3 */\n      tag_363\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7064:7065  3 */\n      0x03\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7033:7065  if (LotteryNum >= 1024) return 3 */\n    tag_363:\n        /* \"contracts/Lottery.sol\":7093:7096  256 */\n      0x0100\n        /* \"contracts/Lottery.sol\":7079:7089  LotteryNum */\n      dup3\n        /* \"contracts/Lottery.sol\":7079:7096  LotteryNum >= 256 */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/Lottery.sol\":7075:7170  if (LotteryNum >= 256) {... */\n      tag_364\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7119:7120  2 */\n      0x02\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7075:7170  if (LotteryNum >= 256) {... */\n    tag_364:\n      pop\n        /* \"contracts/Lottery.sol\":7158:7159  1 */\n      0x01\n      swap2\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7075:7170  if (LotteryNum >= 256) {... */\n    tag_365:\n        /* \"contracts/Lottery.sol\":6594:7176  function GetWinninggrade(uint32 LotteryNum) private pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n    tag_236:\n        /* \"contracts/Lottery.sol\":7321:7328  uint256 */\n      0x00\n        /* \"contracts/Lottery.sol\":7348:7359  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7363:7364  0 */\n      0x00\n        /* \"contracts/Lottery.sol\":7348:7364  winninginfo == 0 */\n      sub\n        /* \"contracts/Lottery.sol\":7344:7374  if (winninginfo == 0) return 0 */\n      tag_367\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7373:7374  0 */\n      0x00\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7344:7374  if (winninginfo == 0) return 0 */\n    tag_367:\n        /* \"contracts/Lottery.sol\":7388:7399  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7403:7405  10 */\n      0x0a\n        /* \"contracts/Lottery.sol\":7388:7405  winninginfo == 10 */\n      sub\n        /* \"contracts/Lottery.sol\":7384:7415  if (winninginfo == 10) return 5 */\n      tag_368\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7414:7415  5 */\n      0x05\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7384:7415  if (winninginfo == 10) return 5 */\n    tag_368:\n        /* \"contracts/Lottery.sol\":7429:7440  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7444:7445  9 */\n      0x09\n        /* \"contracts/Lottery.sol\":7429:7445  winninginfo == 9 */\n      sub\n        /* \"contracts/Lottery.sol\":7425:7456  if (winninginfo == 9) return 20 */\n      tag_369\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7454:7456  20 */\n      0x14\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7425:7456  if (winninginfo == 9) return 20 */\n    tag_369:\n        /* \"contracts/Lottery.sol\":7470:7481  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7485:7486  8 */\n      0x08\n        /* \"contracts/Lottery.sol\":7470:7486  winninginfo == 8 */\n      sub\n        /* \"contracts/Lottery.sol\":7466:7497  if (winninginfo == 8) return 80 */\n      tag_370\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7495:7497  80 */\n      0x50\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7466:7497  if (winninginfo == 8) return 80 */\n    tag_370:\n        /* \"contracts/Lottery.sol\":7511:7522  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7526:7527  7 */\n      0x07\n        /* \"contracts/Lottery.sol\":7511:7527  winninginfo == 7 */\n      sub\n        /* \"contracts/Lottery.sol\":7507:7539  if (winninginfo == 7) return 320 */\n      tag_371\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7536:7539  320 */\n      0x0140\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7507:7539  if (winninginfo == 7) return 320 */\n    tag_371:\n        /* \"contracts/Lottery.sol\":7553:7564  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7568:7569  6 */\n      0x06\n        /* \"contracts/Lottery.sol\":7553:7569  winninginfo == 6 */\n      sub\n        /* \"contracts/Lottery.sol\":7549:7582  if (winninginfo == 6) return 1200 */\n      tag_372\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7578:7582  1200 */\n      0x04b0\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7549:7582  if (winninginfo == 6) return 1200 */\n    tag_372:\n        /* \"contracts/Lottery.sol\":7596:7607  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7611:7612  5 */\n      0x05\n        /* \"contracts/Lottery.sol\":7596:7612  winninginfo == 5 */\n      sub\n        /* \"contracts/Lottery.sol\":7592:7625  if (winninginfo == 5) return 4800 */\n      tag_373\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7621:7625  4800 */\n      0x12c0\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7592:7625  if (winninginfo == 5) return 4800 */\n    tag_373:\n        /* \"contracts/Lottery.sol\":7639:7650  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7654:7655  4 */\n      0x04\n        /* \"contracts/Lottery.sol\":7639:7655  winninginfo == 4 */\n      sub\n        /* \"contracts/Lottery.sol\":7635:7669  if (winninginfo == 4) return 20000 */\n      tag_374\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7664:7669  20000 */\n      0x4e20\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7635:7669  if (winninginfo == 4) return 20000 */\n    tag_374:\n        /* \"contracts/Lottery.sol\":7683:7694  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7698:7699  3 */\n      0x03\n        /* \"contracts/Lottery.sol\":7683:7699  winninginfo == 3 */\n      sub\n        /* \"contracts/Lottery.sol\":7679:7714  if (winninginfo == 3) return 100000 */\n      tag_375\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7708:7714  100000 */\n      0x0186a0\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7679:7714  if (winninginfo == 3) return 100000 */\n    tag_375:\n        /* \"contracts/Lottery.sol\":7728:7739  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7743:7744  2 */\n      0x02\n        /* \"contracts/Lottery.sol\":7728:7744  winninginfo == 2 */\n      sub\n        /* \"contracts/Lottery.sol\":7724:7759  if (winninginfo == 2) return 500000 */\n      tag_376\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7753:7759  500000 */\n      0x07a120\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7724:7759  if (winninginfo == 2) return 500000 */\n    tag_376:\n        /* \"contracts/Lottery.sol\":7773:7784  winninginfo */\n      dup2\n        /* \"contracts/Lottery.sol\":7788:7789  1 */\n      0x01\n        /* \"contracts/Lottery.sol\":7773:7789  winninginfo == 1 */\n      sub\n        /* \"contracts/Lottery.sol\":7769:7805  if (winninginfo == 1) return 2000000 */\n      tag_377\n      jumpi\n      pop\n        /* \"contracts/Lottery.sol\":7798:7805  2000000 */\n      0x1e8480\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lottery.sol\":7769:7805  if (winninginfo == 1) return 2000000 */\n    tag_377:\n      pop\n        /* \"contracts/Lottery.sol\":7823:7824  0 */\n      0x00\n      swap2\n        /* \"contracts/Lottery.sol\":7226:7831  function GetWinningmultiple(uint256 winninginfo)... */\n      swap1\n      pop\n      jump\t// out\n    tag_213:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_380\n      jump\t// in\n    tag_249:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      0x02\n      mul\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_383\n      jump\t// in\n    tag_380:\n    tag_384:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_385\n      jumpi\n      dup1\n      sload\n      not(0xffffffffff)\n      and\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_384)\n    tag_385:\n      pop\n      swap1\n      jump\t// out\n    tag_383:\n    tag_386:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_385\n      jumpi\n      0x00\n      dup1\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      sstore\n      0x02\n      add\n      jump(tag_386)\n        /* \"#utility.yul\":14:194   */\n    tag_32:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_392:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:1115   */\n    tag_35:\n        /* \"#utility.yul\":443:445   */\n      0x20\n        /* \"#utility.yul\":455:476   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":525:538   */\n      dup3\n      mload\n        /* \"#utility.yul\":428:446   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":547:569   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":395:399   */\n      0x00\n      swap2\n        /* \"#utility.yul\":626:641   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":600:602   */\n      0x40\n        /* \"#utility.yul\":585:603   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":395:399   */\n      dup4\n        /* \"#utility.yul\":669:1089   */\n    tag_394:\n        /* \"#utility.yul\":683:689   */\n      dup2\n        /* \"#utility.yul\":680:681   */\n      dup2\n        /* \"#utility.yul\":677:690   */\n      lt\n        /* \"#utility.yul\":669:1089   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":742:755   */\n      dup4\n      mload\n        /* \"#utility.yul\":784:793   */\n      dup1\n      mload\n        /* \"#utility.yul\":795:805   */\n      0xffffffff\n        /* \"#utility.yul\":780:806   */\n      and\n        /* \"#utility.yul\":768:807   */\n      dup5\n      mstore\n        /* \"#utility.yul\":859:861   */\n      0x20\n        /* \"#utility.yul\":851:862   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":845:863   */\n      mload\n        /* \"#utility.yul\":865:869   */\n      0xff\n        /* \"#utility.yul\":841:870   */\n      and\n        /* \"#utility.yul\":827:839   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":820:871   */\n      mstore\n        /* \"#utility.yul\":919:921   */\n      0x40\n        /* \"#utility.yul\":911:922   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":905:923   */\n      mload\n        /* \"#utility.yul\":891:903   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":884:924   */\n      mstore\n        /* \"#utility.yul\":978:982   */\n      0x60\n        /* \"#utility.yul\":970:983   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":964:984   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":960:1006   */\n      and\n        /* \"#utility.yul\":944:958   */\n      swap2\n      dup6\n      add\n        /* \"#utility.yul\":937:1007   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1064:1079   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1036:1040   */\n      0x80\n        /* \"#utility.yul\":1027:1041   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":1003:1004   */\n      0x01\n        /* \"#utility.yul\":698:707   */\n      add\n        /* \"#utility.yul\":669:1089   */\n      jump(tag_394)\n    tag_396:\n      pop\n        /* \"#utility.yul\":1106:1109   */\n      swap1\n      swap6\n        /* \"#utility.yul\":199:1115   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1510:1683   */\n    tag_388:\n        /* \"#utility.yul\":1578:1598   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1627:1658   */\n      dup2\n      and\n        /* \"#utility.yul\":1617:1659   */\n      dup2\n      eq\n        /* \"#utility.yul\":1607:1677   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":1673:1674   */\n      0x00\n        /* \"#utility.yul\":1670:1671   */\n      dup1\n        /* \"#utility.yul\":1663:1675   */\n      revert\n        /* \"#utility.yul\":1688:2382   */\n    tag_57:\n        /* \"#utility.yul\":1771:1777   */\n      0x00\n        /* \"#utility.yul\":1779:1785   */\n      dup1\n        /* \"#utility.yul\":1787:1793   */\n      0x00\n        /* \"#utility.yul\":1795:1801   */\n      dup1\n        /* \"#utility.yul\":1848:1851   */\n      0x80\n        /* \"#utility.yul\":1836:1845   */\n      dup6\n        /* \"#utility.yul\":1827:1834   */\n      dup8\n        /* \"#utility.yul\":1823:1846   */\n      sub\n        /* \"#utility.yul\":1819:1852   */\n      slt\n        /* \"#utility.yul\":1816:1869   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":1865:1866   */\n      0x00\n        /* \"#utility.yul\":1862:1863   */\n      dup1\n        /* \"#utility.yul\":1855:1867   */\n      revert\n        /* \"#utility.yul\":1816:1869   */\n    tag_402:\n        /* \"#utility.yul\":1904:1913   */\n      dup5\n        /* \"#utility.yul\":1891:1914   */\n      calldataload\n        /* \"#utility.yul\":1954:1960   */\n      0xffff\n        /* \"#utility.yul\":1947:1952   */\n      dup2\n        /* \"#utility.yul\":1943:1961   */\n      and\n        /* \"#utility.yul\":1936:1941   */\n      dup2\n        /* \"#utility.yul\":1933:1962   */\n      eq\n        /* \"#utility.yul\":1923:1980   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":1976:1977   */\n      0x00\n        /* \"#utility.yul\":1973:1974   */\n      dup1\n        /* \"#utility.yul\":1966:1978   */\n      revert\n        /* \"#utility.yul\":1923:1980   */\n    tag_403:\n        /* \"#utility.yul\":1999:2004   */\n      swap4\n      pop\n        /* \"#utility.yul\":2056:2058   */\n      0x20\n        /* \"#utility.yul\":2041:2059   */\n      dup6\n      add\n        /* \"#utility.yul\":2028:2060   */\n      calldataload\n        /* \"#utility.yul\":2104:2108   */\n      0xff\n        /* \"#utility.yul\":2091:2109   */\n      dup2\n      and\n        /* \"#utility.yul\":2079:2110   */\n      dup2\n      eq\n        /* \"#utility.yul\":2069:2128   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":2124:2125   */\n      0x00\n        /* \"#utility.yul\":2121:2122   */\n      dup1\n        /* \"#utility.yul\":2114:2126   */\n      revert\n        /* \"#utility.yul\":2069:2128   */\n    tag_404:\n        /* \"#utility.yul\":2147:2154   */\n      swap3\n      pop\n        /* \"#utility.yul\":2206:2208   */\n      0x40\n        /* \"#utility.yul\":2191:2209   */\n      dup6\n      add\n        /* \"#utility.yul\":2178:2210   */\n      calldataload\n      sub(shl(0xe8, 0x01), 0x01)\n        /* \"#utility.yul\":2241:2274   */\n      dup2\n      and\n        /* \"#utility.yul\":2229:2275   */\n      dup2\n      eq\n        /* \"#utility.yul\":2219:2293   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2289:2290   */\n      0x00\n        /* \"#utility.yul\":2286:2287   */\n      dup1\n        /* \"#utility.yul\":2279:2291   */\n      revert\n        /* \"#utility.yul\":2219:2293   */\n    tag_405:\n        /* \"#utility.yul\":2312:2319   */\n      swap2\n      pop\n        /* \"#utility.yul\":2338:2376   */\n      tag_406\n        /* \"#utility.yul\":2372:2374   */\n      0x60\n        /* \"#utility.yul\":2357:2375   */\n      dup7\n      add\n        /* \"#utility.yul\":2338:2376   */\n      tag_388\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2328:2376   */\n      swap1\n      pop\n        /* \"#utility.yul\":1688:2382   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2387:2573   */\n    tag_66:\n        /* \"#utility.yul\":2446:2452   */\n      0x00\n        /* \"#utility.yul\":2499:2501   */\n      0x20\n        /* \"#utility.yul\":2487:2496   */\n      dup3\n        /* \"#utility.yul\":2478:2485   */\n      dup5\n        /* \"#utility.yul\":2474:2497   */\n      sub\n        /* \"#utility.yul\":2470:2502   */\n      slt\n        /* \"#utility.yul\":2467:2519   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":2515:2516   */\n      0x00\n        /* \"#utility.yul\":2512:2513   */\n      dup1\n        /* \"#utility.yul\":2505:2517   */\n      revert\n        /* \"#utility.yul\":2467:2519   */\n    tag_408:\n        /* \"#utility.yul\":2538:2567   */\n      tag_343\n        /* \"#utility.yul\":2557:2566   */\n      dup3\n        /* \"#utility.yul\":2538:2567   */\n      tag_388\n      jump\t// in\n        /* \"#utility.yul\":2578:3360   */\n    tag_73:\n        /* \"#utility.yul\":2826:2828   */\n      0x20\n        /* \"#utility.yul\":2838:2859   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2908:2921   */\n      dup3\n      mload\n        /* \"#utility.yul\":2811:2829   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2930:2952   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2778:2782   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3009:3024   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2983:2985   */\n      0x40\n        /* \"#utility.yul\":2968:2986   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2778:2782   */\n      dup4\n        /* \"#utility.yul\":3052:3334   */\n    tag_411:\n        /* \"#utility.yul\":3066:3072   */\n      dup2\n        /* \"#utility.yul\":3063:3064   */\n      dup2\n        /* \"#utility.yul\":3060:3073   */\n      lt\n        /* \"#utility.yul\":3052:3334   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":3125:3138   */\n      dup4\n      mload\n        /* \"#utility.yul\":3167:3176   */\n      dup1\n      mload\n        /* \"#utility.yul\":3178:3188   */\n      0xffffffff\n        /* \"#utility.yul\":3163:3189   */\n      and\n        /* \"#utility.yul\":3151:3190   */\n      dup5\n      mstore\n        /* \"#utility.yul\":3242:3244   */\n      0x20\n        /* \"#utility.yul\":3234:3245   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":3228:3246   */\n      mload\n        /* \"#utility.yul\":3248:3252   */\n      0xff\n        /* \"#utility.yul\":3224:3253   */\n      and\n        /* \"#utility.yul\":3210:3222   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":3203:3254   */\n      mstore\n        /* \"#utility.yul\":3309:3324   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":3283:3285   */\n      0x40\n        /* \"#utility.yul\":3274:3286   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":3088:3089   */\n      0x01\n        /* \"#utility.yul\":3081:3090   */\n      add\n        /* \"#utility.yul\":3052:3334   */\n      jump(tag_411)\n        /* \"#utility.yul\":3716:3843   */\n    tag_389:\n        /* \"#utility.yul\":3777:3787   */\n      0x4e487b71\n        /* \"#utility.yul\":3772:3775   */\n      0xe0\n        /* \"#utility.yul\":3768:3788   */\n      shl\n        /* \"#utility.yul\":3765:3766   */\n      0x00\n        /* \"#utility.yul\":3758:3789   */\n      mstore\n        /* \"#utility.yul\":3808:3812   */\n      0x11\n        /* \"#utility.yul\":3805:3806   */\n      0x04\n        /* \"#utility.yul\":3798:3813   */\n      mstore\n        /* \"#utility.yul\":3832:3836   */\n      0x24\n        /* \"#utility.yul\":3829:3830   */\n      0x00\n        /* \"#utility.yul\":3822:3837   */\n      revert\n        /* \"#utility.yul\":3848:3973   */\n    tag_88:\n        /* \"#utility.yul\":3913:3922   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3934:3944   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3931:3967   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3947:3965   */\n      tag_339\n      tag_389\n      jump\t// in\n        /* \"#utility.yul\":3978:4195   */\n    tag_93:\n        /* \"#utility.yul\":4018:4019   */\n      0x00\n        /* \"#utility.yul\":4044:4045   */\n      dup3\n        /* \"#utility.yul\":4034:4166   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":4088:4098   */\n      0x4e487b71\n        /* \"#utility.yul\":4083:4086   */\n      0xe0\n        /* \"#utility.yul\":4079:4099   */\n      shl\n        /* \"#utility.yul\":4076:4077   */\n      0x00\n        /* \"#utility.yul\":4069:4100   */\n      mstore\n        /* \"#utility.yul\":4123:4127   */\n      0x12\n        /* \"#utility.yul\":4120:4121   */\n      0x04\n        /* \"#utility.yul\":4113:4128   */\n      mstore\n        /* \"#utility.yul\":4151:4155   */\n      0x24\n        /* \"#utility.yul\":4148:4149   */\n      0x00\n        /* \"#utility.yul\":4141:4156   */\n      revert\n        /* \"#utility.yul\":4034:4166   */\n    tag_420:\n      pop\n        /* \"#utility.yul\":4180:4189   */\n      div\n      swap1\n        /* \"#utility.yul\":3978:4195   */\n      jump\t// out\n        /* \"#utility.yul\":4200:4327   */\n    tag_102:\n        /* \"#utility.yul\":4261:4271   */\n      0x4e487b71\n        /* \"#utility.yul\":4256:4259   */\n      0xe0\n        /* \"#utility.yul\":4252:4272   */\n      shl\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4242:4273   */\n      mstore\n        /* \"#utility.yul\":4292:4296   */\n      0x32\n        /* \"#utility.yul\":4289:4290   */\n      0x04\n        /* \"#utility.yul\":4282:4297   */\n      mstore\n        /* \"#utility.yul\":4316:4320   */\n      0x24\n        /* \"#utility.yul\":4313:4314   */\n      0x00\n        /* \"#utility.yul\":4306:4321   */\n      revert\n        /* \"#utility.yul\":4691:4819   */\n    tag_125:\n        /* \"#utility.yul\":4758:4767   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4779:4790   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4776:4813   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":4793:4811   */\n      tag_339\n      tag_389\n      jump\t// in\n        /* \"#utility.yul\":4824:4992   */\n    tag_164:\n        /* \"#utility.yul\":4897:4906   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4928:4937   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4945:4960   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4939:4961   */\n      dup5\n      eq\n        /* \"#utility.yul\":4925:4962   */\n      or\n        /* \"#utility.yul\":4915:4986   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":4966:4984   */\n      tag_339\n      tag_389\n      jump\t// in\n        /* \"#utility.yul\":4997:5124   */\n    tag_172:\n        /* \"#utility.yul\":5058:5068   */\n      0x4e487b71\n        /* \"#utility.yul\":5053:5056   */\n      0xe0\n        /* \"#utility.yul\":5049:5069   */\n      shl\n        /* \"#utility.yul\":5046:5047   */\n      0x00\n        /* \"#utility.yul\":5039:5070   */\n      mstore\n        /* \"#utility.yul\":5089:5093   */\n      0x41\n        /* \"#utility.yul\":5086:5087   */\n      0x04\n        /* \"#utility.yul\":5079:5094   */\n      mstore\n        /* \"#utility.yul\":5113:5117   */\n      0x24\n        /* \"#utility.yul\":5110:5111   */\n      0x00\n        /* \"#utility.yul\":5103:5118   */\n      revert\n        /* \"#utility.yul\":7601:7833   */\n    tag_279:\n        /* \"#utility.yul\":7708:7714   */\n      0xffff\n        /* \"#utility.yul\":7685:7699   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":7701:7715   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":7681:7716   */\n      mul\n        /* \"#utility.yul\":7736:7760   */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"#utility.yul\":7779:7803   */\n      dup2\n      dup2\n      eq\n        /* \"#utility.yul\":7769:7827   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":7807:7825   */\n      tag_439\n      tag_389\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7769:7827   */\n      pop\n        /* \"#utility.yul\":7601:7833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8179:8386   */\n    tag_287:\n        /* \"#utility.yul\":8218:8221   */\n      0x00\n      sub(shl(0xe8, 0x01), 0x01)\n        /* \"#utility.yul\":8251:8282   */\n      dup3\n      and\n      not(sub(shl(0xe8, 0x01), 0x02))\n        /* \"#utility.yul\":8294:8326   */\n      dup2\n      add\n        /* \"#utility.yul\":8291:8349   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":8329:8347   */\n      tag_443\n      tag_389\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8378:8379   */\n      0x01\n        /* \"#utility.yul\":8365:8380   */\n      add\n      swap3\n        /* \"#utility.yul\":8179:8386   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10827:10954   */\n    tag_342:\n        /* \"#utility.yul\":10888:10898   */\n      0x4e487b71\n        /* \"#utility.yul\":10883:10886   */\n      0xe0\n        /* \"#utility.yul\":10879:10899   */\n      shl\n        /* \"#utility.yul\":10876:10877   */\n      0x00\n        /* \"#utility.yul\":10869:10900   */\n      mstore\n        /* \"#utility.yul\":10919:10923   */\n      0x01\n        /* \"#utility.yul\":10916:10917   */\n      0x04\n        /* \"#utility.yul\":10909:10924   */\n      mstore\n        /* \"#utility.yul\":10943:10947   */\n      0x24\n        /* \"#utility.yul\":10940:10941   */\n      0x00\n        /* \"#utility.yul\":10933:10948   */\n      revert\n\n    auxdata: 0xa2646970667358221220795005b2f9f701aed3dd9180ed4435f53a675b83c7e4c44a5b9cb0d4aa5684c264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH2 0x1C6C DUP1 PUSH2 0x36 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA659F4DC GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xCF438305 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xCF438305 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xD9498A83 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xDD5F6F4D EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xF4E79B5B EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA659F4DC EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xB1C617FF EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xC9EA0299 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xCA6AAE29 EQ PUSH2 0x1F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B5BACA1 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x2B5BACA1 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x49821332 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x7DA384FD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x89A4C1A0 EQ PUSH2 0x177 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12DB1357 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x22629256 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x289F9019 EQ PUSH2 0x112 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x295 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x4C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x589 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0x916 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xA75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x195 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A69 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x1486 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x1680 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 GT ISZERO DUP1 PUSH2 0x2C3 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x30D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9036BAB9BA10313290309034B73B32B9BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH0 SWAP2 DUP3 SWAP2 PUSH2 0x339 SWAP2 SELFBALANCE SWAP2 PUSH2 0x32A SWAP1 DUP8 PUSH2 0x1B4F JUMP JUMPDEST PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH2 0x171A JUMP JUMPDEST SWAP1 POP PUSH10 0x21E19E0C9BAB2400000 DUP2 LT PUSH2 0x37B JUMPI PUSH2 0x357 PUSH1 0xC8 DUP3 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x361 SWAP1 DUP5 PUSH2 0x1B4F JUMP JUMPDEST SWAP3 POP PUSH2 0x36E PUSH1 0xC8 DUP3 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x378 SWAP1 DUP4 PUSH2 0x1B4F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3AB JUMPI PUSH2 0x3AB PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD LT PUSH2 0x478 JUMPI PUSH0 PUSH2 0x423 PUSH2 0x41B PUSH1 0x3 PUSH0 PUSH1 0x2 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x3F1 JUMPI PUSH2 0x3F1 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP8 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x438 JUMPI PUSH2 0x438 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x475 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x382 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x4BF JUMPI PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH7 0x2386F26FC10000 GT ISZERO PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682070726F66697420746F207769746864726177210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x556 SWAP1 DUP5 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x5AE SWAP1 PUSH3 0x13C680 PUSH2 0x1B4F JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x5B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD SELFBALANCE LT PUSH2 0x6B6 JUMPI PUSH0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x6B0 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5ED JUMPI PUSH2 0x5ED PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD LT PUSH2 0x6A8 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x629 JUMPI PUSH2 0x629 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH2 0x8FC SWAP3 PUSH1 0x3 SWAP3 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x65B JUMPI PUSH2 0x65B PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD DUP3 KECCAK256 SLOAD SWAP1 MLOAD DUP2 ISZERO SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5C4 JUMP JUMPDEST POP PUSH2 0x7CF JUMP JUMPDEST SELFBALANCE PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x7CD JUMPI PUSH0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x7CB JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6F1 JUMPI PUSH2 0x6F1 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD LT PUSH2 0x7C3 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x72D JUMPI PUSH2 0x72D PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x4 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 PUSH2 0x8FC SWAP4 DUP8 SWAP3 PUSH1 0x3 SWAP3 SWAP2 DUP9 SWAP1 DUP2 LT PUSH2 0x764 JUMPI PUSH2 0x764 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6C8 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x60 SWAP1 DUP3 SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x7F0 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x80A JUMPI PUSH2 0x80A PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x85A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 MSTORE PUSH0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x828 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x90D JUMPI PUSH1 0xB DUP2 PUSH2 0x875 PUSH1 0x1 DUP7 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x88F JUMPI PUSH2 0x88F PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP5 MSTORE PUSH1 0xFF PUSH5 0x100000000 SWAP1 SWAP2 DIV AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x8FA JUMPI PUSH2 0x8FA PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x85F JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO DUP1 ISZERO PUSH2 0x937 JUMPI POP PUSH9 0x3635C9ADC5DEA00000 CALLVALUE GT ISZERO JUMPDEST PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E766573746D656E7420616D6F756E7420626574657765656E203120616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x203130303 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x304 JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x9B3 SELFBALANCE PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST GT ISZERO PUSH2 0x9BD JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x9F1 SWAP1 DUP5 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA73 JUMPI CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520756E64726177206C6F7474657279207469 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x636B657473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xAFA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB0A JUMPI PUSH2 0xB0A PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND NUMBER GT PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x49742773206E6F742074696D65 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xB9D JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB9D SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xF17 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xBD6 JUMPI PUSH2 0xBD6 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND BLOCKHASH ISZERO PUSH2 0xF0F JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD CALLER DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xC4E JUMPI PUSH2 0xC4E PUSH2 0x1B81 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND BLOCKHASH PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC95 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 SHR SWAP1 POP PUSH0 PUSH2 0xCBA DUP3 PUSH2 0x1795 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE6C JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH7 0x470DE4DF820000 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xCEC JUMPI PUSH2 0xCEC PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xD0B DUP5 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD2B DUP2 DUP7 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP7 AND DUP2 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 DUP2 KECCAK256 DUP1 SLOAD SWAP5 SWAP10 POP SWAP1 SWAP4 SWAP2 SWAP3 DUP4 ADD SWAP2 DUP9 SWAP1 DUP2 LT PUSH2 0xD69 JUMPI PUSH2 0xD69 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND DUP6 MSTORE PUSH5 0xFFFFFFFFFF TIMESTAMP AND DUP6 DUP4 ADD MSTORE CALLER PUSH1 0x40 SWAP6 DUP7 ADD MSTORE PUSH1 0xB DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 SWAP4 MSTORE DUP5 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 DUP2 ADD DUP1 SLOAD SWAP3 DUP8 ADD MLOAD SWAP1 SWAP5 AND PUSH5 0x100000000 MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP3 AND PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SWAP2 SSTORE SWAP1 DUP3 ADD MLOAD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DBA DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DBB SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 DUP4 ADD SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0xEA4 JUMPI PUSH2 0xEA4 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 SWAP5 MSTORE CALLER DUP4 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 ADD DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD SWAP2 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP4 AND PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBA0 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xF2F SWAP2 PUSH2 0x196C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFED JUMPI PUSH0 PUSH2 0xF61 PUSH2 0xF5A PUSH2 0xF53 SELFBALANCE PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x46 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF6F JUMPI DUP1 SWAP2 POP JUMPDEST PUSH0 PUSH2 0xF7E PUSH2 0xF5A DUP5 PUSH1 0x5 PUSH2 0x173E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFA9 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP CALLER SWAP1 POP PUSH2 0x8FC PUSH2 0xFBE DUP4 PUSH1 0x2 PUSH2 0x1BA8 JUMP JUMPDEST PUSH2 0xFC8 SWAP1 DUP7 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH7 0x470DE4DF820000 CALLVALUE LT ISZERO PUSH2 0x103E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x427579206174206C65617374206F6E6520656767 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x1056 JUMPI POP PUSH1 0x64 DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x10A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C7469706C6573206265747765656E203120616E64203130300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x10BD JUMPI POP PUSH2 0x3E8 DUP5 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x1109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F662065676773206265747765656E203120616E6420313030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH0 PUSH2 0x111B CALLVALUE PUSH7 0x470DE4DF820000 PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP PUSH2 0x112A PUSH1 0xFF DUP6 AND DUP7 PUSH2 0x1BD3 JUMP JUMPDEST PUSH2 0xFFFF AND DUP2 EQ PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x496E76616C69642064617461 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH0 JUMPDEST DUP6 PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x1262 JUMPI PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP COINBASE CALLER DUP10 DUP1 PUSH2 0x1193 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST SWAP11 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x60 SWAP3 DUP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 SHL AND PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x18 SHL PUSH3 0xFFFFFF NOT AND PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x65 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE PUSH1 0xFF DUP1 DUP12 AND DUP5 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NUMBER DUP2 AND SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP2 DUP6 SWAP1 KECCAK256 DUP8 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP4 DUP7 ADD MLOAD SWAP6 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP4 AND PUSH2 0x100 MUL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 DUP3 ADD SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 POP PUSH2 0x116D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1299 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH0 PUSH2 0x12A8 PUSH2 0xF5A CALLVALUE PUSH1 0x3 PUSH2 0x173E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12B9 PUSH2 0xF5A CALLVALUE PUSH1 0x4 PUSH2 0x173E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12CC SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12E4 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 PUSH2 0x1323 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO JUMPDEST DUP1 PUSH2 0x1340 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1353 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 SLOAD AND SWAP1 SUB PUSH2 0x13A3 JUMPI DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1398 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x13F8 SWAP1 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13DA SWAP1 DUP5 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST TIMESTAMP PUSH1 0x8 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x147D JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP5 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 DUP4 ADD MSTORE DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1437 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x1518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D20696E766573746D656E7420616D6F756E7420697320726571 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75697265642C6974277320736D616C6C6572207468616E20746865206D696E69 PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x1B5D5B4819195C1BDCDA5D PUSH1 0xAA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E6420746F2077697468647261772100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1595 SWAP1 PUSH3 0x93A80 PUSH2 0x1B4F JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177206166746572206F6E65207765656B2100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST DUP1 PUSH2 0x15FC SELFBALANCE PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST LT ISZERO PUSH2 0x164A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E6420746F207769746864726177210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1668 SWAP1 DUP5 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D7573742062652074686520646576656C6F70657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH0 SWAP2 DUP3 SWAP1 SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0x172B JUMPI PUSH2 0x172B PUSH2 0x1C22 JUMP JUMPDEST PUSH2 0x1735 DUP3 DUP5 PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x174D JUMPI POP PUSH0 PUSH2 0x1738 JUMP JUMPDEST PUSH0 PUSH2 0x1758 DUP4 DUP6 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1765 DUP6 DUP4 PUSH2 0x1B62 JUMP JUMPDEST EQ PUSH2 0x1735 JUMPI PUSH2 0x1735 PUSH2 0x1C22 JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x1782 JUMPI PUSH2 0x1782 PUSH2 0x1C22 JUMP JUMPDEST PUSH0 PUSH2 0x178D DUP4 DUP6 PUSH2 0x1B62 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0x4000000 DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x17AF JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x1000000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x17C8 JUMPI POP PUSH1 0xA SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x400000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x17E0 JUMPI POP PUSH1 0x9 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x100000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x17F8 JUMPI POP PUSH1 0x8 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x40000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x1810 JUMPI POP PUSH1 0x7 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x1828 JUMPI POP PUSH1 0x6 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x183F JUMPI POP PUSH1 0x5 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x1856 JUMPI POP PUSH1 0x4 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x400 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x186D JUMPI POP PUSH1 0x3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x1884 JUMPI POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 SUB PUSH2 0x18A0 JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0xA SUB PUSH2 0x18B0 JUMPI POP PUSH1 0x5 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x9 SUB PUSH2 0x18C0 JUMPI POP PUSH1 0x14 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x8 SUB PUSH2 0x18D0 JUMPI POP PUSH1 0x50 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x7 SUB PUSH2 0x18E1 JUMPI POP PUSH2 0x140 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x6 SUB PUSH2 0x18F2 JUMPI POP PUSH2 0x4B0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x5 SUB PUSH2 0x1903 JUMPI POP PUSH2 0x12C0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x4 SUB PUSH2 0x1914 JUMPI POP PUSH2 0x4E20 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x3 SUB PUSH2 0x1926 JUMPI POP PUSH3 0x186A0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x2 SUB PUSH2 0x1938 JUMPI POP PUSH3 0x7A120 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x1 SUB PUSH2 0x194A JUMPI POP PUSH3 0x1E8480 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19A7 JUMPI DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x198B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19A7 JUMPI PUSH0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0x19AC JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A48 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP5 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0xFF AND DUP2 DUP7 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x80 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x19F5 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x188C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A7C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1A8D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1AA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1ABD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x1ACB PUSH1 0x60 DUP7 ADD PUSH2 0x1A53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1735 DUP3 PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A48 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP5 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0xFF AND DUP2 DUP6 ADD MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1B08 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1738 PUSH2 0x1B3B JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1B7C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1738 PUSH2 0x1B3B JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1738 JUMPI PUSH2 0x1738 PUSH2 0x1B3B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFFFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0x1BF0 JUMPI PUSH2 0x1BF0 PUSH2 0x1B3B JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB DUP3 AND PUSH1 0x2 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 ADD PUSH2 0x1C19 JUMPI PUSH2 0x1C19 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x5005B2F9F701AED3DD9180ED4435F53A675B83C7E4C44A5B9CB0 0xD4 0xAA JUMP DUP5 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "70:18416:0:-:0;;;2929:142;;;;;;;;;-1:-1:-1;2953:10:0;:23;;-1:-1:-1;;;;;;2953:23:0;2966:10;2953:23;;;3007:15;2986:18;:36;;;3032:14;:32;70:18416;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BuyEggs_434": {
									"entryPoint": 4080,
									"id": 434,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@DestructContract_1443": {
									"entryPoint": 1417,
									"id": 1443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DevAddress_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DeveloperWithdrawal_1219": {
									"entryPoint": 5760,
									"id": 1219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DistributeInvestmentIncome_1147": {
									"entryPoint": 661,
									"id": 1147,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GetInvestmentBalance_1312": {
									"entryPoint": null,
									"id": 1312,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@GetLatestLottery_1299": {
									"entryPoint": 5126,
									"id": 1299,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@GetWinningRecord_1285": {
									"entryPoint": 2012,
									"id": 1285,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@GetWinninggrade_506": {
									"entryPoint": 6037,
									"id": 506,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@GetWinningmultiple_582": {
									"entryPoint": 6289,
									"id": 582,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@InvestmentDeposit_943": {
									"entryPoint": 2326,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@InvestmentWithdrawal_1021": {
									"entryPoint": 5254,
									"id": 1021,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@InvestorsProfit_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@OpenEggs_862": {
									"entryPoint": 2677,
									"id": 862,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RecentDividendTime_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SafeMathdiv_210": {
									"entryPoint": 6002,
									"id": 210,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@SafeMathmul_186": {
									"entryPoint": 5950,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@SafeMathsub_152": {
									"entryPoint": 5914,
									"id": 152,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@TotalInvestmentAmount_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WithdrawReferralProfit_1191": {
									"entryPoint": 1220,
									"id": 1191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16t_uint8t_uint232t_address": {
									"entryPoint": 6761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_address_payable_t_address_t_uint232__to_t_uint256_t_address_payable_t_address_t_uint232__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_OpenedLotInfo_$13_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_OpenedLotInfo_$13_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a19b8179a644aee2fcf1e2d1d7b79f205cf86aaa919d9253e13348420dfd1d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54b29162b0568d907215ea48697c2b664b38e09efead77ab1fb9655c40990fdc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_572f6114a447449bdc659a7f37166aa023d9be832c6677aa410d20615c0f2646__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6479ade4a0aff1580acde9c2dc167ca6615d7731639b04ad204344bff2291130__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_650dc1fb357829359fbf0a956d09cf3e8980961a8a919494bff661cc2fdd3f85__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_796ec44d103b15b3fdf61562e61512ddb58363cfe331cf2a64d682079171b8d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_82d6e6a7babd874cf9cbb174b435a0b95c477b5446fd9032ee38541b30847d96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0d970ba88c4f8a655dbf7f723bd7f850579d1890238dc88401ed4220f9f6af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b73d4bc61b22a5c83559e6d4843917f717089f0e08f7f6a74ea323a9597ff807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c1258a82e70db9c0442027dc365b3d26ee4505a23a70abe09c692d11010a23a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d19f3ae2e405bd6a9cc212ba46bfe12e20adf32eab8aa09d5e4d1904a928c8a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbcb3e84b1ed43636cc9086833c8a3c1965d67405383b25f200d36ccaad3ebb0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa0b0d924bce727ab99514b9f4c92115ad6db118fca10e53f88c8c4c48fc7dfc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fd9de04a809dc075d2c458d0a7216588503c49615166cd6954a88b6dfcfc3828__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint16": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint232": {
									"entryPoint": 7159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10956:1",
										"nodeType": "YulBlock",
										"src": "0:10956:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:1",
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:33:1",
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nativeSrc": "165:23:1",
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nativeSrc": "404:711:1",
													"nodeType": "YulBlock",
													"src": "404:711:1",
													"statements": [
														{
															"nativeSrc": "414:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "414:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:1",
																		"nodeType": "YulLiteral",
																		"src": "443:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:1"
																},
																"nativeSrc": "428:18:1",
																"nodeType": "YulFunctionCall",
																"src": "428:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "418:6:1",
																	"nodeType": "YulTypedName",
																	"src": "418:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "473:2:1",
																		"nodeType": "YulLiteral",
																		"src": "473:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:1"
																},
																"nativeSrc": "455:21:1",
																"nodeType": "YulFunctionCall",
																"src": "455:21:1"
															},
															"nativeSrc": "455:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "455:21:1"
														},
														{
															"nativeSrc": "485:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "485:17:1",
															"value": {
																"name": "tail_1",
																"nativeSrc": "496:6:1",
																"nodeType": "YulIdentifier",
																"src": "496:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "489:3:1",
																	"nodeType": "YulTypedName",
																	"src": "489:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "511:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "511:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "531:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "525:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "525:5:1"
																},
																"nativeSrc": "525:13:1",
																"nodeType": "YulFunctionCall",
																"src": "525:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "515:6:1",
																	"nodeType": "YulTypedName",
																	"src": "515:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "554:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "554:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "562:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "562:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "547:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:1"
																},
																"nativeSrc": "547:22:1",
																"nodeType": "YulFunctionCall",
																"src": "547:22:1"
															},
															"nativeSrc": "547:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "547:22:1"
														},
														{
															"nativeSrc": "578:25:1",
															"nodeType": "YulAssignment",
															"src": "578:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "589:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "589:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "600:2:1",
																		"nodeType": "YulLiteral",
																		"src": "600:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "585:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "585:3:1"
																},
																"nativeSrc": "585:18:1",
																"nodeType": "YulFunctionCall",
																"src": "585:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "578:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "578:3:1"
																}
															]
														},
														{
															"nativeSrc": "612:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "612:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "630:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "630:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "638:2:1",
																		"nodeType": "YulLiteral",
																		"src": "638:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "626:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:1"
																},
																"nativeSrc": "626:15:1",
																"nodeType": "YulFunctionCall",
																"src": "626:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "616:6:1",
																	"nodeType": "YulTypedName",
																	"src": "616:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "650:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "650:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "659:1:1",
																"nodeType": "YulLiteral",
																"src": "659:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "654:1:1",
																	"nodeType": "YulTypedName",
																	"src": "654:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:371:1",
																"nodeType": "YulBlock",
																"src": "718:371:1",
																"statements": [
																	{
																		"nativeSrc": "732:23:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "732:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "748:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "748:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "742:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "742:5:1"
																			},
																			"nativeSrc": "742:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "742:13:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "736:2:1",
																				"nodeType": "YulTypedName",
																				"src": "736:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "775:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "775:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "790:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "790:2:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "784:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "784:5:1"
																							},
																							"nativeSrc": "784:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "784:9:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "795:10:1",
																							"nodeType": "YulLiteral",
																							"src": "795:10:1",
																							"type": "",
																							"value": "0xffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "780:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "780:3:1"
																					},
																					"nativeSrc": "780:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "780:26:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "768:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:1"
																			},
																			"nativeSrc": "768:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "768:39:1"
																		},
																		"nativeSrc": "768:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "768:39:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "831:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "831:3:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "836:2:1",
																							"nodeType": "YulLiteral",
																							"src": "836:2:1",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "827:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "827:3:1"
																					},
																					"nativeSrc": "827:12:1",
																					"nodeType": "YulFunctionCall",
																					"src": "827:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_1",
																											"nativeSrc": "855:2:1",
																											"nodeType": "YulIdentifier",
																											"src": "855:2:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "859:2:1",
																											"nodeType": "YulLiteral",
																											"src": "859:2:1",
																											"type": "",
																											"value": "32"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "851:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "851:3:1"
																									},
																									"nativeSrc": "851:11:1",
																									"nodeType": "YulFunctionCall",
																									"src": "851:11:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "845:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "845:5:1"
																							},
																							"nativeSrc": "845:18:1",
																							"nodeType": "YulFunctionCall",
																							"src": "845:18:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "865:4:1",
																							"nodeType": "YulLiteral",
																							"src": "865:4:1",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "841:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "841:3:1"
																					},
																					"nativeSrc": "841:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "841:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "820:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:1"
																			},
																			"nativeSrc": "820:51:1",
																			"nodeType": "YulFunctionCall",
																			"src": "820:51:1"
																		},
																		"nativeSrc": "820:51:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "820:51:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "895:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "900:2:1",
																							"nodeType": "YulLiteral",
																							"src": "900:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "891:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "891:3:1"
																					},
																					"nativeSrc": "891:12:1",
																					"nodeType": "YulFunctionCall",
																					"src": "891:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "915:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "915:2:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "919:2:1",
																									"nodeType": "YulLiteral",
																									"src": "919:2:1",
																									"type": "",
																									"value": "64"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "911:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "911:3:1"
																							},
																							"nativeSrc": "911:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "911:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "905:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "905:5:1"
																					},
																					"nativeSrc": "905:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "905:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "884:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "884:6:1"
																			},
																			"nativeSrc": "884:40:1",
																			"nodeType": "YulFunctionCall",
																			"src": "884:40:1"
																		},
																		"nativeSrc": "884:40:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "884:40:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "948:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "948:3:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "953:4:1",
																							"nodeType": "YulLiteral",
																							"src": "953:4:1",
																							"type": "",
																							"value": "0x60"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "944:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "944:3:1"
																					},
																					"nativeSrc": "944:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "944:14:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_1",
																											"nativeSrc": "974:2:1",
																											"nodeType": "YulIdentifier",
																											"src": "974:2:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "978:4:1",
																											"nodeType": "YulLiteral",
																											"src": "978:4:1",
																											"type": "",
																											"value": "0x60"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "970:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "970:3:1"
																									},
																									"nativeSrc": "970:13:1",
																									"nodeType": "YulFunctionCall",
																									"src": "970:13:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "964:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "964:5:1"
																							},
																							"nativeSrc": "964:20:1",
																							"nodeType": "YulFunctionCall",
																							"src": "964:20:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "994:3:1",
																											"nodeType": "YulLiteral",
																											"src": "994:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "999:1:1",
																											"nodeType": "YulLiteral",
																											"src": "999:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "990:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "990:3:1"
																									},
																									"nativeSrc": "990:11:1",
																									"nodeType": "YulFunctionCall",
																									"src": "990:11:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1003:1:1",
																									"nodeType": "YulLiteral",
																									"src": "1003:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "986:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "986:3:1"
																							},
																							"nativeSrc": "986:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "986:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "960:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "960:3:1"
																					},
																					"nativeSrc": "960:46:1",
																					"nodeType": "YulFunctionCall",
																					"src": "960:46:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "937:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:1"
																			},
																			"nativeSrc": "937:70:1",
																			"nodeType": "YulFunctionCall",
																			"src": "937:70:1"
																		},
																		"nativeSrc": "937:70:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "937:70:1"
																	},
																	{
																		"nativeSrc": "1020:21:1",
																		"nodeType": "YulAssignment",
																		"src": "1020:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "1031:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1031:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1036:4:1",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1027:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:1"
																			},
																			"nativeSrc": "1027:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1027:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1020:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1020:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1054:25:1",
																		"nodeType": "YulAssignment",
																		"src": "1054:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1068:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1068:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1076:2:1",
																					"nodeType": "YulLiteral",
																					"src": "1076:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1064:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1064:3:1"
																			},
																			"nativeSrc": "1064:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1064:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "1054:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "680:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "680:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "683:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "683:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "677:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "677:2:1"
																},
																"nativeSrc": "677:13:1",
																"nodeType": "YulFunctionCall",
																"src": "677:13:1"
															},
															"nativeSrc": "669:420:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "691:18:1",
																"nodeType": "YulBlock",
																"src": "691:18:1",
																"statements": [
																	{
																		"nativeSrc": "693:14:1",
																		"nodeType": "YulAssignment",
																		"src": "693:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "702:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "702:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "705:1:1",
																					"nodeType": "YulLiteral",
																					"src": "705:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "698:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "698:3:1"
																			},
																			"nativeSrc": "698:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "698:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "693:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "693:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "673:3:1",
																"nodeType": "YulBlock",
																"src": "673:3:1",
																"statements": []
															},
															"src": "669:420:1"
														},
														{
															"nativeSrc": "1098:11:1",
															"nodeType": "YulAssignment",
															"src": "1098:11:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1106:3:1",
																"nodeType": "YulIdentifier",
																"src": "1106:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1098:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1098:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "199:916:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "373:9:1",
														"nodeType": "YulTypedName",
														"src": "373:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "384:6:1",
														"nodeType": "YulTypedName",
														"src": "384:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "395:4:1",
														"nodeType": "YulTypedName",
														"src": "395:4:1",
														"type": ""
													}
												],
												"src": "199:916:1"
											},
											{
												"body": {
													"nativeSrc": "1221:102:1",
													"nodeType": "YulBlock",
													"src": "1221:102:1",
													"statements": [
														{
															"nativeSrc": "1231:26:1",
															"nodeType": "YulAssignment",
															"src": "1231:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1243:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1243:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1254:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1239:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1239:3:1"
																},
																"nativeSrc": "1239:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1239:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1231:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1273:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1273:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1288:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1288:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1304:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1304:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1309:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1309:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:1"
																						},
																						"nativeSrc": "1300:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1313:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1313:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:1"
																				},
																				"nativeSrc": "1296:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1284:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1284:3:1"
																		},
																		"nativeSrc": "1284:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1284:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1266:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:1"
																},
																"nativeSrc": "1266:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1266:51:1"
															},
															"nativeSrc": "1266:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1266:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1120:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1190:9:1",
														"nodeType": "YulTypedName",
														"src": "1190:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1201:6:1",
														"nodeType": "YulTypedName",
														"src": "1201:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1212:4:1",
														"nodeType": "YulTypedName",
														"src": "1212:4:1",
														"type": ""
													}
												],
												"src": "1120:203:1"
											},
											{
												"body": {
													"nativeSrc": "1429:76:1",
													"nodeType": "YulBlock",
													"src": "1429:76:1",
													"statements": [
														{
															"nativeSrc": "1439:26:1",
															"nodeType": "YulAssignment",
															"src": "1439:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1451:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1451:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1462:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1462:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1447:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1447:3:1"
																},
																"nativeSrc": "1447:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1447:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1439:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1439:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1481:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1481:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1492:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1492:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1474:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:1"
																},
																"nativeSrc": "1474:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1474:25:1"
															},
															"nativeSrc": "1474:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1474:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1328:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1398:9:1",
														"nodeType": "YulTypedName",
														"src": "1398:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1409:6:1",
														"nodeType": "YulTypedName",
														"src": "1409:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1420:4:1",
														"nodeType": "YulTypedName",
														"src": "1420:4:1",
														"type": ""
													}
												],
												"src": "1328:177:1"
											},
											{
												"body": {
													"nativeSrc": "1559:124:1",
													"nodeType": "YulBlock",
													"src": "1559:124:1",
													"statements": [
														{
															"nativeSrc": "1569:29:1",
															"nodeType": "YulAssignment",
															"src": "1569:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1591:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1591:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1578:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1578:12:1"
																},
																"nativeSrc": "1578:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1578:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1569:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1569:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1661:16:1",
																"nodeType": "YulBlock",
																"src": "1661:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1670:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1670:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1673:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1673:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1663:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1663:6:1"
																			},
																			"nativeSrc": "1663:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1663:12:1"
																		},
																		"nativeSrc": "1663:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1663:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1620:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1620:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1631:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1631:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1646:3:1",
																										"nodeType": "YulLiteral",
																										"src": "1646:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1651:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1651:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1642:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1642:3:1"
																								},
																								"nativeSrc": "1642:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1642:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1655:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1655:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1638:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1638:3:1"
																						},
																						"nativeSrc": "1638:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1638:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1627:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1627:3:1"
																				},
																				"nativeSrc": "1627:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1627:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1617:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1617:2:1"
																		},
																		"nativeSrc": "1617:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1617:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1610:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:1"
																},
																"nativeSrc": "1610:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1610:50:1"
															},
															"nativeSrc": "1607:70:1",
															"nodeType": "YulIf",
															"src": "1607:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1510:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1538:6:1",
														"nodeType": "YulTypedName",
														"src": "1538:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1549:5:1",
														"nodeType": "YulTypedName",
														"src": "1549:5:1",
														"type": ""
													}
												],
												"src": "1510:173:1"
											},
											{
												"body": {
													"nativeSrc": "1806:576:1",
													"nodeType": "YulBlock",
													"src": "1806:576:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1853:16:1",
																"nodeType": "YulBlock",
																"src": "1853:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1862:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1862:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1865:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1865:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1855:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1855:6:1"
																			},
																			"nativeSrc": "1855:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1855:12:1"
																		},
																		"nativeSrc": "1855:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1827:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1827:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1836:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1823:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1823:3:1"
																		},
																		"nativeSrc": "1823:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1823:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:3:1",
																		"nodeType": "YulLiteral",
																		"src": "1848:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1819:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1819:3:1"
																},
																"nativeSrc": "1819:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1819:33:1"
															},
															"nativeSrc": "1816:53:1",
															"nodeType": "YulIf",
															"src": "1816:53:1"
														},
														{
															"nativeSrc": "1878:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1878:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1904:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1904:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1891:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1891:12:1"
																},
																"nativeSrc": "1891:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1891:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1882:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1882:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1964:16:1",
																"nodeType": "YulBlock",
																"src": "1964:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1973:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1973:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1976:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1976:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1966:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1966:6:1"
																			},
																			"nativeSrc": "1966:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1966:12:1"
																		},
																		"nativeSrc": "1966:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1966:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1936:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1936:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1947:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1947:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1954:6:1",
																						"nodeType": "YulLiteral",
																						"src": "1954:6:1",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1943:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1943:3:1"
																				},
																				"nativeSrc": "1943:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1943:18:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1933:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1933:2:1"
																		},
																		"nativeSrc": "1933:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:29:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1926:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1926:6:1"
																},
																"nativeSrc": "1926:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1926:37:1"
															},
															"nativeSrc": "1923:57:1",
															"nodeType": "YulIf",
															"src": "1923:57:1"
														},
														{
															"nativeSrc": "1989:15:1",
															"nodeType": "YulAssignment",
															"src": "1989:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1999:5:1",
																"nodeType": "YulIdentifier",
																"src": "1999:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1989:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1989:6:1"
																}
															]
														},
														{
															"nativeSrc": "2013:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2013:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2045:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2056:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2056:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2041:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:1"
																		},
																		"nativeSrc": "2041:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2028:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2028:12:1"
																},
																"nativeSrc": "2028:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2028:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2017:7:1",
																	"nodeType": "YulTypedName",
																	"src": "2017:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2112:16:1",
																"nodeType": "YulBlock",
																"src": "2112:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2121:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2121:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2124:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2124:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2114:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2114:6:1"
																			},
																			"nativeSrc": "2114:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2114:12:1"
																		},
																		"nativeSrc": "2114:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2114:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "2082:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2082:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "2095:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "2095:7:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2104:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2104:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2091:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2091:3:1"
																				},
																				"nativeSrc": "2091:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2091:18:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2079:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2079:2:1"
																		},
																		"nativeSrc": "2079:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2079:31:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2072:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:1"
																},
																"nativeSrc": "2072:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2072:39:1"
															},
															"nativeSrc": "2069:59:1",
															"nodeType": "YulIf",
															"src": "2069:59:1"
														},
														{
															"nativeSrc": "2137:17:1",
															"nodeType": "YulAssignment",
															"src": "2137:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "2147:7:1",
																"nodeType": "YulIdentifier",
																"src": "2147:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2137:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:1"
																}
															]
														},
														{
															"nativeSrc": "2163:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2163:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2195:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2195:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2206:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2206:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2191:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2191:3:1"
																		},
																		"nativeSrc": "2191:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2191:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2178:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2178:12:1"
																},
																"nativeSrc": "2178:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2178:32:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2167:7:1",
																	"nodeType": "YulTypedName",
																	"src": "2167:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2277:16:1",
																"nodeType": "YulBlock",
																"src": "2277:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2286:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2286:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2289:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2289:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2279:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2279:6:1"
																			},
																			"nativeSrc": "2279:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2279:12:1"
																		},
																		"nativeSrc": "2279:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2279:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nativeSrc": "2232:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2232:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_2",
																						"nativeSrc": "2245:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "2245:7:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2262:3:1",
																										"nodeType": "YulLiteral",
																										"src": "2262:3:1",
																										"type": "",
																										"value": "232"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2267:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2267:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2258:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2258:3:1"
																								},
																								"nativeSrc": "2258:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2258:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2271:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2271:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2254:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2254:3:1"
																						},
																						"nativeSrc": "2254:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2254:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2241:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2241:3:1"
																				},
																				"nativeSrc": "2241:33:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2241:33:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2229:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2229:2:1"
																		},
																		"nativeSrc": "2229:46:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2229:46:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2222:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:1"
																},
																"nativeSrc": "2222:54:1",
																"nodeType": "YulFunctionCall",
																"src": "2222:54:1"
															},
															"nativeSrc": "2219:74:1",
															"nodeType": "YulIf",
															"src": "2219:74:1"
														},
														{
															"nativeSrc": "2302:17:1",
															"nodeType": "YulAssignment",
															"src": "2302:17:1",
															"value": {
																"name": "value_2",
																"nativeSrc": "2312:7:1",
																"nodeType": "YulIdentifier",
																"src": "2312:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2302:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2302:6:1"
																}
															]
														},
														{
															"nativeSrc": "2328:48:1",
															"nodeType": "YulAssignment",
															"src": "2328:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2361:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2361:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2372:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2372:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2357:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:1"
																		},
																		"nativeSrc": "2357:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2338:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2338:18:1"
																},
																"nativeSrc": "2338:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2338:38:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16t_uint8t_uint232t_address",
												"nativeSrc": "1688:694:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1748:9:1",
														"nodeType": "YulTypedName",
														"src": "1748:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1759:7:1",
														"nodeType": "YulTypedName",
														"src": "1759:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1771:6:1",
														"nodeType": "YulTypedName",
														"src": "1771:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1779:6:1",
														"nodeType": "YulTypedName",
														"src": "1779:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1787:6:1",
														"nodeType": "YulTypedName",
														"src": "1787:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1795:6:1",
														"nodeType": "YulTypedName",
														"src": "1795:6:1",
														"type": ""
													}
												],
												"src": "1688:694:1"
											},
											{
												"body": {
													"nativeSrc": "2457:116:1",
													"nodeType": "YulBlock",
													"src": "2457:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2503:16:1",
																"nodeType": "YulBlock",
																"src": "2503:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2512:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2512:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2515:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2505:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2505:6:1"
																			},
																			"nativeSrc": "2505:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2505:12:1"
																		},
																		"nativeSrc": "2505:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2505:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2478:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2487:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2487:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2474:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2474:3:1"
																		},
																		"nativeSrc": "2474:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2474:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2499:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2470:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2470:3:1"
																},
																"nativeSrc": "2470:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2470:32:1"
															},
															"nativeSrc": "2467:52:1",
															"nodeType": "YulIf",
															"src": "2467:52:1"
														},
														{
															"nativeSrc": "2528:39:1",
															"nodeType": "YulAssignment",
															"src": "2528:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2557:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2557:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2538:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2538:18:1"
																},
																"nativeSrc": "2538:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2538:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2528:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2387:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2423:9:1",
														"nodeType": "YulTypedName",
														"src": "2423:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2434:7:1",
														"nodeType": "YulTypedName",
														"src": "2434:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2446:6:1",
														"nodeType": "YulTypedName",
														"src": "2446:6:1",
														"type": ""
													}
												],
												"src": "2387:186:1"
											},
											{
												"body": {
													"nativeSrc": "2787:573:1",
													"nodeType": "YulBlock",
													"src": "2787:573:1",
													"statements": [
														{
															"nativeSrc": "2797:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2797:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2815:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2826:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2826:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2811:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:1"
																},
																"nativeSrc": "2811:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2811:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2801:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2801:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2845:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2845:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2856:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2856:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2838:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2838:6:1"
																},
																"nativeSrc": "2838:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2838:21:1"
															},
															"nativeSrc": "2838:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "2838:21:1"
														},
														{
															"nativeSrc": "2868:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2868:17:1",
															"value": {
																"name": "tail_1",
																"nativeSrc": "2879:6:1",
																"nodeType": "YulIdentifier",
																"src": "2879:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "2872:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2872:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2894:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2894:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2914:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2914:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2908:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2908:5:1"
																},
																"nativeSrc": "2908:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2908:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2898:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2898:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "2937:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2945:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2945:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2930:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:1"
																},
																"nativeSrc": "2930:22:1",
																"nodeType": "YulFunctionCall",
																"src": "2930:22:1"
															},
															"nativeSrc": "2930:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "2930:22:1"
														},
														{
															"nativeSrc": "2961:25:1",
															"nodeType": "YulAssignment",
															"src": "2961:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2972:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2972:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2983:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2983:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2968:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2968:3:1"
																},
																"nativeSrc": "2968:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2968:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2961:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2961:3:1"
																}
															]
														},
														{
															"nativeSrc": "2995:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2995:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3013:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3013:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3009:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3009:3:1"
																},
																"nativeSrc": "3009:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3009:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2999:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2999:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3033:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3033:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3042:1:1",
																"nodeType": "YulLiteral",
																"src": "3042:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3037:1:1",
																	"nodeType": "YulTypedName",
																	"src": "3037:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3101:233:1",
																"nodeType": "YulBlock",
																"src": "3101:233:1",
																"statements": [
																	{
																		"nativeSrc": "3115:23:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3115:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3131:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3131:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3125:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3125:5:1"
																			},
																			"nativeSrc": "3125:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3125:13:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "3119:2:1",
																				"nodeType": "YulTypedName",
																				"src": "3119:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3158:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3158:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "3173:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "3173:2:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "3167:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3167:5:1"
																							},
																							"nativeSrc": "3167:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3167:9:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3178:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3178:10:1",
																							"type": "",
																							"value": "0xffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3163:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3163:3:1"
																					},
																					"nativeSrc": "3163:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3163:26:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3151:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3151:6:1"
																			},
																			"nativeSrc": "3151:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3151:39:1"
																		},
																		"nativeSrc": "3151:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3151:39:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "3214:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3214:3:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3219:2:1",
																							"nodeType": "YulLiteral",
																							"src": "3219:2:1",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3210:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3210:3:1"
																					},
																					"nativeSrc": "3210:12:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3210:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_1",
																											"nativeSrc": "3238:2:1",
																											"nodeType": "YulIdentifier",
																											"src": "3238:2:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3242:2:1",
																											"nodeType": "YulLiteral",
																											"src": "3242:2:1",
																											"type": "",
																											"value": "32"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "3234:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3234:3:1"
																									},
																									"nativeSrc": "3234:11:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3234:11:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "3228:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3228:5:1"
																							},
																							"nativeSrc": "3228:18:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3228:18:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3248:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3248:4:1",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3224:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3224:3:1"
																					},
																					"nativeSrc": "3224:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3224:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3203:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3203:6:1"
																			},
																			"nativeSrc": "3203:51:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3203:51:1"
																		},
																		"nativeSrc": "3203:51:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3203:51:1"
																	},
																	{
																		"nativeSrc": "3267:19:1",
																		"nodeType": "YulAssignment",
																		"src": "3267:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3278:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3278:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3283:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3283:2:1",
																					"type": "",
																					"value": "64"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3274:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3274:3:1"
																			},
																			"nativeSrc": "3274:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3274:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3267:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3267:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3299:25:1",
																		"nodeType": "YulAssignment",
																		"src": "3299:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3313:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3313:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3321:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3321:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3309:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3309:3:1"
																			},
																			"nativeSrc": "3309:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3309:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3299:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3299:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3063:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3063:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3066:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3060:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3060:2:1"
																},
																"nativeSrc": "3060:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3060:13:1"
															},
															"nativeSrc": "3052:282:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3074:18:1",
																"nodeType": "YulBlock",
																"src": "3074:18:1",
																"statements": [
																	{
																		"nativeSrc": "3076:14:1",
																		"nodeType": "YulAssignment",
																		"src": "3076:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3085:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "3085:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3088:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3088:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3081:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3081:3:1"
																			},
																			"nativeSrc": "3081:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3081:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3076:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "3076:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3056:3:1",
																"nodeType": "YulBlock",
																"src": "3056:3:1",
																"statements": []
															},
															"src": "3052:282:1"
														},
														{
															"nativeSrc": "3343:11:1",
															"nodeType": "YulAssignment",
															"src": "3343:11:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3351:3:1",
																"nodeType": "YulIdentifier",
																"src": "3351:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3343:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3343:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_OpenedLotInfo_$13_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_OpenedLotInfo_$13_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2578:782:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2756:9:1",
														"nodeType": "YulTypedName",
														"src": "2756:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2767:6:1",
														"nodeType": "YulTypedName",
														"src": "2767:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2778:4:1",
														"nodeType": "YulTypedName",
														"src": "2778:4:1",
														"type": ""
													}
												],
												"src": "2578:782:1"
											},
											{
												"body": {
													"nativeSrc": "3539:172:1",
													"nodeType": "YulBlock",
													"src": "3539:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3556:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3556:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3567:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3567:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3549:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3549:6:1"
																},
																"nativeSrc": "3549:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3549:21:1"
															},
															"nativeSrc": "3549:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3549:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3590:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3590:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3601:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3601:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3586:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:1"
																		},
																		"nativeSrc": "3586:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3586:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3606:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3606:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3579:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3579:6:1"
																},
																"nativeSrc": "3579:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3579:30:1"
															},
															"nativeSrc": "3579:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3579:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3629:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3629:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3640:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3640:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3625:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3625:3:1"
																		},
																		"nativeSrc": "3625:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3625:18:1"
																	},
																	{
																		"hexValue": "596f75206d757374206265206120696e766573746f72",
																		"kind": "string",
																		"nativeSrc": "3645:24:1",
																		"nodeType": "YulLiteral",
																		"src": "3645:24:1",
																		"type": "",
																		"value": "You must be a investor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3618:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:1"
																},
																"nativeSrc": "3618:52:1",
																"nodeType": "YulFunctionCall",
																"src": "3618:52:1"
															},
															"nativeSrc": "3618:52:1",
															"nodeType": "YulExpressionStatement",
															"src": "3618:52:1"
														},
														{
															"nativeSrc": "3679:26:1",
															"nodeType": "YulAssignment",
															"src": "3679:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3691:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3691:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3702:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3687:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:1"
																},
																"nativeSrc": "3687:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3687:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3679:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3679:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d19f3ae2e405bd6a9cc212ba46bfe12e20adf32eab8aa09d5e4d1904a928c8a2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3365:346:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3516:9:1",
														"nodeType": "YulTypedName",
														"src": "3516:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3530:4:1",
														"nodeType": "YulTypedName",
														"src": "3530:4:1",
														"type": ""
													}
												],
												"src": "3365:346:1"
											},
											{
												"body": {
													"nativeSrc": "3748:95:1",
													"nodeType": "YulBlock",
													"src": "3748:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3765:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3765:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3772:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3772:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3777:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3777:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3768:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:1"
																		},
																		"nativeSrc": "3768:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3768:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3758:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3758:6:1"
																},
																"nativeSrc": "3758:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3758:31:1"
															},
															"nativeSrc": "3758:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3758:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3805:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3805:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3808:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3808:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3798:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:1"
																},
																"nativeSrc": "3798:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3798:15:1"
															},
															"nativeSrc": "3798:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3798:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3829:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3829:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3832:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3832:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3822:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3822:6:1"
																},
																"nativeSrc": "3822:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3822:15:1"
															},
															"nativeSrc": "3822:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3822:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3716:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3716:127:1"
											},
											{
												"body": {
													"nativeSrc": "3896:77:1",
													"nodeType": "YulBlock",
													"src": "3896:77:1",
													"statements": [
														{
															"nativeSrc": "3906:16:1",
															"nodeType": "YulAssignment",
															"src": "3906:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3917:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3917:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3920:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3920:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3913:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:1"
																},
																"nativeSrc": "3913:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3913:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3906:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3906:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3945:22:1",
																"nodeType": "YulBlock",
																"src": "3945:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3947:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3947:16:1"
																			},
																			"nativeSrc": "3947:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3947:18:1"
																		},
																		"nativeSrc": "3947:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3947:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3937:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3937:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3940:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3940:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3934:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3934:2:1"
																},
																"nativeSrc": "3934:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3934:10:1"
															},
															"nativeSrc": "3931:36:1",
															"nodeType": "YulIf",
															"src": "3931:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3848:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3879:1:1",
														"nodeType": "YulTypedName",
														"src": "3879:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3882:1:1",
														"nodeType": "YulTypedName",
														"src": "3882:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3888:3:1",
														"nodeType": "YulTypedName",
														"src": "3888:3:1",
														"type": ""
													}
												],
												"src": "3848:125:1"
											},
											{
												"body": {
													"nativeSrc": "4024:171:1",
													"nodeType": "YulBlock",
													"src": "4024:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4055:111:1",
																"nodeType": "YulBlock",
																"src": "4055:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4076:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4076:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4083:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4083:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4088:10:1",
																							"nodeType": "YulLiteral",
																							"src": "4088:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4079:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4079:3:1"
																					},
																					"nativeSrc": "4079:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4079:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4069:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4069:6:1"
																			},
																			"nativeSrc": "4069:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4069:31:1"
																		},
																		"nativeSrc": "4069:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4069:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4120:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4120:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4123:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4123:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4113:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4113:6:1"
																			},
																			"nativeSrc": "4113:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:15:1"
																		},
																		"nativeSrc": "4113:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4148:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4148:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4151:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4151:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4141:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4141:6:1"
																			},
																			"nativeSrc": "4141:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4141:15:1"
																		},
																		"nativeSrc": "4141:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4141:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4044:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4037:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4037:6:1"
																},
																"nativeSrc": "4037:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4037:9:1"
															},
															"nativeSrc": "4034:132:1",
															"nodeType": "YulIf",
															"src": "4034:132:1"
														},
														{
															"nativeSrc": "4175:14:1",
															"nodeType": "YulAssignment",
															"src": "4175:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4184:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4184:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4187:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4187:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4180:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4180:3:1"
																},
																"nativeSrc": "4180:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4180:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4175:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4175:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3978:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4009:1:1",
														"nodeType": "YulTypedName",
														"src": "4009:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4012:1:1",
														"nodeType": "YulTypedName",
														"src": "4012:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4018:1:1",
														"nodeType": "YulTypedName",
														"src": "4018:1:1",
														"type": ""
													}
												],
												"src": "3978:217:1"
											},
											{
												"body": {
													"nativeSrc": "4232:95:1",
													"nodeType": "YulBlock",
													"src": "4232:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4249:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4249:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4256:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4256:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4261:10:1",
																				"nodeType": "YulLiteral",
																				"src": "4261:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4252:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4252:3:1"
																		},
																		"nativeSrc": "4252:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4252:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4242:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4242:6:1"
																},
																"nativeSrc": "4242:31:1",
																"nodeType": "YulFunctionCall",
																"src": "4242:31:1"
															},
															"nativeSrc": "4242:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "4242:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4289:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4289:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4292:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4292:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4282:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4282:6:1"
																},
																"nativeSrc": "4282:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4282:15:1"
															},
															"nativeSrc": "4282:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4282:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4313:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4313:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4316:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4316:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4306:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4306:6:1"
																},
																"nativeSrc": "4306:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4306:15:1"
															},
															"nativeSrc": "4306:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4306:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4200:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4200:127:1"
											},
											{
												"body": {
													"nativeSrc": "4506:180:1",
													"nodeType": "YulBlock",
													"src": "4506:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4523:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4523:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4534:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4534:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4516:6:1"
																},
																"nativeSrc": "4516:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4516:21:1"
															},
															"nativeSrc": "4516:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4516:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4557:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4557:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4568:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4568:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4553:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4553:3:1"
																		},
																		"nativeSrc": "4553:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4553:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4573:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4573:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4546:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4546:6:1"
																},
																"nativeSrc": "4546:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4546:30:1"
															},
															"nativeSrc": "4546:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4546:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4596:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4596:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4607:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4607:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4592:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4592:3:1"
																		},
																		"nativeSrc": "4592:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4592:18:1"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682070726f66697420746f20776974686472617721",
																		"kind": "string",
																		"nativeSrc": "4612:32:1",
																		"nodeType": "YulLiteral",
																		"src": "4612:32:1",
																		"type": "",
																		"value": "Not enough profit to withdraw!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4585:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:1"
																},
																"nativeSrc": "4585:60:1",
																"nodeType": "YulFunctionCall",
																"src": "4585:60:1"
															},
															"nativeSrc": "4585:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "4585:60:1"
														},
														{
															"nativeSrc": "4654:26:1",
															"nodeType": "YulAssignment",
															"src": "4654:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4666:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4666:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4677:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4677:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4662:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:1"
																},
																"nativeSrc": "4662:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4662:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4654:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa0b0d924bce727ab99514b9f4c92115ad6db118fca10e53f88c8c4c48fc7dfc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4332:354:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4483:9:1",
														"nodeType": "YulTypedName",
														"src": "4483:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4497:4:1",
														"nodeType": "YulTypedName",
														"src": "4497:4:1",
														"type": ""
													}
												],
												"src": "4332:354:1"
											},
											{
												"body": {
													"nativeSrc": "4740:79:1",
													"nodeType": "YulBlock",
													"src": "4740:79:1",
													"statements": [
														{
															"nativeSrc": "4750:17:1",
															"nodeType": "YulAssignment",
															"src": "4750:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4762:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4762:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4765:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4765:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4758:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4758:3:1"
																},
																"nativeSrc": "4758:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4758:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4750:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4750:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4791:22:1",
																"nodeType": "YulBlock",
																"src": "4791:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4793:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4793:16:1"
																			},
																			"nativeSrc": "4793:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4793:18:1"
																		},
																		"nativeSrc": "4793:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4793:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4782:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4782:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4788:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4788:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4779:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4779:2:1"
																},
																"nativeSrc": "4779:11:1",
																"nodeType": "YulFunctionCall",
																"src": "4779:11:1"
															},
															"nativeSrc": "4776:37:1",
															"nodeType": "YulIf",
															"src": "4776:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4691:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4722:1:1",
														"nodeType": "YulTypedName",
														"src": "4722:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4725:1:1",
														"nodeType": "YulTypedName",
														"src": "4725:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4731:4:1",
														"nodeType": "YulTypedName",
														"src": "4731:4:1",
														"type": ""
													}
												],
												"src": "4691:128:1"
											},
											{
												"body": {
													"nativeSrc": "4876:116:1",
													"nodeType": "YulBlock",
													"src": "4876:116:1",
													"statements": [
														{
															"nativeSrc": "4886:20:1",
															"nodeType": "YulAssignment",
															"src": "4886:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4901:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4901:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4904:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4904:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4897:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4897:3:1"
																},
																"nativeSrc": "4897:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4897:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4886:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4886:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4964:22:1",
																"nodeType": "YulBlock",
																"src": "4964:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4966:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4966:16:1"
																			},
																			"nativeSrc": "4966:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4966:18:1"
																		},
																		"nativeSrc": "4966:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4966:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4935:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4935:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4928:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4928:6:1"
																				},
																				"nativeSrc": "4928:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4928:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4942:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4942:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4949:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "4949:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4958:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4958:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4945:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4945:3:1"
																						},
																						"nativeSrc": "4945:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4945:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4939:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4939:2:1"
																				},
																				"nativeSrc": "4939:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4939:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4925:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4925:2:1"
																		},
																		"nativeSrc": "4925:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4925:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4918:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4918:6:1"
																},
																"nativeSrc": "4918:45:1",
																"nodeType": "YulFunctionCall",
																"src": "4918:45:1"
															},
															"nativeSrc": "4915:71:1",
															"nodeType": "YulIf",
															"src": "4915:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4824:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4855:1:1",
														"nodeType": "YulTypedName",
														"src": "4855:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4858:1:1",
														"nodeType": "YulTypedName",
														"src": "4858:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4864:7:1",
														"nodeType": "YulTypedName",
														"src": "4864:7:1",
														"type": ""
													}
												],
												"src": "4824:168:1"
											},
											{
												"body": {
													"nativeSrc": "5029:95:1",
													"nodeType": "YulBlock",
													"src": "5029:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5046:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5046:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5053:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5053:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5058:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5058:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5049:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5049:3:1"
																		},
																		"nativeSrc": "5049:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5049:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5039:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5039:6:1"
																},
																"nativeSrc": "5039:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5039:31:1"
															},
															"nativeSrc": "5039:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5039:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5086:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5086:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5089:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5089:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5079:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:1"
																},
																"nativeSrc": "5079:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5079:15:1"
															},
															"nativeSrc": "5079:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5079:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5110:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5110:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5113:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5113:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5103:6:1"
																},
																"nativeSrc": "5103:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5103:15:1"
															},
															"nativeSrc": "5103:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5103:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4997:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4997:127:1"
											},
											{
												"body": {
													"nativeSrc": "5303:227:1",
													"nodeType": "YulBlock",
													"src": "5303:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5320:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5320:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5331:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5331:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5313:6:1"
																},
																"nativeSrc": "5313:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5313:21:1"
															},
															"nativeSrc": "5313:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5313:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5354:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5354:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5365:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5365:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5350:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5350:3:1"
																		},
																		"nativeSrc": "5350:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5350:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5370:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5370:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5343:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:1"
																},
																"nativeSrc": "5343:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5343:30:1"
															},
															"nativeSrc": "5343:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5343:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5393:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5393:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5404:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5404:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5389:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:1"
																		},
																		"nativeSrc": "5389:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5389:18:1"
																	},
																	{
																		"hexValue": "496e766573746d656e7420616d6f756e7420626574657765656e203120616e64",
																		"kind": "string",
																		"nativeSrc": "5409:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5409:34:1",
																		"type": "",
																		"value": "Investment amount beteween 1 and"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5382:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5382:6:1"
																},
																"nativeSrc": "5382:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5382:62:1"
															},
															"nativeSrc": "5382:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5382:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5464:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5464:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5475:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5475:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5460:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5460:3:1"
																		},
																		"nativeSrc": "5460:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:18:1"
																	},
																	{
																		"hexValue": "2031303030",
																		"kind": "string",
																		"nativeSrc": "5480:7:1",
																		"nodeType": "YulLiteral",
																		"src": "5480:7:1",
																		"type": "",
																		"value": " 1000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5453:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5453:6:1"
																},
																"nativeSrc": "5453:35:1",
																"nodeType": "YulFunctionCall",
																"src": "5453:35:1"
															},
															"nativeSrc": "5453:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "5453:35:1"
														},
														{
															"nativeSrc": "5497:27:1",
															"nodeType": "YulAssignment",
															"src": "5497:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5509:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5509:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5520:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5520:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5505:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5505:3:1"
																},
																"nativeSrc": "5505:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5505:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5497:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5497:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0d970ba88c4f8a655dbf7f723bd7f850579d1890238dc88401ed4220f9f6af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5129:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5280:9:1",
														"nodeType": "YulTypedName",
														"src": "5280:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5294:4:1",
														"nodeType": "YulTypedName",
														"src": "5294:4:1",
														"type": ""
													}
												],
												"src": "5129:401:1"
											},
											{
												"body": {
													"nativeSrc": "5709:227:1",
													"nodeType": "YulBlock",
													"src": "5709:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5726:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5726:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5737:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5737:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5719:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:1"
																},
																"nativeSrc": "5719:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5719:21:1"
															},
															"nativeSrc": "5719:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5719:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5760:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5760:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5771:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5771:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5756:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5756:3:1"
																		},
																		"nativeSrc": "5756:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5756:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5776:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5776:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5749:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5749:6:1"
																},
																"nativeSrc": "5749:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5749:30:1"
															},
															"nativeSrc": "5749:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5749:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5799:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5799:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5810:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5810:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5795:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5795:3:1"
																		},
																		"nativeSrc": "5795:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206861766520756e64726177206c6f7474657279207469",
																		"kind": "string",
																		"nativeSrc": "5815:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5815:34:1",
																		"type": "",
																		"value": "You don't have undraw lottery ti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5788:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:1"
																},
																"nativeSrc": "5788:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5788:62:1"
															},
															"nativeSrc": "5788:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5788:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5881:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5881:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5866:3:1"
																		},
																		"nativeSrc": "5866:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5866:18:1"
																	},
																	{
																		"hexValue": "636b657473",
																		"kind": "string",
																		"nativeSrc": "5886:7:1",
																		"nodeType": "YulLiteral",
																		"src": "5886:7:1",
																		"type": "",
																		"value": "ckets"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5859:6:1"
																},
																"nativeSrc": "5859:35:1",
																"nodeType": "YulFunctionCall",
																"src": "5859:35:1"
															},
															"nativeSrc": "5859:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "5859:35:1"
														},
														{
															"nativeSrc": "5903:27:1",
															"nodeType": "YulAssignment",
															"src": "5903:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5915:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5915:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5926:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5926:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5911:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:1"
																},
																"nativeSrc": "5911:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5911:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5903:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5903:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbcb3e84b1ed43636cc9086833c8a3c1965d67405383b25f200d36ccaad3ebb0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5535:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5686:9:1",
														"nodeType": "YulTypedName",
														"src": "5686:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5700:4:1",
														"nodeType": "YulTypedName",
														"src": "5700:4:1",
														"type": ""
													}
												],
												"src": "5535:401:1"
											},
											{
												"body": {
													"nativeSrc": "6115:163:1",
													"nodeType": "YulBlock",
													"src": "6115:163:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6132:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6132:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6143:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6143:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6125:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6125:6:1"
																},
																"nativeSrc": "6125:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6125:21:1"
															},
															"nativeSrc": "6125:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6125:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6166:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6166:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6177:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6177:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6162:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6162:3:1"
																		},
																		"nativeSrc": "6162:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6162:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6182:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6182:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:1"
																},
																"nativeSrc": "6155:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6155:30:1"
															},
															"nativeSrc": "6155:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6155:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6205:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6205:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6216:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6216:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6201:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6201:3:1"
																		},
																		"nativeSrc": "6201:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6201:18:1"
																	},
																	{
																		"hexValue": "49742773206e6f742074696d65",
																		"kind": "string",
																		"nativeSrc": "6221:15:1",
																		"nodeType": "YulLiteral",
																		"src": "6221:15:1",
																		"type": "",
																		"value": "It's not time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6194:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6194:6:1"
																},
																"nativeSrc": "6194:43:1",
																"nodeType": "YulFunctionCall",
																"src": "6194:43:1"
															},
															"nativeSrc": "6194:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "6194:43:1"
														},
														{
															"nativeSrc": "6246:26:1",
															"nodeType": "YulAssignment",
															"src": "6246:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6258:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6258:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6269:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6269:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6254:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6254:3:1"
																},
																"nativeSrc": "6254:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6254:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6246:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6246:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_650dc1fb357829359fbf0a956d09cf3e8980961a8a919494bff661cc2fdd3f85__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5941:337:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6092:9:1",
														"nodeType": "YulTypedName",
														"src": "6092:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6106:4:1",
														"nodeType": "YulTypedName",
														"src": "6106:4:1",
														"type": ""
													}
												],
												"src": "5941:337:1"
											},
											{
												"body": {
													"nativeSrc": "6430:100:1",
													"nodeType": "YulBlock",
													"src": "6430:100:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6447:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6447:3:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6452:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6452:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6440:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6440:6:1"
																},
																"nativeSrc": "6440:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6440:19:1"
															},
															"nativeSrc": "6440:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "6440:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6479:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6479:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6484:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6484:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6475:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6475:3:1"
																		},
																		"nativeSrc": "6475:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6475:12:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6489:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6489:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6468:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6468:6:1"
																},
																"nativeSrc": "6468:28:1",
																"nodeType": "YulFunctionCall",
																"src": "6468:28:1"
															},
															"nativeSrc": "6468:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "6468:28:1"
														},
														{
															"nativeSrc": "6505:19:1",
															"nodeType": "YulAssignment",
															"src": "6505:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6516:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6516:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6521:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6521:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6512:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6512:3:1"
																},
																"nativeSrc": "6512:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6512:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6505:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6283:247:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6398:3:1",
														"nodeType": "YulTypedName",
														"src": "6398:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6403:6:1",
														"nodeType": "YulTypedName",
														"src": "6403:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6411:6:1",
														"nodeType": "YulTypedName",
														"src": "6411:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6422:3:1",
														"nodeType": "YulTypedName",
														"src": "6422:3:1",
														"type": ""
													}
												],
												"src": "6283:247:1"
											},
											{
												"body": {
													"nativeSrc": "6709:170:1",
													"nodeType": "YulBlock",
													"src": "6709:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6726:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6726:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6737:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6737:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6719:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6719:6:1"
																},
																"nativeSrc": "6719:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6719:21:1"
															},
															"nativeSrc": "6719:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6719:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6760:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6760:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6771:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6771:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6756:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6756:3:1"
																		},
																		"nativeSrc": "6756:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6756:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6776:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6776:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6749:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6749:6:1"
																},
																"nativeSrc": "6749:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6749:30:1"
															},
															"nativeSrc": "6749:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6749:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6799:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6799:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6810:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6810:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6795:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6795:3:1"
																		},
																		"nativeSrc": "6795:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6795:18:1"
																	},
																	{
																		"hexValue": "427579206174206c65617374206f6e6520656767",
																		"kind": "string",
																		"nativeSrc": "6815:22:1",
																		"nodeType": "YulLiteral",
																		"src": "6815:22:1",
																		"type": "",
																		"value": "Buy at least one egg"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6788:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6788:6:1"
																},
																"nativeSrc": "6788:50:1",
																"nodeType": "YulFunctionCall",
																"src": "6788:50:1"
															},
															"nativeSrc": "6788:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "6788:50:1"
														},
														{
															"nativeSrc": "6847:26:1",
															"nodeType": "YulAssignment",
															"src": "6847:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6859:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6859:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6870:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6855:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6855:3:1"
																},
																"nativeSrc": "6855:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6855:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6847:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6847:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54b29162b0568d907215ea48697c2b664b38e09efead77ab1fb9655c40990fdc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6535:344:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6686:9:1",
														"nodeType": "YulTypedName",
														"src": "6686:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6700:4:1",
														"nodeType": "YulTypedName",
														"src": "6700:4:1",
														"type": ""
													}
												],
												"src": "6535:344:1"
											},
											{
												"body": {
													"nativeSrc": "7058:177:1",
													"nodeType": "YulBlock",
													"src": "7058:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7075:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7075:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7086:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7086:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7068:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7068:6:1"
																},
																"nativeSrc": "7068:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7068:21:1"
															},
															"nativeSrc": "7068:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7068:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7109:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7109:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7120:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7120:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7105:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7105:3:1"
																		},
																		"nativeSrc": "7105:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7125:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7098:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7098:6:1"
																},
																"nativeSrc": "7098:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7098:30:1"
															},
															"nativeSrc": "7098:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7098:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7148:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7148:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7159:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7159:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7144:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:1"
																		},
																		"nativeSrc": "7144:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7144:18:1"
																	},
																	{
																		"hexValue": "4d756c7469706c6573206265747765656e203120616e6420313030",
																		"kind": "string",
																		"nativeSrc": "7164:29:1",
																		"nodeType": "YulLiteral",
																		"src": "7164:29:1",
																		"type": "",
																		"value": "Multiples between 1 and 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7137:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7137:6:1"
																},
																"nativeSrc": "7137:57:1",
																"nodeType": "YulFunctionCall",
																"src": "7137:57:1"
															},
															"nativeSrc": "7137:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "7137:57:1"
														},
														{
															"nativeSrc": "7203:26:1",
															"nodeType": "YulAssignment",
															"src": "7203:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7215:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7215:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7226:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7226:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7211:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7211:3:1"
																},
																"nativeSrc": "7211:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7211:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7203:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7203:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a19b8179a644aee2fcf1e2d1d7b79f205cf86aaa919d9253e13348420dfd1d6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6884:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7035:9:1",
														"nodeType": "YulTypedName",
														"src": "7035:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7049:4:1",
														"nodeType": "YulTypedName",
														"src": "7049:4:1",
														"type": ""
													}
												],
												"src": "6884:351:1"
											},
											{
												"body": {
													"nativeSrc": "7414:182:1",
													"nodeType": "YulBlock",
													"src": "7414:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7431:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7431:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7442:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7442:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7424:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7424:6:1"
																},
																"nativeSrc": "7424:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7424:21:1"
															},
															"nativeSrc": "7424:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7424:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7465:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7465:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7476:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7476:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7461:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:1"
																		},
																		"nativeSrc": "7461:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7481:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7481:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7454:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7454:6:1"
																},
																"nativeSrc": "7454:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7454:30:1"
															},
															"nativeSrc": "7454:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7454:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7504:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7504:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7515:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7500:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7500:3:1"
																		},
																		"nativeSrc": "7500:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7500:18:1"
																	},
																	{
																		"hexValue": "4e756d626572206f662065676773206265747765656e203120616e6420313030",
																		"kind": "string",
																		"nativeSrc": "7520:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7520:34:1",
																		"type": "",
																		"value": "Number of eggs between 1 and 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7493:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7493:6:1"
																},
																"nativeSrc": "7493:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7493:62:1"
															},
															"nativeSrc": "7493:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7493:62:1"
														},
														{
															"nativeSrc": "7564:26:1",
															"nodeType": "YulAssignment",
															"src": "7564:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7576:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7576:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7587:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7587:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7572:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7572:3:1"
																},
																"nativeSrc": "7572:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7572:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7564:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7564:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_796ec44d103b15b3fdf61562e61512ddb58363cfe331cf2a64d682079171b8d1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7240:356:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7391:9:1",
														"nodeType": "YulTypedName",
														"src": "7391:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7405:4:1",
														"nodeType": "YulTypedName",
														"src": "7405:4:1",
														"type": ""
													}
												],
												"src": "7240:356:1"
											},
											{
												"body": {
													"nativeSrc": "7652:181:1",
													"nodeType": "YulBlock",
													"src": "7652:181:1",
													"statements": [
														{
															"nativeSrc": "7662:54:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7662:54:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "7689:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "7689:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7692:6:1",
																				"nodeType": "YulLiteral",
																				"src": "7692:6:1",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7685:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7685:3:1"
																		},
																		"nativeSrc": "7685:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7685:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "7705:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "7705:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7708:6:1",
																				"nodeType": "YulLiteral",
																				"src": "7708:6:1",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7701:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7701:3:1"
																		},
																		"nativeSrc": "7701:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7701:14:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:1"
																},
																"nativeSrc": "7681:35:1",
																"nodeType": "YulFunctionCall",
																"src": "7681:35:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7666:11:1",
																	"nodeType": "YulTypedName",
																	"src": "7666:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7725:35:1",
															"nodeType": "YulAssignment",
															"src": "7725:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7740:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "7740:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7753:6:1",
																		"nodeType": "YulLiteral",
																		"src": "7753:6:1",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7736:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7736:3:1"
																},
																"nativeSrc": "7736:24:1",
																"nodeType": "YulFunctionCall",
																"src": "7736:24:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7725:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "7725:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7805:22:1",
																"nodeType": "YulBlock",
																"src": "7805:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7807:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7807:16:1"
																			},
																			"nativeSrc": "7807:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7807:18:1"
																		},
																		"nativeSrc": "7807:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7807:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nativeSrc": "7782:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7782:7:1"
																			},
																			{
																				"name": "product_raw",
																				"nativeSrc": "7791:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "7791:11:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7779:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7779:2:1"
																		},
																		"nativeSrc": "7779:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7779:24:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7772:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7772:6:1"
																},
																"nativeSrc": "7772:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7772:32:1"
															},
															"nativeSrc": "7769:58:1",
															"nodeType": "YulIf",
															"src": "7769:58:1"
														}
													]
												},
												"name": "checked_mul_t_uint16",
												"nativeSrc": "7601:232:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7631:1:1",
														"nodeType": "YulTypedName",
														"src": "7631:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7634:1:1",
														"nodeType": "YulTypedName",
														"src": "7634:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7640:7:1",
														"nodeType": "YulTypedName",
														"src": "7640:7:1",
														"type": ""
													}
												],
												"src": "7601:232:1"
											},
											{
												"body": {
													"nativeSrc": "8012:162:1",
													"nodeType": "YulBlock",
													"src": "8012:162:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8029:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8029:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8040:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8022:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8022:6:1"
																},
																"nativeSrc": "8022:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8022:21:1"
															},
															"nativeSrc": "8022:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8022:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8063:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8063:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8074:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8074:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8059:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8059:3:1"
																		},
																		"nativeSrc": "8059:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8059:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8079:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8079:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8052:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8052:6:1"
																},
																"nativeSrc": "8052:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8052:30:1"
															},
															"nativeSrc": "8052:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8052:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8102:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8102:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8113:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8113:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8098:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8098:3:1"
																		},
																		"nativeSrc": "8098:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8098:18:1"
																	},
																	{
																		"hexValue": "496e76616c69642064617461",
																		"kind": "string",
																		"nativeSrc": "8118:14:1",
																		"nodeType": "YulLiteral",
																		"src": "8118:14:1",
																		"type": "",
																		"value": "Invalid data"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8091:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8091:6:1"
																},
																"nativeSrc": "8091:42:1",
																"nodeType": "YulFunctionCall",
																"src": "8091:42:1"
															},
															"nativeSrc": "8091:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "8091:42:1"
														},
														{
															"nativeSrc": "8142:26:1",
															"nodeType": "YulAssignment",
															"src": "8142:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8154:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8154:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8165:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8165:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8150:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8150:3:1"
																},
																"nativeSrc": "8150:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8150:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8142:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8142:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_572f6114a447449bdc659a7f37166aa023d9be832c6677aa410d20615c0f2646__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7838:336:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7989:9:1",
														"nodeType": "YulTypedName",
														"src": "7989:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8003:4:1",
														"nodeType": "YulTypedName",
														"src": "8003:4:1",
														"type": ""
													}
												],
												"src": "7838:336:1"
											},
											{
												"body": {
													"nativeSrc": "8226:160:1",
													"nodeType": "YulBlock",
													"src": "8226:160:1",
													"statements": [
														{
															"nativeSrc": "8236:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8236:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8255:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8255:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8270:3:1",
																						"nodeType": "YulLiteral",
																						"src": "8270:3:1",
																						"type": "",
																						"value": "232"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8275:1:1",
																						"nodeType": "YulLiteral",
																						"src": "8275:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8266:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8266:3:1"
																				},
																				"nativeSrc": "8266:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8266:11:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8279:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8279:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8262:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8262:3:1"
																		},
																		"nativeSrc": "8262:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8262:19:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8251:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8251:3:1"
																},
																"nativeSrc": "8251:31:1",
																"nodeType": "YulFunctionCall",
																"src": "8251:31:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "8240:7:1",
																	"nodeType": "YulTypedName",
																	"src": "8240:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8327:22:1",
																"nodeType": "YulBlock",
																"src": "8327:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8329:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8329:16:1"
																			},
																			"nativeSrc": "8329:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8329:18:1"
																		},
																		"nativeSrc": "8329:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8329:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "8297:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "8297:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8314:3:1",
																						"nodeType": "YulLiteral",
																						"src": "8314:3:1",
																						"type": "",
																						"value": "232"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8319:1:1",
																						"nodeType": "YulLiteral",
																						"src": "8319:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8310:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8310:3:1"
																				},
																				"nativeSrc": "8310:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8310:11:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8323:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8306:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8306:3:1"
																		},
																		"nativeSrc": "8306:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8306:19:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8294:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8294:2:1"
																},
																"nativeSrc": "8294:32:1",
																"nodeType": "YulFunctionCall",
																"src": "8294:32:1"
															},
															"nativeSrc": "8291:58:1",
															"nodeType": "YulIf",
															"src": "8291:58:1"
														},
														{
															"nativeSrc": "8358:22:1",
															"nodeType": "YulAssignment",
															"src": "8358:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "8369:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "8369:7:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8378:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8378:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8365:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8365:3:1"
																},
																"nativeSrc": "8365:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8365:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8358:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8358:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint232",
												"nativeSrc": "8179:207:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8208:5:1",
														"nodeType": "YulTypedName",
														"src": "8208:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8218:3:1",
														"nodeType": "YulTypedName",
														"src": "8218:3:1",
														"type": ""
													}
												],
												"src": "8179:207:1"
											},
											{
												"body": {
													"nativeSrc": "8610:298:1",
													"nodeType": "YulBlock",
													"src": "8610:298:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8627:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8627:3:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8632:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8632:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8620:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8620:6:1"
																},
																"nativeSrc": "8620:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8620:19:1"
															},
															"nativeSrc": "8620:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "8620:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "8659:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8659:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8664:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8664:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8655:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8655:3:1"
																		},
																		"nativeSrc": "8655:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8655:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8677:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8677:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nativeSrc": "8681:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8681:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8673:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8673:3:1"
																				},
																				"nativeSrc": "8673:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8673:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8694:26:1",
																						"nodeType": "YulLiteral",
																						"src": "8694:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8690:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8690:3:1"
																				},
																				"nativeSrc": "8690:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8690:31:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8669:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8669:3:1"
																		},
																		"nativeSrc": "8669:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8669:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8648:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8648:6:1"
																},
																"nativeSrc": "8648:75:1",
																"nodeType": "YulFunctionCall",
																"src": "8648:75:1"
															},
															"nativeSrc": "8648:75:1",
															"nodeType": "YulExpressionStatement",
															"src": "8648:75:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "8743:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8743:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8748:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8748:2:1",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8739:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8739:3:1"
																		},
																		"nativeSrc": "8739:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8739:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8761:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8761:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nativeSrc": "8765:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8765:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8757:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8757:3:1"
																				},
																				"nativeSrc": "8757:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8757:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8778:26:1",
																						"nodeType": "YulLiteral",
																						"src": "8778:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8774:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8774:3:1"
																				},
																				"nativeSrc": "8774:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8774:31:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8753:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:1"
																		},
																		"nativeSrc": "8753:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8753:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8732:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8732:6:1"
																},
																"nativeSrc": "8732:75:1",
																"nodeType": "YulFunctionCall",
																"src": "8732:75:1"
															},
															"nativeSrc": "8732:75:1",
															"nodeType": "YulExpressionStatement",
															"src": "8732:75:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "8827:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8827:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8832:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8832:2:1",
																				"type": "",
																				"value": "72"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8823:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8823:3:1"
																		},
																		"nativeSrc": "8823:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8823:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8845:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8845:2:1",
																						"type": "",
																						"value": "24"
																					},
																					{
																						"name": "value3",
																						"nativeSrc": "8849:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8849:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8841:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8841:3:1"
																				},
																				"nativeSrc": "8841:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8841:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8862:8:1",
																						"nodeType": "YulLiteral",
																						"src": "8862:8:1",
																						"type": "",
																						"value": "16777215"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8858:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8858:3:1"
																				},
																				"nativeSrc": "8858:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8858:13:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8837:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8837:3:1"
																		},
																		"nativeSrc": "8837:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8837:35:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8816:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8816:6:1"
																},
																"nativeSrc": "8816:57:1",
																"nodeType": "YulFunctionCall",
																"src": "8816:57:1"
															},
															"nativeSrc": "8816:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "8816:57:1"
														},
														{
															"nativeSrc": "8882:20:1",
															"nodeType": "YulAssignment",
															"src": "8882:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8893:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8893:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8898:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8898:3:1",
																		"type": "",
																		"value": "101"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8889:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8889:3:1"
																},
																"nativeSrc": "8889:13:1",
																"nodeType": "YulFunctionCall",
																"src": "8889:13:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8882:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8882:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_payable_t_address_t_uint232__to_t_uint256_t_address_payable_t_address_t_uint232__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8391:517:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8562:3:1",
														"nodeType": "YulTypedName",
														"src": "8562:3:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8567:6:1",
														"nodeType": "YulTypedName",
														"src": "8567:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8575:6:1",
														"nodeType": "YulTypedName",
														"src": "8575:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8583:6:1",
														"nodeType": "YulTypedName",
														"src": "8583:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8591:6:1",
														"nodeType": "YulTypedName",
														"src": "8591:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8602:3:1",
														"nodeType": "YulTypedName",
														"src": "8602:3:1",
														"type": ""
													}
												],
												"src": "8391:517:1"
											},
											{
												"body": {
													"nativeSrc": "9087:305:1",
													"nodeType": "YulBlock",
													"src": "9087:305:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9104:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9104:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9115:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9115:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9097:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9097:6:1"
																},
																"nativeSrc": "9097:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9097:21:1"
															},
															"nativeSrc": "9097:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9097:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9138:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9138:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9149:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9149:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9134:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9134:3:1"
																		},
																		"nativeSrc": "9134:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9134:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9154:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9154:2:1",
																		"type": "",
																		"value": "75"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9127:6:1"
																},
																"nativeSrc": "9127:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9127:30:1"
															},
															"nativeSrc": "9127:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9127:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9177:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9177:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9188:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9188:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9173:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9173:3:1"
																		},
																		"nativeSrc": "9173:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9173:18:1"
																	},
																	{
																		"hexValue": "4d696e696d756d20696e766573746d656e7420616d6f756e7420697320726571",
																		"kind": "string",
																		"nativeSrc": "9193:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9193:34:1",
																		"type": "",
																		"value": "Minimum investment amount is req"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9166:6:1"
																},
																"nativeSrc": "9166:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9166:62:1"
															},
															"nativeSrc": "9166:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9166:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9248:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9248:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9259:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9259:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9244:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9244:3:1"
																		},
																		"nativeSrc": "9244:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9244:18:1"
																	},
																	{
																		"hexValue": "75697265642c6974277320736d616c6c6572207468616e20746865206d696e69",
																		"kind": "string",
																		"nativeSrc": "9264:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9264:34:1",
																		"type": "",
																		"value": "uired,it's smaller than the mini"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9237:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9237:6:1"
																},
																"nativeSrc": "9237:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9237:62:1"
															},
															"nativeSrc": "9237:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9237:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9319:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9319:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9330:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9330:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9315:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9315:3:1"
																		},
																		"nativeSrc": "9315:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9315:19:1"
																	},
																	{
																		"hexValue": "6d756d206465706f736974",
																		"kind": "string",
																		"nativeSrc": "9336:13:1",
																		"nodeType": "YulLiteral",
																		"src": "9336:13:1",
																		"type": "",
																		"value": "mum deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9308:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9308:6:1"
																},
																"nativeSrc": "9308:42:1",
																"nodeType": "YulFunctionCall",
																"src": "9308:42:1"
															},
															"nativeSrc": "9308:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "9308:42:1"
														},
														{
															"nativeSrc": "9359:27:1",
															"nodeType": "YulAssignment",
															"src": "9359:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9371:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9371:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9382:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9382:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9367:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9367:3:1"
																},
																"nativeSrc": "9367:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9367:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9359:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9359:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6479ade4a0aff1580acde9c2dc167ca6615d7731639b04ad204344bff2291130__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8913:479:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9064:9:1",
														"nodeType": "YulTypedName",
														"src": "9064:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9078:4:1",
														"nodeType": "YulTypedName",
														"src": "9078:4:1",
														"type": ""
													}
												],
												"src": "8913:479:1"
											},
											{
												"body": {
													"nativeSrc": "9571:178:1",
													"nodeType": "YulBlock",
													"src": "9571:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9588:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9588:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9599:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9599:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9581:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9581:6:1"
																},
																"nativeSrc": "9581:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9581:21:1"
															},
															"nativeSrc": "9581:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9581:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9622:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9622:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9633:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9618:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9618:3:1"
																		},
																		"nativeSrc": "9618:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9638:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9638:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9611:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9611:6:1"
																},
																"nativeSrc": "9611:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9611:30:1"
															},
															"nativeSrc": "9611:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9611:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9661:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9661:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9672:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9672:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9657:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9657:3:1"
																		},
																		"nativeSrc": "9657:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9657:18:1"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682066756e6420746f20776974686472617721",
																		"kind": "string",
																		"nativeSrc": "9677:30:1",
																		"nodeType": "YulLiteral",
																		"src": "9677:30:1",
																		"type": "",
																		"value": "Not enough fund to withdraw!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9650:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9650:6:1"
																},
																"nativeSrc": "9650:58:1",
																"nodeType": "YulFunctionCall",
																"src": "9650:58:1"
															},
															"nativeSrc": "9650:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "9650:58:1"
														},
														{
															"nativeSrc": "9717:26:1",
															"nodeType": "YulAssignment",
															"src": "9717:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9729:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9729:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9740:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9740:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9725:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9725:3:1"
																},
																"nativeSrc": "9725:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9725:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9717:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9717:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fd9de04a809dc075d2c458d0a7216588503c49615166cd6954a88b6dfcfc3828__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9397:352:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9548:9:1",
														"nodeType": "YulTypedName",
														"src": "9548:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9562:4:1",
														"nodeType": "YulTypedName",
														"src": "9562:4:1",
														"type": ""
													}
												],
												"src": "9397:352:1"
											},
											{
												"body": {
													"nativeSrc": "9928:181:1",
													"nodeType": "YulBlock",
													"src": "9928:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9945:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9945:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9956:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9956:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9938:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9938:6:1"
																},
																"nativeSrc": "9938:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9938:21:1"
															},
															"nativeSrc": "9938:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9938:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9979:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9979:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9990:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9990:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9975:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9975:3:1"
																		},
																		"nativeSrc": "9975:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9975:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9995:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9995:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9968:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9968:6:1"
																},
																"nativeSrc": "9968:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9968:30:1"
															},
															"nativeSrc": "9968:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9968:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10018:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10018:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10029:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10029:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10014:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10014:3:1"
																		},
																		"nativeSrc": "10014:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10014:18:1"
																	},
																	{
																		"hexValue": "43616e6e6f74207769746864726177206166746572206f6e65207765656b21",
																		"kind": "string",
																		"nativeSrc": "10034:33:1",
																		"nodeType": "YulLiteral",
																		"src": "10034:33:1",
																		"type": "",
																		"value": "Cannot withdraw after one week!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10007:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10007:6:1"
																},
																"nativeSrc": "10007:61:1",
																"nodeType": "YulFunctionCall",
																"src": "10007:61:1"
															},
															"nativeSrc": "10007:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "10007:61:1"
														},
														{
															"nativeSrc": "10077:26:1",
															"nodeType": "YulAssignment",
															"src": "10077:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10089:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10089:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10100:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10100:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10085:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10085:3:1"
																},
																"nativeSrc": "10085:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10085:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10077:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10077:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_82d6e6a7babd874cf9cbb174b435a0b95c477b5446fd9032ee38541b30847d96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9754:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9905:9:1",
														"nodeType": "YulTypedName",
														"src": "9905:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9919:4:1",
														"nodeType": "YulTypedName",
														"src": "9919:4:1",
														"type": ""
													}
												],
												"src": "9754:355:1"
											},
											{
												"body": {
													"nativeSrc": "10288:180:1",
													"nodeType": "YulBlock",
													"src": "10288:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10305:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10305:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10316:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10316:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10298:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10298:6:1"
																},
																"nativeSrc": "10298:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10298:21:1"
															},
															"nativeSrc": "10298:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10298:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10339:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10339:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10350:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10350:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10335:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10335:3:1"
																		},
																		"nativeSrc": "10335:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10335:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10355:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10355:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10328:6:1"
																},
																"nativeSrc": "10328:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10328:30:1"
															},
															"nativeSrc": "10328:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10328:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10378:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10378:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10389:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10389:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10374:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10374:3:1"
																		},
																		"nativeSrc": "10374:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10374:18:1"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6420746f20776974686472617721",
																		"kind": "string",
																		"nativeSrc": "10394:32:1",
																		"nodeType": "YulLiteral",
																		"src": "10394:32:1",
																		"type": "",
																		"value": "Insufficient fund to withdraw!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10367:6:1"
																},
																"nativeSrc": "10367:60:1",
																"nodeType": "YulFunctionCall",
																"src": "10367:60:1"
															},
															"nativeSrc": "10367:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "10367:60:1"
														},
														{
															"nativeSrc": "10436:26:1",
															"nodeType": "YulAssignment",
															"src": "10436:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10448:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10459:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10459:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10444:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10444:3:1"
																},
																"nativeSrc": "10444:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10444:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10436:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10436:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b73d4bc61b22a5c83559e6d4843917f717089f0e08f7f6a74ea323a9597ff807__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10114:354:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10265:9:1",
														"nodeType": "YulTypedName",
														"src": "10265:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10279:4:1",
														"nodeType": "YulTypedName",
														"src": "10279:4:1",
														"type": ""
													}
												],
												"src": "10114:354:1"
											},
											{
												"body": {
													"nativeSrc": "10647:175:1",
													"nodeType": "YulBlock",
													"src": "10647:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10664:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10664:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10675:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10675:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10657:6:1"
																},
																"nativeSrc": "10657:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10657:21:1"
															},
															"nativeSrc": "10657:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10657:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10698:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10698:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10709:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10709:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10694:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10694:3:1"
																		},
																		"nativeSrc": "10694:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10694:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10714:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10714:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10687:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10687:6:1"
																},
																"nativeSrc": "10687:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10687:30:1"
															},
															"nativeSrc": "10687:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10687:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10737:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10737:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10748:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10748:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10733:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10733:3:1"
																		},
																		"nativeSrc": "10733:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10733:18:1"
																	},
																	{
																		"hexValue": "596f75206d7573742062652074686520646576656c6f706572",
																		"kind": "string",
																		"nativeSrc": "10753:27:1",
																		"nodeType": "YulLiteral",
																		"src": "10753:27:1",
																		"type": "",
																		"value": "You must be the developer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10726:6:1"
																},
																"nativeSrc": "10726:55:1",
																"nodeType": "YulFunctionCall",
																"src": "10726:55:1"
															},
															"nativeSrc": "10726:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "10726:55:1"
														},
														{
															"nativeSrc": "10790:26:1",
															"nodeType": "YulAssignment",
															"src": "10790:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10802:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10813:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10813:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10798:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10798:3:1"
																},
																"nativeSrc": "10798:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10798:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10790:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10790:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1258a82e70db9c0442027dc365b3d26ee4505a23a70abe09c692d11010a23a6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10473:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10624:9:1",
														"nodeType": "YulTypedName",
														"src": "10624:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10638:4:1",
														"nodeType": "YulTypedName",
														"src": "10638:4:1",
														"type": ""
													}
												],
												"src": "10473:349:1"
											},
											{
												"body": {
													"nativeSrc": "10859:95:1",
													"nodeType": "YulBlock",
													"src": "10859:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10876:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10876:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10883:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10883:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10888:10:1",
																				"nodeType": "YulLiteral",
																				"src": "10888:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10879:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10879:3:1"
																		},
																		"nativeSrc": "10879:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10879:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10869:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10869:6:1"
																},
																"nativeSrc": "10869:31:1",
																"nodeType": "YulFunctionCall",
																"src": "10869:31:1"
															},
															"nativeSrc": "10869:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "10869:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10916:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10916:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10919:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10919:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10909:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10909:6:1"
																},
																"nativeSrc": "10909:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10909:15:1"
															},
															"nativeSrc": "10909:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10909:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10940:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10940:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10943:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10943:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10933:6:1"
																},
																"nativeSrc": "10933:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10933:15:1"
															},
															"nativeSrc": "10933:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10933:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nativeSrc": "10827:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10827:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _1 := mload(srcPtr)\n            mstore(pos, and(mload(_1), 0xffffffff))\n            mstore(add(pos, 32), and(mload(add(_1, 32)), 0xff))\n            mstore(add(pos, 64), mload(add(_1, 64)))\n            mstore(add(pos, 0x60), and(mload(add(_1, 0x60)), sub(shl(160, 1), 1)))\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_uint8t_uint232t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(0, 0) }\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        if iszero(eq(value_2, and(value_2, sub(shl(232, 1), 1)))) { revert(0, 0) }\n        value2 := value_2\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_OpenedLotInfo_$13_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_OpenedLotInfo_$13_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _1 := mload(srcPtr)\n            mstore(pos, and(mload(_1), 0xffffffff))\n            mstore(add(pos, 32), and(mload(add(_1, 32)), 0xff))\n            pos := add(pos, 64)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_d19f3ae2e405bd6a9cc212ba46bfe12e20adf32eab8aa09d5e4d1904a928c8a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"You must be a investor\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_fa0b0d924bce727ab99514b9f4c92115ad6db118fca10e53f88c8c4c48fc7dfc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Not enough profit to withdraw!\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_af0d970ba88c4f8a655dbf7f723bd7f850579d1890238dc88401ed4220f9f6af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Investment amount beteween 1 and\")\n        mstore(add(headStart, 96), \" 1000\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dbcb3e84b1ed43636cc9086833c8a3c1965d67405383b25f200d36ccaad3ebb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"You don't have undraw lottery ti\")\n        mstore(add(headStart, 96), \"ckets\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_650dc1fb357829359fbf0a956d09cf3e8980961a8a919494bff661cc2fdd3f85__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"It's not time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_stringliteral_54b29162b0568d907215ea48697c2b664b38e09efead77ab1fb9655c40990fdc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Buy at least one egg\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a19b8179a644aee2fcf1e2d1d7b79f205cf86aaa919d9253e13348420dfd1d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Multiples between 1 and 100\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_796ec44d103b15b3fdf61562e61512ddb58363cfe331cf2a64d682079171b8d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Number of eggs between 1 and 100\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint16(x, y) -> product\n    {\n        let product_raw := mul(and(x, 0xffff), and(y, 0xffff))\n        product := and(product_raw, 0xffff)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_572f6114a447449bdc659a7f37166aa023d9be832c6677aa410d20615c0f2646__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Invalid data\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint232(value) -> ret\n    {\n        let value_1 := and(value, sub(shl(232, 1), 1))\n        if eq(value_1, sub(shl(232, 1), 1)) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address_payable_t_address_t_uint232__to_t_uint256_t_address_payable_t_address_t_uint232__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 52), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 72), and(shl(24, value3), not(16777215)))\n        end := add(pos, 101)\n    }\n    function abi_encode_tuple_t_stringliteral_6479ade4a0aff1580acde9c2dc167ca6615d7731639b04ad204344bff2291130__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"Minimum investment amount is req\")\n        mstore(add(headStart, 96), \"uired,it's smaller than the mini\")\n        mstore(add(headStart, 128), \"mum deposit\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_fd9de04a809dc075d2c458d0a7216588503c49615166cd6954a88b6dfcfc3828__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Not enough fund to withdraw!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_82d6e6a7babd874cf9cbb174b435a0b95c477b5446fd9032ee38541b30847d96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Cannot withdraw after one week!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b73d4bc61b22a5c83559e6d4843917f717089f0e08f7f6a74ea323a9597ff807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Insufficient fund to withdraw!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c1258a82e70db9c0442027dc365b3d26ee4505a23a70abe09c692d11010a23a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You must be the developer\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA659F4DC GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xCF438305 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xCF438305 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xD9498A83 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xDD5F6F4D EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xF4E79B5B EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA659F4DC EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xB1C617FF EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xC9EA0299 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xCA6AAE29 EQ PUSH2 0x1F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B5BACA1 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x2B5BACA1 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x49821332 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x7DA384FD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x89A4C1A0 EQ PUSH2 0x177 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12DB1357 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x22629256 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x289F9019 EQ PUSH2 0x112 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x295 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x4C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x589 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0x916 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xA75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x195 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A69 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x1486 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x1680 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 GT ISZERO DUP1 PUSH2 0x2C3 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x30D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9036BAB9BA10313290309034B73B32B9BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH0 SWAP2 DUP3 SWAP2 PUSH2 0x339 SWAP2 SELFBALANCE SWAP2 PUSH2 0x32A SWAP1 DUP8 PUSH2 0x1B4F JUMP JUMPDEST PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH2 0x171A JUMP JUMPDEST SWAP1 POP PUSH10 0x21E19E0C9BAB2400000 DUP2 LT PUSH2 0x37B JUMPI PUSH2 0x357 PUSH1 0xC8 DUP3 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x361 SWAP1 DUP5 PUSH2 0x1B4F JUMP JUMPDEST SWAP3 POP PUSH2 0x36E PUSH1 0xC8 DUP3 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x378 SWAP1 DUP4 PUSH2 0x1B4F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3AB JUMPI PUSH2 0x3AB PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD LT PUSH2 0x478 JUMPI PUSH0 PUSH2 0x423 PUSH2 0x41B PUSH1 0x3 PUSH0 PUSH1 0x2 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x3F1 JUMPI PUSH2 0x3F1 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP8 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x438 JUMPI PUSH2 0x438 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x475 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x382 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x4BF JUMPI PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH7 0x2386F26FC10000 GT ISZERO PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682070726F66697420746F207769746864726177210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x556 SWAP1 DUP5 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x5AE SWAP1 PUSH3 0x13C680 PUSH2 0x1B4F JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x5B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD SELFBALANCE LT PUSH2 0x6B6 JUMPI PUSH0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x6B0 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5ED JUMPI PUSH2 0x5ED PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD LT PUSH2 0x6A8 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x629 JUMPI PUSH2 0x629 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH2 0x8FC SWAP3 PUSH1 0x3 SWAP3 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x65B JUMPI PUSH2 0x65B PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD DUP3 KECCAK256 SLOAD SWAP1 MLOAD DUP2 ISZERO SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5C4 JUMP JUMPDEST POP PUSH2 0x7CF JUMP JUMPDEST SELFBALANCE PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x7CD JUMPI PUSH0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x7CB JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6F1 JUMPI PUSH2 0x6F1 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD LT PUSH2 0x7C3 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x72D JUMPI PUSH2 0x72D PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x4 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 PUSH2 0x8FC SWAP4 DUP8 SWAP3 PUSH1 0x3 SWAP3 SWAP2 DUP9 SWAP1 DUP2 LT PUSH2 0x764 JUMPI PUSH2 0x764 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6C8 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x60 SWAP1 DUP3 SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x7F0 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x80A JUMPI PUSH2 0x80A PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x85A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 MSTORE PUSH0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x828 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x90D JUMPI PUSH1 0xB DUP2 PUSH2 0x875 PUSH1 0x1 DUP7 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x88F JUMPI PUSH2 0x88F PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP5 MSTORE PUSH1 0xFF PUSH5 0x100000000 SWAP1 SWAP2 DIV AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x8FA JUMPI PUSH2 0x8FA PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x85F JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO DUP1 ISZERO PUSH2 0x937 JUMPI POP PUSH9 0x3635C9ADC5DEA00000 CALLVALUE GT ISZERO JUMPDEST PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E766573746D656E7420616D6F756E7420626574657765656E203120616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x203130303 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x304 JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x9B3 SELFBALANCE PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST GT ISZERO PUSH2 0x9BD JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x9F1 SWAP1 DUP5 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA73 JUMPI CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520756E64726177206C6F7474657279207469 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x636B657473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xAFA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB0A JUMPI PUSH2 0xB0A PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND NUMBER GT PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x49742773206E6F742074696D65 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xB9D JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB9D SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xF17 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xBD6 JUMPI PUSH2 0xBD6 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND BLOCKHASH ISZERO PUSH2 0xF0F JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD CALLER DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xC4E JUMPI PUSH2 0xC4E PUSH2 0x1B81 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND BLOCKHASH PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC95 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 SHR SWAP1 POP PUSH0 PUSH2 0xCBA DUP3 PUSH2 0x1795 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE6C JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH7 0x470DE4DF820000 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xCEC JUMPI PUSH2 0xCEC PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xD0B DUP5 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD2B DUP2 DUP7 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP7 AND DUP2 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 DUP2 KECCAK256 DUP1 SLOAD SWAP5 SWAP10 POP SWAP1 SWAP4 SWAP2 SWAP3 DUP4 ADD SWAP2 DUP9 SWAP1 DUP2 LT PUSH2 0xD69 JUMPI PUSH2 0xD69 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND DUP6 MSTORE PUSH5 0xFFFFFFFFFF TIMESTAMP AND DUP6 DUP4 ADD MSTORE CALLER PUSH1 0x40 SWAP6 DUP7 ADD MSTORE PUSH1 0xB DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 SWAP4 MSTORE DUP5 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 DUP2 ADD DUP1 SLOAD SWAP3 DUP8 ADD MLOAD SWAP1 SWAP5 AND PUSH5 0x100000000 MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP3 AND PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SWAP2 SSTORE SWAP1 DUP3 ADD MLOAD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DBA DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DBB SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 DUP4 ADD SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0xEA4 JUMPI PUSH2 0xEA4 PUSH2 0x1B81 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 SWAP5 MSTORE CALLER DUP4 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 ADD DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD SWAP2 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP4 AND PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBA0 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xF2F SWAP2 PUSH2 0x196C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFED JUMPI PUSH0 PUSH2 0xF61 PUSH2 0xF5A PUSH2 0xF53 SELFBALANCE PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x46 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF6F JUMPI DUP1 SWAP2 POP JUMPDEST PUSH0 PUSH2 0xF7E PUSH2 0xF5A DUP5 PUSH1 0x5 PUSH2 0x173E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFA9 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP CALLER SWAP1 POP PUSH2 0x8FC PUSH2 0xFBE DUP4 PUSH1 0x2 PUSH2 0x1BA8 JUMP JUMPDEST PUSH2 0xFC8 SWAP1 DUP7 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH7 0x470DE4DF820000 CALLVALUE LT ISZERO PUSH2 0x103E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x427579206174206C65617374206F6E6520656767 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x1056 JUMPI POP PUSH1 0x64 DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x10A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C7469706C6573206265747765656E203120616E64203130300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0xFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x10BD JUMPI POP PUSH2 0x3E8 DUP5 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x1109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F662065676773206265747765656E203120616E6420313030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH0 PUSH2 0x111B CALLVALUE PUSH7 0x470DE4DF820000 PUSH2 0x1772 JUMP JUMPDEST SWAP1 POP PUSH2 0x112A PUSH1 0xFF DUP6 AND DUP7 PUSH2 0x1BD3 JUMP JUMPDEST PUSH2 0xFFFF AND DUP2 EQ PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x496E76616C69642064617461 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH0 JUMPDEST DUP6 PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x1262 JUMPI PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP COINBASE CALLER DUP10 DUP1 PUSH2 0x1193 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST SWAP11 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x60 SWAP3 DUP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 SHL AND PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x18 SHL PUSH3 0xFFFFFF NOT AND PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x65 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE PUSH1 0xFF DUP1 DUP12 AND DUP5 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NUMBER DUP2 AND SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP2 DUP6 SWAP1 KECCAK256 DUP8 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP4 DUP7 ADD MLOAD SWAP6 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP4 AND PUSH2 0x100 MUL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 DUP3 ADD SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 POP PUSH2 0x116D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1299 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH0 PUSH2 0x12A8 PUSH2 0xF5A CALLVALUE PUSH1 0x3 PUSH2 0x173E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12B9 PUSH2 0xF5A CALLVALUE PUSH1 0x4 PUSH2 0x173E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12CC SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12E4 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 PUSH2 0x1323 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO JUMPDEST DUP1 PUSH2 0x1340 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1353 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 SLOAD AND SWAP1 SUB PUSH2 0x13A3 JUMPI DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1398 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x13F8 SWAP1 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13DA SWAP1 DUP5 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST TIMESTAMP PUSH1 0x8 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x147D JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP5 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 DUP4 ADD MSTORE DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1437 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x1518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D20696E766573746D656E7420616D6F756E7420697320726571 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75697265642C6974277320736D616C6C6572207468616E20746865206D696E69 PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x1B5D5B4819195C1BDCDA5D PUSH1 0xAA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E6420746F2077697468647261772100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1595 SWAP1 PUSH3 0x93A80 PUSH2 0x1B4F JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177206166746572206F6E65207765656B2100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST DUP1 PUSH2 0x15FC SELFBALANCE PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST LT ISZERO PUSH2 0x164A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E6420746F207769746864726177210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1668 SWAP1 DUP5 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D7573742062652074686520646576656C6F70657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x304 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH0 SWAP2 DUP3 SWAP1 SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0x172B JUMPI PUSH2 0x172B PUSH2 0x1C22 JUMP JUMPDEST PUSH2 0x1735 DUP3 DUP5 PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x174D JUMPI POP PUSH0 PUSH2 0x1738 JUMP JUMPDEST PUSH0 PUSH2 0x1758 DUP4 DUP6 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1765 DUP6 DUP4 PUSH2 0x1B62 JUMP JUMPDEST EQ PUSH2 0x1735 JUMPI PUSH2 0x1735 PUSH2 0x1C22 JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x1782 JUMPI PUSH2 0x1782 PUSH2 0x1C22 JUMP JUMPDEST PUSH0 PUSH2 0x178D DUP4 DUP6 PUSH2 0x1B62 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0x4000000 DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x17AF JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x1000000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x17C8 JUMPI POP PUSH1 0xA SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x400000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x17E0 JUMPI POP PUSH1 0x9 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x100000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x17F8 JUMPI POP PUSH1 0x8 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x40000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x1810 JUMPI POP PUSH1 0x7 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x1828 JUMPI POP PUSH1 0x6 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x183F JUMPI POP PUSH1 0x5 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1000 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x1856 JUMPI POP PUSH1 0x4 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x400 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x186D JUMPI POP PUSH1 0x3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x1884 JUMPI POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 SUB PUSH2 0x18A0 JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0xA SUB PUSH2 0x18B0 JUMPI POP PUSH1 0x5 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x9 SUB PUSH2 0x18C0 JUMPI POP PUSH1 0x14 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x8 SUB PUSH2 0x18D0 JUMPI POP PUSH1 0x50 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x7 SUB PUSH2 0x18E1 JUMPI POP PUSH2 0x140 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x6 SUB PUSH2 0x18F2 JUMPI POP PUSH2 0x4B0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x5 SUB PUSH2 0x1903 JUMPI POP PUSH2 0x12C0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x4 SUB PUSH2 0x1914 JUMPI POP PUSH2 0x4E20 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x3 SUB PUSH2 0x1926 JUMPI POP PUSH3 0x186A0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x2 SUB PUSH2 0x1938 JUMPI POP PUSH3 0x7A120 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x1 SUB PUSH2 0x194A JUMPI POP PUSH3 0x1E8480 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19A7 JUMPI DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x198B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19A7 JUMPI PUSH0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0x19AC JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A48 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP5 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0xFF AND DUP2 DUP7 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x80 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x19F5 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x188C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A7C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1A8D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1AA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1ABD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x1ACB PUSH1 0x60 DUP7 ADD PUSH2 0x1A53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1735 DUP3 PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A48 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP5 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0xFF AND DUP2 DUP6 ADD MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1B08 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1738 PUSH2 0x1B3B JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1B7C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1738 PUSH2 0x1B3B JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1738 JUMPI PUSH2 0x1738 PUSH2 0x1B3B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFFFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0x1BF0 JUMPI PUSH2 0x1BF0 PUSH2 0x1B3B JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB DUP3 AND PUSH1 0x2 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 ADD PUSH2 0x1C19 JUMPI PUSH2 0x1C19 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x5005B2F9F701AED3DD9180ED4435F53A675B83C7E4C44A5B9CB0 0xD4 0xAA JUMP DUP5 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "70:18416:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13714:1583;;;;;;;;;;;;;:::i;:::-;;15332:439;;;;;;;;;;;;;:::i;17057:1427::-;;;;;;;;;;;;;:::i;16069:573::-;;;;;;;;;;-1:-1:-1;16069:573:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11279:993;;;:::i;7857:3393::-;;;;;;;;;;;;;:::i;1699:25::-;;;;;;;;;;-1:-1:-1;1699:25:0;;;;-1:-1:-1;;;;;1699:25:0;;;;;;-1:-1:-1;;;;;1284:32:1;;;1266:51;;1254:2;1239:18;1699:25:0;1120:203:1;2079:36:0;;;;;;;;;;;;;;;;;;;1474:25:1;;;1462:2;1447:18;2079:36:0;1328:177:1;2239:33:0;;;;;;;;;;;;;;;;4155:2389;;;;;;:::i;:::-;;:::i;2170:30::-;;;;;;;;;;;;;;;;16835:128;;;;;;;;;;-1:-1:-1;16835:128:0;;;;;:::i;:::-;-1:-1:-1;;;;;16926:22:0;16900:7;16926:22;;;:16;:22;;;;;:30;;16835:128;16674:129;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;12301:1384::-;;;;;;;;;;-1:-1:-1;12301:1384:0;;;;;:::i;:::-;;:::i;15806:231::-;;;;;;;;;;;;;:::i;13714:1583::-;13900:10;13883:28;;;;:16;:28;;;;;:36;1547:7;-1:-1:-1;13883:65:0;;:109;;-1:-1:-1;13982:10:0;;-1:-1:-1;;;;;13982:10:0;13968;:24;13883:109;13862:178;;;;-1:-1:-1;;;13862:178:0;;3567:2:1;13862:178:0;;;3549:21:1;3606:2;3586:18;;;3579:30;-1:-1:-1;;;3625:18:1;;;3618:52;3687:18;;13862:178:0;;;;;;;;;14080:15;;14331:9;;14309:19;;14051:26;;;;14230:121;;14255:21;;14291:37;;14080:15;14291:37;:::i;:::-;:49;;;;:::i;:::-;14230:11;:121::i;:::-;14210:141;;1438:11;14366:9;:36;14362:151;;14440:15;14452:3;14440:9;:15;:::i;:::-;14418:37;;;;:::i;:::-;;-1:-1:-1;14487:15:0;14499:3;14487:9;:15;:::i;:::-;14469:33;;;;:::i;:::-;;;14362:151;14540:1;14522:15;:19;;;14552:636;14576:9;:16;14572:20;;14552:636;;;1547:7;14634:16;:30;14651:9;14661:1;14651:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14651:12:0;14634:30;;;;;;;;;;;;:38;:83;14613:565;;14830:26;14859:235;14892:141;14929:16;:30;14946:9;14956:1;14946:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14946:12:0;14929:30;;;;;;;;;;;;:38;14993:18;14892:11;:141::i;:::-;15055:21;;14859:11;:235::i;:::-;14830:264;;15121:9;15131:1;15121:12;;;;;;;;:::i;:::-;;;;;;;;;;15113:50;;-1:-1:-1;;;;;15121:12:0;;;;15113:50;;;;;15144:18;;15113:50;15121:12;15113:50;15144:18;15121:12;15113:50;;;;;;;;;;;;;;;;;;;;;14732:446;14613:565;14594:3;;14552:636;;;-1:-1:-1;15202:18:0;;15198:93;;15244:10;;;15236:44;;-1:-1:-1;;;;;15244:10:0;;;;15236:44;;;;;15265:14;;15236:44;15244:10;15236:44;15265:14;15244:10;15236:44;;;;;;;;;;;;;;;;;;;;;15198:93;13761:1536;;;13714:1583::o;15332:439::-;15468:10;15458:21;;;;:9;:21;;;;;:36;;;15498:10;-1:-1:-1;15458:50:0;15437:127;;;;-1:-1:-1;;;15437:127:0;;4534:2:1;15437:127:0;;;4516:21:1;4573:2;4553:18;;;4546:30;4612:32;4592:18;;;4585:60;4662:18;;15437:127:0;4332:354:1;15437:127:0;15602:10;15575:14;15592:21;;;:9;:21;;;;;:36;;;;15638:40;;;;15689:19;:29;;15592:36;;;;15689:29;;15592:36;;15689:29;:::i;:::-;;;;-1:-1:-1;;15728:36:0;;15736:10;;15728:36;;;;;15757:6;;15728:36;;;;15757:6;15736:10;15728:36;;;;;;;;;;;;;;;;;;;;;15375:396;15332:439::o;17057:1427::-;17126:10;;-1:-1:-1;;;;;17126:10:0;17112;:24;17104:33;;;;;;17174:14;;:24;;17191:7;17174:24;:::i;:::-;17155:15;:43;;17147:52;;;;;;17239:21;;17214;:46;17210:1224;;17281:9;17276:367;17300:9;:16;17296:20;;17276:367;;;1547:7;17366:16;:30;17383:9;17393:1;17383:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;17383:12:0;17366:30;;;;;;;;;;;;:38;:87;17341:288;;17502:9;17512:1;17502:12;;;;;;;;:::i;:::-;;;;;;;;;;17567:9;:12;;-1:-1:-1;;;;;17502:12:0;;;;17494:116;;17550:16;;17567:9;17577:1;;17567:12;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;17567:12:0;17550:30;;;;;;;;;;;;;;:38;17494:116;;;;;;;;17550:38;;17494:116;17567:12;17494:116;17550:38;17494:116;;;;;;;;;;;;;;;;;;;;;;17341:288;17318:3;;17276:367;;;;17210:1224;;;17745:21;1547:7;17785:44;;17781:643;;17854:9;17849:561;17873:9;:16;17869:20;;17849:561;;;1547:7;17947:16;:30;17964:9;17974:1;17964:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;17964:12:0;17947:30;;;;;;;;;;;;:38;:91;17918:474;;18177:9;18187:1;18177:12;;;;;;;;:::i;:::-;;;;;;;;;;18322:21;;18247:9;:12;;-1:-1:-1;;;;;18177:12:0;;;;18169:200;;18303:15;;18230:16;;18177:12;18257:1;;18247:12;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;18247:12:0;18230:30;;;;;;;;;;;;:38;:88;;;;:::i;:::-;18229:114;;;;:::i;:::-;18169:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17918:474;17891:3;;17849:561;;;;17781:643;17659:775;17210:1224;18465:10;;-1:-1:-1;;;;;18465:10:0;18444:33;16069:573;16264:13;:20;16161;;16216:11;;16299:27;;;16295:85;;;16353:16;16342:27;;16295:85;16390:40;16451:8;16433:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16433:27:0;;-1:-1:-1;;16433:27:0;;;;;;;;;;;;16390:70;;16476:9;16471:128;16495:8;16491:1;:12;16471:128;;;16549:13;16586:1;16563:20;16582:1;16563:16;:20;:::i;:::-;:24;;;;:::i;:::-;16549:39;;;;;;;;:::i;:::-;;;;;;;;;;16524:64;;;;;;;;16549:39;;;;;;;16524:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16524:64:0;;;;;:22;;:19;;16544:1;;16524:22;;;;;;:::i;:::-;;;;;;;;;;:64;16505:3;;16471:128;;;-1:-1:-1;16616:19:0;16069:573;-1:-1:-1;;;;16069:573:0:o;11279:993::-;1547:7;11404:9;:38;;:96;;;;;1648:10;11462:9;:38;;11404:96;11383:180;;;;-1:-1:-1;;;11383:180:0;;5331:2:1;11383:180:0;;;5313:21:1;5370:2;5350:18;;;5343:30;5409:34;5389:18;;;5382:62;-1:-1:-1;;;5460:18:1;;;5453:35;5505:19;;11383:180:0;5129:401:1;11383:180:0;1438:11;11625:133;11654:21;11734:9;;11712:19;;11694:15;;:37;;;;:::i;11625:133::-;:160;;11604:191;;;;;;11864:9;11839:21;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;11942:10:0;11925:28;;;;:16;:28;;;;;:49;;11965:9;;11925:28;:49;;11965:9;;11925:49;:::i;:::-;;;;-1:-1:-1;;12001:10:0;11984:28;;;;:16;:28;;;;;12030:15;11984:43;;;:61;12112:40;;;;;12107:159;;12185:10;12168:28;;;;:16;:28;;;;;:40;;;;:47;;-1:-1:-1;;12168:47:0;12211:4;12168:47;;;;;;12229:26;;;;;;;;;;;;;-1:-1:-1;;;;;;12229:26:0;;;;;;12107:159;11279:993::o;7857:3393::-;7984:10;8014:1;7974:21;;;:9;:21;;;;;:37;7953:125;;;;-1:-1:-1;;;7953:125:0;;5737:2:1;7953:125:0;;;5719:21:1;5776:2;5756:18;;;5749:30;5815:34;5795:18;;;5788:62;-1:-1:-1;;;5866:18:1;;;5859:35;5911:19;;7953:125:0;5535:401:1;7953:125:0;8267:10;8257:21;;;;:9;:21;;;;;8309:37;;:41;;8349:1;;8309:41;:::i;:::-;8257:94;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:127;;;;;;-1:-1:-1;;;;;8257:127:0;8226:12;:158;8205:218;;;;-1:-1:-1;;;8205:218:0;;6143:2:1;8205:218:0;;;6125:21:1;6182:2;6162:18;;;6155:30;-1:-1:-1;;;6201:18:1;;;6194:43;6254:18;;8205:218:0;5941:337:1;8205:218:0;8523:10;8555:1;8513:21;;;:9;:21;;;;;:32;;:39;:43;8509:100;;8587:10;8577:21;;;;:9;:21;;;;;8570:39;;8577:32;;;;;8570:39;:::i;:::-;8653:21;;8685:1690;8719:10;8709:21;;;;:9;:21;;;;;:37;8705:41;;8685:1690;;;8903:10;8893:21;;;;:9;:21;;;;;:33;;8924:1;;8893:33;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;;;;;;-1:-1:-1;;;;;8893:45:0;8883:56;8833:152;8977:8;8833:152;9197:10;9034:17;9187:21;;;:9;:21;;;;;:33;;9218:1;;9187:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:37;9307:10;9297:21;;:9;:21;;;;;;;:33;;9328:1;;9297:33;;;;;;:::i;:::-;;;;;;;;;;;:45;;;;;;;;;;-1:-1:-1;;;;;9297:45:0;-1:-1:-1;;;;;9254:118:0;;9141:257;;;;;;;;6440:19:1;;;6484:2;6475:12;;6468:28;6521:2;6512:12;;6283:247;9141:257:0;;;;;;;;;;;;;9106:314;;;;;;9054:398;;9034:418;;9495:19;9517:27;9533:10;9517:15;:27::i;:::-;9495:49;-1:-1:-1;9597:15:0;;9593:541;;9719:10;9632:20;9709:21;;;:9;:21;;;;;:33;;1287:10;;9709:21;9740:1;;9709:33;;;;;;:::i;:::-;;;;;;;;;:37;:33;;;;;:37;;;;9655:31;9674:11;9655:18;:31::i;:::-;:91;;;;:::i;:::-;:125;;;;:::i;:::-;9632:148;-1:-1:-1;9799:29:0;9632:148;9799:29;;:::i;:::-;9876:197;;;;;;;;;;;;;9951:10;9847:26;9941:21;;;:9;9876:197;9941:21;;;;;;:33;;9799:29;;-1:-1:-1;9847:26:0;;9876:197;;;;;9972:1;;9941:33;;;;;;:::i;:::-;;;;;;;;;:37;:33;;;;;:37;;;;;;;9876:197;;;10007:15;9876:197;;;;;10045:10;9876:197;;;;;10092:13;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10092:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10092:27:0;;;;-1:-1:-1;;;;;;10092:27:0;;;;;;;;;-1:-1:-1;;9593:541:0;10186:110;;;;;;;;;;;;;10255:10;10148:35;10245:21;;;:9;10186:110;10245:21;;;;;;:33;;10148:35;;10186:110;;;10276:1;;10245:33;;;;;;:::i;:::-;;;;;;;;;:37;:33;;;;;:37;;;;;;;10186:110;;;10321:10;10311:21;;:9;:21;;;;;:32;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10311:53:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;8685:1690:0;8748:3;;8685:1690;;;-1:-1:-1;10462:10:0;10452:21;;;;:9;:21;;;;;10445:37;;;:::i;:::-;10554:17;;10550:694;;10587:24;10614:296;10643:232;10676:157;10713:21;10801:9;;10779:19;;10761:15;;:37;;;;:::i;10676:157::-;10855:2;10643:11;:232::i;:::-;10893:3;10614:11;:296::i;:::-;10587:323;;10945:16;10929:13;:32;10925:86;;;10995:16;10979:32;;10925:86;11026:14;11043:47;11055:29;11067:13;11082:1;11055:11;:29::i;11043:47::-;11026:64;;11123:6;11104:15;;:25;;;;;;;:::i;:::-;;;;;;;;11156:6;11143:9;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;11185:10:0;;-1:-1:-1;11177:56:0;11222:10;:6;11231:1;11222:10;:::i;:::-;11206:26;;:13;:26;:::i;:::-;11177:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10550:694;7886:3364;7857:3393::o;4155:2389::-;1287:10;4303:9;:24;;4295:57;;;;-1:-1:-1;;;4295:57:0;;6737:2:1;4295:57:0;;;6719:21:1;6776:2;6756:18;;;6749:30;-1:-1:-1;;;6795:18:1;;;6788:50;6855:18;;4295:57:0;6535:344:1;4295:57:0;4377:1;4370:3;:8;;;;:22;;;;;4389:3;4382;:10;;;;4370:22;4362:62;;;;-1:-1:-1;;;4362:62:0;;7086:2:1;4362:62:0;;;7068:21:1;7125:2;7105:18;;;7098:30;7164:29;7144:18;;;7137:57;7211:18;;4362:62:0;6884:351:1;4362:62:0;4467:1;4455:8;:13;;;;:33;;;;;4484:4;4472:8;:16;;;;4455:33;4434:112;;;;-1:-1:-1;;;4434:112:0;;7442:2:1;4434:112:0;;;7424:21:1;;;7461:18;;;7454:30;7520:34;7500:18;;;7493:62;7572:18;;4434:112:0;7240:356:1;4434:112:0;4556:23;4582:35;4594:9;1287:10;4582:11;:35::i;:::-;4556:61;-1:-1:-1;4655:14:0;;;;:8;:14;:::i;:::-;4636:33;;:15;:33;4628:58;;;;-1:-1:-1;;;4628:58:0;;8040:2:1;4628:58:0;;;8022:21:1;8079:2;8059:18;;;8052:30;-1:-1:-1;;;8098:18:1;;;8091:42;8150:18;;4628:58:0;7838:336:1;4628:58:0;4702:9;4697:486;4721:8;4717:12;;:1;:12;4697:486;;;4750:22;4775:338;;;;;;;;4873:15;4914:14;4954:10;4990:9;;;;;:::i;:::-;;;4831:190;;;;;;;;;;8620:19:1;;;8677:2;8673:15;;;-1:-1:-1;;8669:53:1;;;8664:2;8655:12;;8648:75;8757:15;;;;8753:53;8748:2;8739:12;;8732:75;8845:2;8841:15;-1:-1:-1;;8837:35:1;8832:2;8823:12;;8816:57;8898:3;8889:13;;8391:517;4831:190:0;;;;-1:-1:-1;;4831:190:0;;;;;;;;;4800:239;;4831:190;4800:239;;;;4775:338;;;;;;;;;;-1:-1:-1;;;;;5086:12:0;4775:338;;;;;;;;;5138:10;-1:-1:-1;5128:21:0;;;:9;:21;;;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4731:3;;;;;-1:-1:-1;4697:486:0;;;-1:-1:-1;5208:10:0;5198:21;;;;:9;:21;;;;;:29;;;;;5193:84;;5251:10;5241:21;;;;:9;:21;;;;;:29;;:36;;-1:-1:-1;;5241:36:0;5273:4;5241:36;;;5193:84;5312:14;5329:43;5341:25;5353:9;5364:1;5341:11;:25::i;5329:43::-;5312:60;;5407:17;5427:43;5439:25;5451:9;5462:1;5439:11;:25::i;5427:43::-;5407:63;;5523:6;5510:9;;:19;;;;;;;:::i;:::-;;;;;;;;5588:6;5569:15;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;5664:10:0;5687:1;5654:21;;;:9;:21;;;;;;-1:-1:-1;;;;;5654:21:0;5650:888;;-1:-1:-1;;;;;5856:17:0;;5863:10;5856:17;;:54;;-1:-1:-1;;;;;;5893:17:0;;;5856:54;:104;;;-1:-1:-1;5941:10:0;5931:21;;;;:9;:21;;;;;:29;;;;;5930:30;5856:104;5835:266;;;6076:10;;-1:-1:-1;;;;;6076:10:0;;-1:-1:-1;5835:266:0;6124:10;6114:21;;;;:9;:21;;;;;:27;;-1:-1:-1;;;;;;6114:27:0;-1:-1:-1;;;;;6114:27:0;;;;;;;;;6265:10;;;6240:35;;6236:245;;6308:9;6295;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;6236:245:0;;-1:-1:-1;6236:245:0;;6376:10;6356:32;6366:21;;;:9;:21;;;;;;;;;-1:-1:-1;;;;;6366:21:0;6356:32;;:9;:32;;;;;:47;;:60;;6407:9;;6356:32;:60;;6407:9;;6356:60;:::i;:::-;;;;;;;;6457:9;6434:19;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;;6236:245:0;6512:15;6495:14;:32;5650:888;4285:2259;;;4155:2389;;;;:::o;16674:129::-;16774:10;16764:21;;;;:9;:21;;;;;;;;:32;;16757:39;;;;;;;;;;;;;;;;;16723:22;;16757:39;;16764:32;;16757:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16674:129;:::o;12301:1384::-;1547:7;12457:16;:45;;12436:167;;;;-1:-1:-1;;;12436:167:0;;9115:2:1;12436:167:0;;;9097:21:1;9154:2;9134:18;;;9127:30;9193:34;9173:18;;;9166:62;9264:34;9244:18;;;9237:62;-1:-1:-1;;;9315:19:1;;;9308:42;9367:19;;12436:167:0;8913:479:1;12436:167:0;12708:10;12691:28;;;;:16;:28;;;;;:36;12671:56;;;12650:131;;;;-1:-1:-1;;;12650:131:0;;9599:2:1;12650:131:0;;;9581:21:1;9638:2;9618:18;;;9611:30;9677;9657:18;;;9650:58;9725:18;;12650:131:0;9397:352:1;12650:131:0;12972:10;12955:28;;;;:16;:28;;;;;:43;;;:53;;13001:7;12955:53;:::i;:::-;12920:15;:88;;12899:166;;;;-1:-1:-1;;;12899:166:0;;9956:2:1;12899:166:0;;;9938:21:1;9995:2;9975:18;;;9968:30;10034:33;10014:18;;;10007:61;10085:18;;12899:166:0;9754:355:1;12899:166:0;13300:16;13163:133;13192:21;13272:9;;13250:19;;13232:15;;:37;;;;:::i;13163:133::-;:153;;13142:230;;;;-1:-1:-1;;;13142:230:0;;10316:2:1;13142:230:0;;;10298:21:1;10355:2;10335:18;;;10328:30;10394:32;10374:18;;;10367:60;10444:18;;13142:230:0;10114:354:1;13142:230:0;13460:10;13443:28;;;;:16;:28;;;;;:56;;13483:16;;13443:28;:56;;13483:16;;13443:56;:::i;:::-;;;;;;;;13567:16;13542:21;;:41;;;;;;;:::i;15806:231::-;15878:10;;-1:-1:-1;;;;;15878:10:0;15864;:24;15856:62;;;;-1:-1:-1;;;15856:62:0;;10675:2:1;15856:62:0;;;10657:21:1;10714:2;10694:18;;;10687:30;10753:27;10733:18;;;10726:55;10798:18;;15856:62:0;10473:349:1;15856:62:0;15948:9;;;15928:17;15967:13;;;;15999:10;;15991:39;;15948:9;;-1:-1:-1;;;;;15999:10:0;;;;15991:39;;;;;15948:9;;15991:39;;15928:17;15991:39;15948:9;15999:10;15991:39;;;;;;;;;;;;;;;;;;;3582:129;3648:7;3679:1;3674;:6;;3667:14;;;;:::i;:::-;3699:5;3703:1;3699;:5;:::i;:::-;3692:12;;3582:129;;;;;:::o;3737:214::-;3803:7;3826:1;3831;3826:6;3822:45;;-1:-1:-1;3855:1:0;3848:8;;3822:45;3877:9;3889:5;3893:1;3889;:5;:::i;:::-;3877:17;-1:-1:-1;3923:1:0;3913:5;3917:1;3877:17;3913:5;:::i;:::-;3912:12;3905:20;;;;:::i;3977:152::-;4043:7;4073:1;4069;:5;4062:13;;;;:::i;:::-;4086:9;4098:5;4102:1;4098;:5;:::i;:::-;4086:17;3977:152;-1:-1:-1;;;;3977:152:0:o;6594:582::-;6660:7;6696:8;6683:10;:21;;;6679:35;;;-1:-1:-1;6713:1:0;;6594:582;-1:-1:-1;6594:582:0:o;6679:35::-;6742:8;6728:10;:22;;;6724:37;;-1:-1:-1;6759:2:0;;6594:582;-1:-1:-1;6594:582:0:o;6724:37::-;6789:7;6775:10;:21;;;6771:35;;-1:-1:-1;6805:1:0;;6594:582;-1:-1:-1;6594:582:0:o;6771:35::-;6834:7;6820:10;:21;;;6816:35;;-1:-1:-1;6850:1:0;;6594:582;-1:-1:-1;6594:582:0:o;6816:35::-;6879:6;6865:10;:20;;;6861:34;;-1:-1:-1;6894:1:0;;6594:582;-1:-1:-1;6594:582:0:o;6861:34::-;6923:5;6909:10;:19;;;6905:33;;-1:-1:-1;6937:1:0;;6594:582;-1:-1:-1;6594:582:0:o;6905:33::-;6966:5;6952:10;:19;;;6948:33;;-1:-1:-1;6980:1:0;;6594:582;-1:-1:-1;6594:582:0:o;6948:33::-;7009:4;6995:10;:18;;;6991:32;;-1:-1:-1;7022:1:0;;6594:582;-1:-1:-1;6594:582:0:o;6991:32::-;7051:4;7037:10;:18;;;7033:32;;-1:-1:-1;7064:1:0;;6594:582;-1:-1:-1;6594:582:0:o;7033:32::-;7093:3;7079:10;:17;;;7075:95;;-1:-1:-1;7119:1:0;;6594:582;-1:-1:-1;6594:582:0:o;7075:95::-;-1:-1:-1;7158:1:0;;6594:582;-1:-1:-1;6594:582:0:o;7075:95::-;6594:582;;;:::o;7226:605::-;7321:7;7348:11;7363:1;7348:16;7344:30;;-1:-1:-1;7373:1:0;;7226:605;-1:-1:-1;7226:605:0:o;7344:30::-;7388:11;7403:2;7388:17;7384:31;;-1:-1:-1;7414:1:0;;7226:605;-1:-1:-1;7226:605:0:o;7384:31::-;7429:11;7444:1;7429:16;7425:31;;-1:-1:-1;7454:2:0;;7226:605;-1:-1:-1;7226:605:0:o;7425:31::-;7470:11;7485:1;7470:16;7466:31;;-1:-1:-1;7495:2:0;;7226:605;-1:-1:-1;7226:605:0:o;7466:31::-;7511:11;7526:1;7511:16;7507:32;;-1:-1:-1;7536:3:0;;7226:605;-1:-1:-1;7226:605:0:o;7507:32::-;7553:11;7568:1;7553:16;7549:33;;-1:-1:-1;7578:4:0;;7226:605;-1:-1:-1;7226:605:0:o;7549:33::-;7596:11;7611:1;7596:16;7592:33;;-1:-1:-1;7621:4:0;;7226:605;-1:-1:-1;7226:605:0:o;7592:33::-;7639:11;7654:1;7639:16;7635:34;;-1:-1:-1;7664:5:0;;7226:605;-1:-1:-1;7226:605:0:o;7635:34::-;7683:11;7698:1;7683:16;7679:35;;-1:-1:-1;7708:6:0;;7226:605;-1:-1:-1;7226:605:0:o;7679:35::-;7728:11;7743:1;7728:16;7724:35;;-1:-1:-1;7753:6:0;;7226:605;-1:-1:-1;7226:605:0:o;7724:35::-;7773:11;7788:1;7773:16;7769:36;;-1:-1:-1;7798:7:0;;7226:605;-1:-1:-1;7226:605:0:o;7769:36::-;-1:-1:-1;7823:1:0;;7226:605;-1:-1:-1;7226:605:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;14:180:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;199:916::-;443:2;455:21;;;525:13;;428:18;;;547:22;;;395:4;;626:15;;;600:2;585:18;;;395:4;669:420;683:6;680:1;677:13;669:420;;;742:13;;784:9;;795:10;780:26;768:39;;859:2;851:11;;;845:18;865:4;841:29;827:12;;;820:51;919:2;911:11;;;905:18;891:12;;;884:40;978:4;970:13;;;964:20;-1:-1:-1;;;;;960:46:1;944:14;;;937:70;;;;1064:15;;;;1036:4;1027:14;;;;1003:1;698:9;669:420;;;-1:-1:-1;1106:3:1;;199:916;-1:-1:-1;;;;;199:916:1:o;1510:173::-;1578:20;;-1:-1:-1;;;;;1627:31:1;;1617:42;;1607:70;;1673:1;1670;1663:12;1688:694;1771:6;1779;1787;1795;1848:3;1836:9;1827:7;1823:23;1819:33;1816:53;;;1865:1;1862;1855:12;1816:53;1904:9;1891:23;1954:6;1947:5;1943:18;1936:5;1933:29;1923:57;;1976:1;1973;1966:12;1923:57;1999:5;-1:-1:-1;2056:2:1;2041:18;;2028:32;2104:4;2091:18;;2079:31;;2069:59;;2124:1;2121;2114:12;2069:59;2147:7;-1:-1:-1;2206:2:1;2191:18;;2178:32;-1:-1:-1;;;;;2241:33:1;;2229:46;;2219:74;;2289:1;2286;2279:12;2219:74;2312:7;-1:-1:-1;2338:38:1;2372:2;2357:18;;2338:38;:::i;:::-;2328:48;;1688:694;;;;;;;:::o;2387:186::-;2446:6;2499:2;2487:9;2478:7;2474:23;2470:32;2467:52;;;2515:1;2512;2505:12;2467:52;2538:29;2557:9;2538:29;:::i;2578:782::-;2826:2;2838:21;;;2908:13;;2811:18;;;2930:22;;;2778:4;;3009:15;;;2983:2;2968:18;;;2778:4;3052:282;3066:6;3063:1;3060:13;3052:282;;;3125:13;;3167:9;;3178:10;3163:26;3151:39;;3242:2;3234:11;;;3228:18;3248:4;3224:29;3210:12;;;3203:51;3309:15;;;;3283:2;3274:12;;;;3088:1;3081:9;3052:282;;3716:127;3777:10;3772:3;3768:20;3765:1;3758:31;3808:4;3805:1;3798:15;3832:4;3829:1;3822:15;3848:125;3913:9;;;3934:10;;;3931:36;;;3947:18;;:::i;3978:217::-;4018:1;4044;4034:132;;4088:10;4083:3;4079:20;4076:1;4069:31;4123:4;4120:1;4113:15;4151:4;4148:1;4141:15;4034:132;-1:-1:-1;4180:9:1;;3978:217::o;4200:127::-;4261:10;4256:3;4252:20;4249:1;4242:31;4292:4;4289:1;4282:15;4316:4;4313:1;4306:15;4691:128;4758:9;;;4779:11;;;4776:37;;;4793:18;;:::i;4824:168::-;4897:9;;;4928;;4945:15;;;4939:22;;4925:37;4915:71;;4966:18;;:::i;4997:127::-;5058:10;5053:3;5049:20;5046:1;5039:31;5089:4;5086:1;5079:15;5113:4;5110:1;5103:15;7601:232;7708:6;7685:14;;;7701;;;7681:35;7736:24;;;;7779;;;7769:58;;7807:18;;:::i;:::-;7769:58;7601:232;;;;:::o;8179:207::-;8218:3;-1:-1:-1;;;;;8251:31:1;;-1:-1:-1;;;;;;8294:32:1;;8291:58;;8329:18;;:::i;:::-;8378:1;8365:15;;8179:207;-1:-1:-1;;8179:207:1:o;10827:127::-;10888:10;10883:3;10879:20;10876:1;10869:31;10919:4;10916:1;10909:15;10943:4;10940:1;10933:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1455200",
								"executionCost": "69966",
								"totalCost": "1525166"
							},
							"external": {
								"BuyEggs(uint16,uint8,uint232,address)": "infinite",
								"DestructContract()": "infinite",
								"DevAddress()": "2424",
								"DeveloperWithdrawal()": "infinite",
								"DistributeInvestmentIncome()": "infinite",
								"GetInvestmentBalance(address)": "2560",
								"GetLatestLottery()": "infinite",
								"GetWinningRecord(uint256)": "infinite",
								"InvestmentDeposit()": "infinite",
								"InvestmentWithdrawal(uint256)": "infinite",
								"InvestorsProfit()": "2383",
								"OpenEggs()": "infinite",
								"RecentDividendTime()": "2339",
								"TotalInvestmentAmount()": "2317",
								"WithdrawReferralProfit()": "infinite"
							},
							"internal": {
								"GetWinninggrade(uint32)": "317",
								"GetWinningmultiple(uint256)": "275",
								"SafeMathadd(uint256,uint256)": "infinite",
								"SafeMathdiv(uint256,uint256)": "109",
								"SafeMathmul(uint256,uint256)": "infinite",
								"SafeMathsub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 18486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2929,
									"end": 3071,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2953,
									"end": 2963,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2953,
									"end": 2976,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2953,
									"end": 2976,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2953,
									"end": 2976,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 2976,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2953,
									"end": 2976,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2953,
									"end": 2976,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2953,
									"end": 2976,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3007,
									"end": 3022,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 2986,
									"end": 3004,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2986,
									"end": 3022,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2986,
									"end": 3022,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2986,
									"end": 3022,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3032,
									"end": 3046,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3032,
									"end": 3064,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 18486,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 18486,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 18486,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 18486,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 18486,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220795005b2f9f701aed3dd9180ed4435f53a675b83c7e4c44a5b9cb0d4aa5684c264736f6c634300081a0033",
									".code": [
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "A659F4DC"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "CF438305"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "CF438305"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "D9498A83"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "DD5F6F4D"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "F4E79B5B"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "A659F4DC"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "B1C617FF"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "C9EA0299"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "CA6AAE29"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "2B5BACA1"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "2B5BACA1"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "49821332"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "7DA384FD"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "89A4C1A0"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "12DB1357"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "22629256"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "289F9019"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 18486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13714,
											"end": 15297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15332,
											"end": 15771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17057,
											"end": 18484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16069,
											"end": 16642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16069,
											"end": 16642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16069,
											"end": 16642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 12272,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11279,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11279,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11279,
											"end": 12272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7857,
											"end": 11250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1316,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1120,
											"end": 1323,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1447,
											"end": 1465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1328,
											"end": 1505,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4155,
											"end": 6544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4155,
											"end": 6544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2200,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 16835,
											"end": 16963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16926,
											"end": 16948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16900,
											"end": 16907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16926,
											"end": 16948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16926,
											"end": 16948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16926,
											"end": 16948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16926,
											"end": 16948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16948,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16963,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16674,
											"end": 16803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16674,
											"end": 16803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12301,
											"end": 13685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12301,
											"end": 13685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15806,
											"end": 16037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13714,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13900,
											"end": 13910,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13899,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 13883,
											"end": 13948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13883,
											"end": 13992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13982,
											"end": 13992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 13992,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13982,
											"end": 13992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13968,
											"end": 13978,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13968,
											"end": 13992,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13992,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13883,
											"end": 13992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3608,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3586,
											"end": 3604,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3586,
											"end": 3604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9036BAB9BA10313290309034B73B32B9BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3705,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3687,
											"end": 3705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13862,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14080,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14080,
											"end": 14095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14331,
											"end": 14340,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14331,
											"end": 14340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14328,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14309,
											"end": 14328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14051,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14051,
											"end": 14077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14051,
											"end": 14077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14051,
											"end": 14077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14230,
											"end": 14351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14230,
											"end": 14351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14276,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14291,
											"end": 14328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14080,
											"end": 14095,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14291,
											"end": 14328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14328,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14291,
											"end": 14328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14291,
											"end": 14340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14291,
											"end": 14340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14340,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14291,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14230,
											"end": 14241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 14230,
											"end": 14351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14230,
											"end": 14351,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14230,
											"end": 14351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14210,
											"end": 14351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14210,
											"end": 14351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 14366,
											"end": 14375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14366,
											"end": 14402,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 14362,
											"end": 14513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14452,
											"end": 14455,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 14440,
											"end": 14449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14440,
											"end": 14455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14455,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14440,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14418,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14418,
											"end": 14455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14418,
											"end": 14455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14418,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14418,
											"end": 14455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14418,
											"end": 14455,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14418,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14418,
											"end": 14455,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14487,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14499,
											"end": 14502,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 14487,
											"end": 14496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14487,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14487,
											"end": 14502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14487,
											"end": 14502,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14487,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14469,
											"end": 14502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14469,
											"end": 14502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14502,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14469,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14513,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 14362,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14522,
											"end": 14537,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14522,
											"end": 14541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14522,
											"end": 14541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14522,
											"end": 14541,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 15188,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14552,
											"end": 15188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14585,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14576,
											"end": 14592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14592,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 15188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 15188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14552,
											"end": 15188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14634,
											"end": 14650,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14651,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14661,
											"end": 14662,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14651,
											"end": 14663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14664,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14717,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 15178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14613,
											"end": 15178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14830,
											"end": 14856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14859,
											"end": 15094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14892,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14929,
											"end": 14945,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14946,
											"end": 14955,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14956,
											"end": 14957,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14946,
											"end": 14958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14946,
											"end": 14958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14993,
											"end": 15011,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14892,
											"end": 15033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 15033,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14892,
											"end": 15033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15055,
											"end": 15076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15055,
											"end": 15076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14859,
											"end": 14870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14859,
											"end": 15094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14859,
											"end": 15094,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14859,
											"end": 15094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14830,
											"end": 15094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14830,
											"end": 15094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15130,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15131,
											"end": 15132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15121,
											"end": 15133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15113,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14732,
											"end": 15178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 15178,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14613,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14594,
											"end": 14597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 15188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14552,
											"end": 15188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 15188,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14552,
											"end": 15188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15202,
											"end": 15220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15198,
											"end": 15291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 15254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15244,
											"end": 15254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 15254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15244,
											"end": 15254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 15254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 15254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 15254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15279,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 15254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15265,
											"end": 15279,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 15254,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15291,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15198,
											"end": 15291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 15297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 15297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 15297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 15297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15332,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15468,
											"end": 15478,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15458,
											"end": 15479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15467,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15458,
											"end": 15479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15458,
											"end": 15479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15458,
											"end": 15479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15479,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15494,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15458,
											"end": 15494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15494,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15498,
											"end": 15508,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 15458,
											"end": 15508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 4536,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4644,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420656E6F7567682070726F66697420746F207769746864726177210000"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4680,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4662,
											"end": 4680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4332,
											"end": 4686,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15437,
											"end": 15564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15602,
											"end": 15612,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15592,
											"end": 15613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15601,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15592,
											"end": 15613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15592,
											"end": 15613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15592,
											"end": 15613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15613,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15689,
											"end": 15708,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 15689,
											"end": 15718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15736,
											"end": 15746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15736,
											"end": 15746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15757,
											"end": 15763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15757,
											"end": 15763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15757,
											"end": 15763,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15736,
											"end": 15746,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15375,
											"end": 15771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15332,
											"end": 15771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17057,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17126,
											"end": 17136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17126,
											"end": 17136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17126,
											"end": 17136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17122,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17136,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17104,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17104,
											"end": 17137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17104,
											"end": 17137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17104,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17104,
											"end": 17137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17104,
											"end": 17137,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17104,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17174,
											"end": 17188,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17174,
											"end": 17188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17174,
											"end": 17198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 17174,
											"end": 17198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17198,
											"name": "PUSH",
											"source": 0,
											"value": "13C680"
										},
										{
											"begin": 17174,
											"end": 17198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17174,
											"end": 17198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17174,
											"end": 17198,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 17174,
											"end": 17198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17155,
											"end": 17170,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 17155,
											"end": 17198,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17155,
											"end": 17198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17147,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17147,
											"end": 17199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17147,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17147,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17147,
											"end": 17199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17147,
											"end": 17199,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17147,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17239,
											"end": 17260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17239,
											"end": 17260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17235,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17260,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17210,
											"end": 18434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17210,
											"end": 18434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17281,
											"end": 17290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17300,
											"end": 17309,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17300,
											"end": 17316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17296,
											"end": 17316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17296,
											"end": 17316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 17366,
											"end": 17382,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17383,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17393,
											"end": 17394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17383,
											"end": 17395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17383,
											"end": 17395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17453,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17341,
											"end": 17629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17511,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17512,
											"end": 17513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17502,
											"end": 17514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17576,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17566,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17550,
											"end": 17566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17577,
											"end": 17578,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17577,
											"end": 17578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17567,
											"end": 17579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17567,
											"end": 17579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17588,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17629,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17341,
											"end": 17629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17318,
											"end": 17321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17210,
											"end": 18434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 17210,
											"end": 18434,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17210,
											"end": 18434,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17210,
											"end": 18434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17766,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 17785,
											"end": 17829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17785,
											"end": 17829,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17781,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17781,
											"end": 18424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 17863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 17882,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17873,
											"end": 17889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17869,
											"end": 17889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17869,
											"end": 17889,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 17947,
											"end": 17963,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17964,
											"end": 17973,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17974,
											"end": 17975,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17964,
											"end": 17976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17977,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 18038,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17918,
											"end": 18392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17918,
											"end": 18392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18186,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18187,
											"end": 18188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 18177,
											"end": 18189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18322,
											"end": 18343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18322,
											"end": 18343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18256,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18303,
											"end": 18318,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18303,
											"end": 18318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18246,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18230,
											"end": 18246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18257,
											"end": 18258,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18257,
											"end": 18258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 18247,
											"end": 18259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 18230,
											"end": 18318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18230,
											"end": 18318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18318,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 18230,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18229,
											"end": 18343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18229,
											"end": 18343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18343,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18229,
											"end": 18343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18169,
											"end": 18369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17918,
											"end": 18392,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17918,
											"end": 18392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17891,
											"end": 17894,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17891,
											"end": 17894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17849,
											"end": 18410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17781,
											"end": 18424,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17781,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 18434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17210,
											"end": 18434,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 17210,
											"end": 18434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18465,
											"end": 18475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18465,
											"end": 18475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18444,
											"end": 18477,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16264,
											"end": 16277,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 16264,
											"end": 16284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 16181,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16161,
											"end": 16181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16216,
											"end": 16227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16216,
											"end": 16227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16326,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16326,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16295,
											"end": 16380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16295,
											"end": 16380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 16295,
											"end": 16380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16353,
											"end": 16369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16295,
											"end": 16380,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 16295,
											"end": 16380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16451,
											"end": 16459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16433,
											"end": 16460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16476,
											"end": 16485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16471,
											"end": 16599,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16471,
											"end": 16599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16503,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16471,
											"end": 16599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16562,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 16586,
											"end": 16587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16582,
											"end": 16583,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16563,
											"end": 16579,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 16563,
											"end": 16583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16583,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16563,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 16563,
											"end": 16587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16549,
											"end": 16588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16543,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16544,
											"end": 16545,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16544,
											"end": 16545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16524,
											"end": 16546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 16508,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16505,
											"end": 16508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16471,
											"end": 16599,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16599,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16471,
											"end": 16599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16616,
											"end": 16635,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16642,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16069,
											"end": 16642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 12272,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11279,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11404,
											"end": 11413,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11442,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11442,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 11404,
											"end": 11500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 11462,
											"end": 11471,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11462,
											"end": 11500,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11462,
											"end": 11500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11500,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 11404,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5333,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5372,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5443,
											"name": "PUSH",
											"source": 1,
											"value": "496E766573746D656E7420616D6F756E7420626574657765656E203120616E64"
										},
										{
											"begin": 5389,
											"end": 5407,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5389,
											"end": 5407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5389,
											"end": 5407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "203130303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5524,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5505,
											"end": 5524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5129,
											"end": 5530,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11383,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 11625,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 11654,
											"end": 11675,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 11734,
											"end": 11743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11734,
											"end": 11743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11712,
											"end": 11731,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11712,
											"end": 11731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11694,
											"end": 11709,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11694,
											"end": 11709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11694,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11694,
											"end": 11731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11694,
											"end": 11731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11694,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11694,
											"end": 11731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11758,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 11625,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11785,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11785,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11604,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11604,
											"end": 11795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11604,
											"end": 11795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11604,
											"end": 11795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11604,
											"end": 11795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11604,
											"end": 11795,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11604,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11873,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11839,
											"end": 11860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11839,
											"end": 11873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11942,
											"end": 11952,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11941,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11974,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11974,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11974,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11925,
											"end": 11974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11974,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12001,
											"end": 12011,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11984,
											"end": 12012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12000,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11984,
											"end": 12012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12030,
											"end": 12045,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12027,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11984,
											"end": 12027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12152,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12112,
											"end": 12152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12152,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12112,
											"end": 12152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12107,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12107,
											"end": 12266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12185,
											"end": 12195,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12184,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12168,
											"end": 12196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12168,
											"end": 12196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12168,
											"end": 12196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12208,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12168,
											"end": 12208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12168,
											"end": 12215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12211,
											"end": 12215,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12168,
											"end": 12215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12215,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12215,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "PUSH",
											"source": 0,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12107,
											"end": 12266,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12107,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 12272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7857,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7984,
											"end": 7994,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 7995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 7995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 7983,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7974,
											"end": 7995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7974,
											"end": 7995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 7995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7974,
											"end": 7995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 7995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 8011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206861766520756E64726177206C6F7474657279207469"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 5850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636B657473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 5930,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5911,
											"end": 5930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5535,
											"end": 5936,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7953,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8277,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8309,
											"end": 8350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8309,
											"end": 8350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8309,
											"end": 8350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 8309,
											"end": 8350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8309,
											"end": 8350,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8309,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 8257,
											"end": 8351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8257,
											"end": 8384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8257,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8257,
											"end": 8384,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8257,
											"end": 8384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8226,
											"end": 8238,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 8226,
											"end": 8384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6143,
											"end": 6145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6182,
											"end": 6184,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 6162,
											"end": 6180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6162,
											"end": 6180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49742773206E6F742074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5941,
											"end": 6278,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8205,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8523,
											"end": 8533,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8513,
											"end": 8534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8522,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8513,
											"end": 8534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8513,
											"end": 8534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8545,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8513,
											"end": 8545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8509,
											"end": 8609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8587,
											"end": 8597,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8586,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8570,
											"end": 8609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8577,
											"end": 8609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8570,
											"end": 8609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8609,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8570,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8653,
											"end": 8674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8653,
											"end": 8674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8719,
											"end": 8729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8709,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8709,
											"end": 8730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8709,
											"end": 8730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8709,
											"end": 8718,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8709,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8709,
											"end": 8730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8709,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8709,
											"end": 8730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8709,
											"end": 8730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8709,
											"end": 8746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8746,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8903,
											"end": 8913,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8893,
											"end": 8914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8902,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8893,
											"end": 8914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8893,
											"end": 8914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8893,
											"end": 8914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8924,
											"end": 8925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8924,
											"end": 8925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 8893,
											"end": 8926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8938,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8893,
											"end": 8938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8938,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8893,
											"end": 8938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8893,
											"end": 8938,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8893,
											"end": 8938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 8939,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 8833,
											"end": 8985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8977,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8833,
											"end": 8985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9197,
											"end": 9207,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9196,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9187,
											"end": 9208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9187,
											"end": 9208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9187,
											"end": 9208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9208,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9218,
											"end": 9219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9218,
											"end": 9219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9187,
											"end": 9220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9317,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9318,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9297,
											"end": 9330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9297,
											"end": 9342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9254,
											"end": 9372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9254,
											"end": 9372,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6440,
											"end": 6459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6468,
											"end": 6496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6521,
											"end": 6523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6530,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9141,
											"end": 9398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9106,
											"end": 9420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9420,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9452,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9054,
											"end": 9452,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 9533,
											"end": 9543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9517,
											"end": 9544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9544,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 9517,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9597,
											"end": 9612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9593,
											"end": 10134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 9593,
											"end": 10134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9632,
											"end": 9652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9718,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "470DE4DF820000"
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9709,
											"end": 9742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9746,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9746,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9709,
											"end": 9746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 9674,
											"end": 9685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9655,
											"end": 9686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9686,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 9655,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9655,
											"end": 9746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9655,
											"end": 9746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9746,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9655,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 9655,
											"end": 9780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9655,
											"end": 9780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9780,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 9655,
											"end": 9780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9632,
											"end": 9780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 9632,
											"end": 9780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9799,
											"end": 9828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9951,
											"end": 9961,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9847,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 9962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9941,
											"end": 9962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9962,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9962,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9847,
											"end": 9873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9847,
											"end": 9873,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9941,
											"end": 9974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9978,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9978,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9941,
											"end": 9978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 10007,
											"end": 10022,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10045,
											"end": 10055,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 10073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10105,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "PUSH",
											"source": 0,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "PUSH",
											"source": 0,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DBA"
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "PUSH",
											"source": 0,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DBB"
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9593,
											"end": 10134,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 9593,
											"end": 10134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10255,
											"end": 10265,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10245,
											"end": 10266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10245,
											"end": 10266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10266,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10183,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10277,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10245,
											"end": 10278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10282,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10282,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10282,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10245,
											"end": 10282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10321,
											"end": 10331,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10320,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10311,
											"end": 10332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10332,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8748,
											"end": 8751,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8748,
											"end": 8751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8685,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10462,
											"end": 10472,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10452,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10452,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10452,
											"end": 10473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10452,
											"end": 10473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10452,
											"end": 10461,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10452,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10452,
											"end": 10473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10452,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10452,
											"end": 10473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10452,
											"end": 10473,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10445,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 10445,
											"end": 10482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10445,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 10445,
											"end": 10482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10445,
											"end": 10482,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 10445,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10554,
											"end": 10571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10554,
											"end": 10571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 10550,
											"end": 11244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10587,
											"end": 10611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10614,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 10643,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 10676,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10810,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10801,
											"end": 10810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10776,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10761,
											"end": 10776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10761,
											"end": 10798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10761,
											"end": 10798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10676,
											"end": 10833,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 10676,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10855,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 10643,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10643,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10643,
											"end": 10875,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 10643,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10893,
											"end": 10896,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10614,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10614,
											"end": 10910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10910,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 10614,
											"end": 10910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10587,
											"end": 10910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10587,
											"end": 10910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10945,
											"end": 10961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10929,
											"end": 10942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10929,
											"end": 10961,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10925,
											"end": 11011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10925,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 10925,
											"end": 11011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10995,
											"end": 11011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10979,
											"end": 11011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10979,
											"end": 11011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10925,
											"end": 11011,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 10925,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11026,
											"end": 11040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 11055,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 11067,
											"end": 11080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11083,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11055,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 11055,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11026,
											"end": 11090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11026,
											"end": 11090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11104,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11104,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11156,
											"end": 11162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11152,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11143,
											"end": 11152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11143,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11162,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11185,
											"end": 11195,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 11222,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 11222,
											"end": 11228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11231,
											"end": 11232,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11222,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 11222,
											"end": 11232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11232,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 11222,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11206,
											"end": 11232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11233,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 11244,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 10550,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7886,
											"end": 11250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 11250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "470DE4DF820000"
										},
										{
											"begin": 4303,
											"end": 4312,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4303,
											"end": 4327,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4303,
											"end": 4327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6719,
											"end": 6740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "427579206174206C65617374206F6E6520656767"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6795,
											"end": 6813,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6795,
											"end": 6813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6855,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6535,
											"end": 6879,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 4295,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4378,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4378,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4370,
											"end": 4378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4392,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4382,
											"end": 4385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4392,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4382,
											"end": 4392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4392,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7068,
											"end": 7089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7125,
											"end": 7127,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 7105,
											"end": 7123,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7105,
											"end": 7123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7193,
											"name": "PUSH",
											"source": 1,
											"value": "4D756C7469706C6573206265747765656E203120616E64203130300000000000"
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7211,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7211,
											"end": 7229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6884,
											"end": 7235,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4455,
											"end": 4463,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 4455,
											"end": 4468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4468,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 4455,
											"end": 4488,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4488,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 4472,
											"end": 4480,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4472,
											"end": 4488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 4472,
											"end": 4488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4472,
											"end": 4488,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4472,
											"end": 4488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4488,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 4455,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7424,
											"end": 7445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7424,
											"end": 7445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7520,
											"end": 7554,
											"name": "PUSH",
											"source": 1,
											"value": "4E756D626572206F662065676773206265747765656E203120616E6420313030"
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7240,
											"end": 7596,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 4434,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 4594,
											"end": 4603,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "470DE4DF820000"
										},
										{
											"begin": 4582,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4582,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 4617,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 4582,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 4655,
											"end": 4669,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4655,
											"end": 4669,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4655,
											"end": 4669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4655,
											"end": 4663,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4655,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 4655,
											"end": 4669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4655,
											"end": 4669,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 4655,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4669,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 4636,
											"end": 4669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8022,
											"end": 8043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642064617461"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8150,
											"end": 8168,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8150,
											"end": 8168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7838,
											"end": 8174,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 4628,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 5183,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 4697,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4721,
											"end": 4729,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 5183,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4697,
											"end": 5183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4888,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "COINBASE",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4990,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8639,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8620,
											"end": 8639,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8620,
											"end": 8639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8677,
											"end": 8679,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8673,
											"end": 8688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8688,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8669,
											"end": 8722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8669,
											"end": 8722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8669,
											"end": 8722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8666,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8655,
											"end": 8667,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8772,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8772,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 8739,
											"end": 8751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8732,
											"end": 8807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8845,
											"end": 8847,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 8841,
											"end": 8856,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8837,
											"end": 8872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8832,
											"end": 8834,
											"name": "PUSH",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 8823,
											"end": 8835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 8901,
											"name": "PUSH",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 8889,
											"end": 8902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 8902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8908,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 5039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 5039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 5021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4800,
											"end": 5039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 5039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 5039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 5039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5086,
											"end": 5098,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 5113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5148,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 5149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5128,
											"end": 5149,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5149,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5172,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 4697,
											"end": 5183,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 5183,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4697,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5208,
											"end": 5218,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5198,
											"end": 5219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5227,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5198,
											"end": 5227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5227,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5198,
											"end": 5227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 5193,
											"end": 5277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5251,
											"end": 5261,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5241,
											"end": 5270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5241,
											"end": 5277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5241,
											"end": 5277,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5277,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5277,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 5193,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 5341,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5353,
											"end": 5362,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5341,
											"end": 5366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5372,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 5329,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 5439,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5439,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5439,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5427,
											"end": 5470,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 5427,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5510,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5588,
											"end": 5594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5569,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5569,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5664,
											"end": 5674,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5663,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5654,
											"end": 5675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5650,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 5650,
											"end": 6538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5856,
											"end": 5873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5873,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 5856,
											"end": 5910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5893,
											"end": 5910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 5910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 5910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 5856,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 5856,
											"end": 5960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5941,
											"end": 5951,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5940,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5931,
											"end": 5960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5930,
											"end": 5960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5856,
											"end": 5960,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 5856,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5835,
											"end": 6101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5835,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 5835,
											"end": 6101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6076,
											"end": 6086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6086,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6076,
											"end": 6086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6076,
											"end": 6086,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5835,
											"end": 6101,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 5835,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6124,
											"end": 6134,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6141,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6265,
											"end": 6275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6265,
											"end": 6275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6265,
											"end": 6275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6275,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6236,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 6236,
											"end": 6481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6308,
											"end": 6317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6295,
											"end": 6317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6236,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 6236,
											"end": 6481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6236,
											"end": 6481,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6236,
											"end": 6481,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 6236,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6386,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6375,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6365,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6356,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6388,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6403,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6356,
											"end": 6403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6416,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6356,
											"end": 6416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6457,
											"end": 6466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6453,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6434,
											"end": 6453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6434,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6236,
											"end": 6481,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 6236,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6527,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6509,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6495,
											"end": 6527,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5650,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 5650,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 6544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 6544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 6544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 6544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16774,
											"end": 16784,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16773,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16785,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16745,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16723,
											"end": 16745,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16674,
											"end": 16803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12301,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 12457,
											"end": 12473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12502,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12502,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9154,
											"end": 9156,
											"name": "PUSH",
											"source": 1,
											"value": "4B"
										},
										{
											"begin": 9134,
											"end": 9152,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9134,
											"end": 9152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9134,
											"end": 9152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9127,
											"end": 9157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9227,
											"name": "PUSH",
											"source": 1,
											"value": "4D696E696D756D20696E766573746D656E7420616D6F756E7420697320726571"
										},
										{
											"begin": 9173,
											"end": 9191,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9173,
											"end": 9191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9173,
											"end": 9191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9166,
											"end": 9228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "PUSH",
											"source": 1,
											"value": "75697265642C6974277320736D616C6C6572207468616E20746865206D696E69"
										},
										{
											"begin": 9244,
											"end": 9262,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9244,
											"end": 9262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5D5B4819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 9367,
											"end": 9386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8913,
											"end": 9392,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 12436,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12708,
											"end": 12718,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12691,
											"end": 12719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12691,
											"end": 12719,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12691,
											"end": 12719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12691,
											"end": 12719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12719,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12727,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12671,
											"end": 12727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12671,
											"end": 12727,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12671,
											"end": 12727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9601,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9640,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 9618,
											"end": 9636,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9618,
											"end": 9636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9677,
											"end": 9707,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420656E6F7567682066756E6420746F2077697468647261772100000000"
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9650,
											"end": 9708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9725,
											"end": 9743,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9725,
											"end": 9743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9397,
											"end": 9749,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 12650,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12972,
											"end": 12982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12955,
											"end": 12983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12971,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12955,
											"end": 12983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12955,
											"end": 12983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12955,
											"end": 12983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12998,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12955,
											"end": 12998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 13008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 12955,
											"end": 13008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13001,
											"end": 13008,
											"name": "PUSH",
											"source": 0,
											"value": "93A80"
										},
										{
											"begin": 12955,
											"end": 13008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12955,
											"end": 13008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 13008,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 12955,
											"end": 13008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12920,
											"end": 12935,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12920,
											"end": 13008,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12920,
											"end": 13008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9956,
											"end": 9958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9938,
											"end": 9959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 9997,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9968,
											"end": 9998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10067,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F74207769746864726177206166746572206F6E65207765656B2100"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10007,
											"end": 10068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9754,
											"end": 10109,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 12899,
											"end": 13065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13300,
											"end": 13316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 13192,
											"end": 13213,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13281,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13272,
											"end": 13281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13250,
											"end": 13269,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13250,
											"end": 13269,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13247,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13232,
											"end": 13247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13232,
											"end": 13269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13232,
											"end": 13269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13296,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 13163,
											"end": 13296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10316,
											"end": 10318,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10357,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 10335,
											"end": 10353,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10335,
											"end": 10353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10328,
											"end": 10358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10426,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E742066756E6420746F207769746864726177210000"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 10114,
											"end": 10468,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 13142,
											"end": 13372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13460,
											"end": 13470,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13459,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13499,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13443,
											"end": 13499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13567,
											"end": 13583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13542,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 13542,
											"end": 13583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13542,
											"end": 13583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15806,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15878,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15878,
											"end": 15888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15878,
											"end": 15888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15864,
											"end": 15874,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15864,
											"end": 15888,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10675,
											"end": 10677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10657,
											"end": 10678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10716,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10694,
											"end": 10712,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10694,
											"end": 10712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10753,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "596F75206D7573742062652074686520646576656C6F70657200000000000000"
										},
										{
											"begin": 10733,
											"end": 10751,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10733,
											"end": 10751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10733,
											"end": 10751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10726,
											"end": 10781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 10473,
											"end": 10822,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 15856,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15928,
											"end": 15945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15967,
											"end": 15980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15980,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15999,
											"end": 16009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15928,
											"end": 15945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16009,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 16030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3711,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3582,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3680,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3667,
											"end": 3681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3703,
											"end": 3704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3699,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3704,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3699,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3711,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 3582,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 3951,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3737,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3831,
											"end": 3832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 3822,
											"end": 3867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 3848,
											"end": 3856,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 3822,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3890,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3889,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3889,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3913,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 3917,
											"end": 3918,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3913,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3913,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3913,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 3913,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3912,
											"end": 3924,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3905,
											"end": 3925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3905,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3905,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3977,
											"end": 4129,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3977,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 4062,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 4102,
											"end": 4103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4098,
											"end": 4103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4103,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3977,
											"end": 4129,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3977,
											"end": 4129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6704,
											"name": "PUSH",
											"source": 0,
											"value": "4000000"
										},
										{
											"begin": 6683,
											"end": 6693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6679,
											"end": 6714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6679,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 6679,
											"end": 6714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6679,
											"end": 6714,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 6679,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6742,
											"end": 6750,
											"name": "PUSH",
											"source": 0,
											"value": "1000000"
										},
										{
											"begin": 6728,
											"end": 6738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6724,
											"end": 6761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6724,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6789,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "400000"
										},
										{
											"begin": 6775,
											"end": 6785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6771,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 6771,
											"end": 6806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6771,
											"end": 6806,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 6771,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "PUSH",
											"source": 0,
											"value": "100000"
										},
										{
											"begin": 6820,
											"end": 6830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6820,
											"end": 6841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6841,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 6816,
											"end": 6851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6851,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6850,
											"end": 6851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6851,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 6816,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "40000"
										},
										{
											"begin": 6865,
											"end": 6875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6865,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6865,
											"end": 6885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6865,
											"end": 6885,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 6861,
											"end": 6895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6894,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6894,
											"end": 6895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6895,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 6861,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6923,
											"end": 6928,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 6909,
											"end": 6919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 6928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6909,
											"end": 6928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 6928,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 6905,
											"end": 6938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6937,
											"end": 6938,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6937,
											"end": 6938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6938,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 6905,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6971,
											"name": "PUSH",
											"source": 0,
											"value": "4000"
										},
										{
											"begin": 6952,
											"end": 6962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 6971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6952,
											"end": 6971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 6971,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6948,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 6948,
											"end": 6981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6980,
											"end": 6981,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6980,
											"end": 6981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6948,
											"end": 6981,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 6948,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7013,
											"name": "PUSH",
											"source": 0,
											"value": "1000"
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6995,
											"end": 7013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7013,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6991,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 6991,
											"end": 7023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7022,
											"end": 7023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6991,
											"end": 7023,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 6991,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7055,
											"name": "PUSH",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 7037,
											"end": 7047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 7033,
											"end": 7065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7065,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 7033,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7096,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7079,
											"end": 7089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7096,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7079,
											"end": 7096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7096,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7158,
											"end": 7159,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7158,
											"end": 7159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7344,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 7344,
											"end": 7374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7344,
											"end": 7374,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 7344,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7403,
											"end": 7405,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 7384,
											"end": 7415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7414,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7414,
											"end": 7415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7415,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 7384,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7445,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7429,
											"end": 7445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 7425,
											"end": 7456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7454,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7454,
											"end": 7456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7456,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 7425,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7486,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7470,
											"end": 7486,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 7466,
											"end": 7497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7495,
											"end": 7497,
											"name": "PUSH",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7495,
											"end": 7497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7497,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 7466,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7526,
											"end": 7527,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7511,
											"end": 7527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7536,
											"end": 7539,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7536,
											"end": 7539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7553,
											"end": 7569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 7549,
											"end": 7582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7578,
											"end": 7582,
											"name": "PUSH",
											"source": 0,
											"value": "4B0"
										},
										{
											"begin": 7578,
											"end": 7582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7582,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 7549,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7611,
											"end": 7612,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7596,
											"end": 7612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 7592,
											"end": 7625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7621,
											"end": 7625,
											"name": "PUSH",
											"source": 0,
											"value": "12C0"
										},
										{
											"begin": 7621,
											"end": 7625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7625,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 7592,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7655,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7639,
											"end": 7655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 7635,
											"end": 7669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7664,
											"end": 7669,
											"name": "PUSH",
											"source": 0,
											"value": "4E20"
										},
										{
											"begin": 7664,
											"end": 7669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7669,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 7635,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7683,
											"end": 7694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7699,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7683,
											"end": 7699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7728,
											"end": 7744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7724,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 7724,
											"end": 7759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7753,
											"end": 7759,
											"name": "PUSH",
											"source": 0,
											"value": "7A120"
										},
										{
											"begin": 7753,
											"end": 7759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7724,
											"end": 7759,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 7724,
											"end": 7759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7773,
											"end": 7784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7789,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7773,
											"end": 7789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7769,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 7769,
											"end": 7805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7798,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "1E8480"
										},
										{
											"begin": 7798,
											"end": 7805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7769,
											"end": 7805,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 7769,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7823,
											"end": 7824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "213"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "250"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "249"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "250"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "380"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "384"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "384"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "386"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "386"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 1115,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 199,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 445,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 455,
											"end": 476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 455,
											"end": 476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 525,
											"end": 538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 525,
											"end": 538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 428,
											"end": 446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 428,
											"end": 446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 428,
											"end": 446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 547,
											"end": 569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 547,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 547,
											"end": 569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 395,
											"end": 399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 626,
											"end": 641,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 626,
											"end": 641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 626,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 600,
											"end": 602,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 585,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 585,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 395,
											"end": 399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 669,
											"end": 1089,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 669,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 690,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 669,
											"end": 1089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 669,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 669,
											"end": 1089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 742,
											"end": 755,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 742,
											"end": 755,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 795,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 780,
											"end": 806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 768,
											"end": 807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 768,
											"end": 807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 851,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 851,
											"end": 862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 869,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 841,
											"end": 870,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 827,
											"end": 839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 827,
											"end": 839,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 827,
											"end": 839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 820,
											"end": 871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 911,
											"end": 922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 911,
											"end": 922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 905,
											"end": 923,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 891,
											"end": 903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 891,
											"end": 903,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 891,
											"end": 903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 884,
											"end": 924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 982,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 970,
											"end": 983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 970,
											"end": 983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 960,
											"end": 1006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 944,
											"end": 958,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1079,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1079,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1027,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1041,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 698,
											"end": 707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 669,
											"end": 1089,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 1089,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 669,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1109,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 199,
											"end": 1115,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1683,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 1510,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1627,
											"end": 1658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1659,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 1607,
											"end": 1677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1675,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1688,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1851,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1834,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1852,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 1816,
											"end": 1869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1869,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 1816,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 1947,
											"end": 1952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1962,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 1923,
											"end": 1980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1980,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 1923,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2108,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2091,
											"end": 2109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2110,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 2069,
											"end": 2128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2126,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 2069,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2147,
											"end": 2154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2206,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2209,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2210,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2219,
											"end": 2293,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2293,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2219,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2372,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2357,
											"end": 2375,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 2338,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 2382,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 2382,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 2382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 2382,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 2382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 2382,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 2382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 2382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2573,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2387,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2502,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 2467,
											"end": 2519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2519,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 2467,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 2538,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 3360,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2578,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2921,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2952,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3024,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3334,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 3052,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3073,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 3052,
											"end": 3334,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3163,
											"end": 3189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3190,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3244,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3252,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3224,
											"end": 3253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3324,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3324,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 3052,
											"end": 3334,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3843,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 3716,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3787,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3772,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3768,
											"end": 3788,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3805,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3798,
											"end": 3813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3836,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3829,
											"end": 3830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3837,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3848,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3944,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3967,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 3931,
											"end": 3967,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 3947,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 3947,
											"end": 3965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4195,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3978,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 4034,
											"end": 4166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4098,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4083,
											"end": 4086,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4079,
											"end": 4099,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4127,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4113,
											"end": 4128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4155,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4148,
											"end": 4149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4156,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4166,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 4034,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4180,
											"end": 4189,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4327,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4200,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4271,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4256,
											"end": 4259,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4252,
											"end": 4272,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4296,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4289,
											"end": 4290,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4320,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4313,
											"end": 4314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4321,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4691,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4779,
											"end": 4790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4779,
											"end": 4790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4779,
											"end": 4790,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4813,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4776,
											"end": 4813,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4793,
											"end": 4811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4824,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4906,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4937,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4960,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4961,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4962,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4915,
											"end": 4986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4966,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5124,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4997,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5068,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5053,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5049,
											"end": 5069,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5093,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5086,
											"end": 5087,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5079,
											"end": 5094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5117,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5118,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7833,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 7601,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 7685,
											"end": 7699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7685,
											"end": 7699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7685,
											"end": 7699,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7716,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7736,
											"end": 7760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7736,
											"end": 7760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7736,
											"end": 7760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7736,
											"end": 7760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7803,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7769,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 7769,
											"end": 7827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 7807,
											"end": 7825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7769,
											"end": 7827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8179,
											"end": 8386,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8179,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8251,
											"end": 8282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8251,
											"end": 8282,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8294,
											"end": 8326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 8291,
											"end": 8349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 8329,
											"end": 8347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8378,
											"end": 8379,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8365,
											"end": 8380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8365,
											"end": 8380,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8179,
											"end": 8386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8179,
											"end": 8386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10954,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10827,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10888,
											"end": 10898,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10883,
											"end": 10886,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10879,
											"end": 10899,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10869,
											"end": 10900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10919,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10916,
											"end": 10917,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10909,
											"end": 10924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 10947,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10940,
											"end": 10941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10933,
											"end": 10948,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Lottery.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BuyEggs(uint16,uint8,uint232,address)": "c9ea0299",
							"DestructContract()": "289f9019",
							"DevAddress()": "89a4c1a0",
							"DeveloperWithdrawal()": "f4e79b5b",
							"DistributeInvestmentIncome()": "12db1357",
							"GetInvestmentBalance(address)": "cf438305",
							"GetLatestLottery()": "d9498a83",
							"GetWinningRecord(uint256)": "2b5baca1",
							"InvestmentDeposit()": "49821332",
							"InvestmentWithdrawal(uint256)": "dd5f6f4d",
							"InvestorsProfit()": "ca6aae29",
							"OpenEggs()": "7da384fd",
							"RecentDividendTime()": "b1c617ff",
							"TotalInvestmentAmount()": "a659f4dc",
							"WithdrawReferralProfit()": "22629256"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"LotCount\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"mul\",\"type\":\"uint8\"},{\"internalType\":\"uint232\",\"name\":\"Lucknum\",\"type\":\"uint232\"},{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"BuyEggs\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DestructContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DevAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DeveloperWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DistributeInvestmentIncome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"GetInvestmentBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetLatestLottery\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"Lotterynum\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"mul\",\"type\":\"uint8\"}],\"internalType\":\"struct LotteryGame.OpenedLotInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"RecordCount\",\"type\":\"uint256\"}],\"name\":\"GetWinningRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"LotteryNum\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"mul\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct LotteryGame.Winninginfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"InvestmentDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"WithdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"InvestmentWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"InvestorsProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OpenEggs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RecentDividendTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TotalInvestmentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithdrawReferralProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lottery.sol\":\"LotteryGame\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lottery.sol\":{\"keccak256\":\"0x53d7ef7ad032b3c506038a6fa8f041c777f8c3645df5718ff64bba2d593e2d81\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5d6cd160f685e6c87699ffed7b1916780f0f32fb484fe9a79c80049875da9e3e\",\"dweb:/ipfs/QmXskmsYBqjfP9LfT6YLVjhtHvGfK35WzMpK8JK5RCBG7Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 56,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "DevAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 58,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "DevProfit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 61,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "investors",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 66,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "InvestorsBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(investorbalance)42_storage)"
							},
							{
								"astId": 68,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "TotalInvestmentAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 70,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "InvestorsProfit",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 72,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "RecentDividendTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 74,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "TotalReferralProfit",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 76,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "LastBuyEggTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 81,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "UsersInfo",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(userinfo)26_storage)"
							},
							{
								"astId": 85,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "referrals",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 89,
								"contract": "contracts/Lottery.sol:LotteryGame",
								"label": "WinningRecord",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_struct(Winninginfo)35_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Egginfo)8_storage)dyn_storage": {
								"base": "t_struct(Egginfo)8_storage",
								"encoding": "dynamic_array",
								"label": "struct LotteryGame.Egginfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(OpenedLotInfo)13_storage)dyn_storage": {
								"base": "t_struct(OpenedLotInfo)13_storage",
								"encoding": "dynamic_array",
								"label": "struct LotteryGame.OpenedLotInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Winninginfo)35_storage)dyn_storage": {
								"base": "t_struct(Winninginfo)35_storage",
								"encoding": "dynamic_array",
								"label": "struct LotteryGame.Winninginfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_struct(investorbalance)42_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LotteryGame.investorbalance)",
								"numberOfBytes": "32",
								"value": "t_struct(investorbalance)42_storage"
							},
							"t_mapping(t_address,t_struct(userinfo)26_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LotteryGame.userinfo)",
								"numberOfBytes": "32",
								"value": "t_struct(userinfo)26_storage"
							},
							"t_struct(Egginfo)8_storage": {
								"encoding": "inplace",
								"label": "struct LotteryGame.Egginfo",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "uid",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 5,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "mul",
										"offset": 0,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 7,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "blocknumber",
										"offset": 1,
										"slot": "1",
										"type": "t_uint248"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(OpenedLotInfo)13_storage": {
								"encoding": "inplace",
								"label": "struct LotteryGame.OpenedLotInfo",
								"members": [
									{
										"astId": 10,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "Lotterynum",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 12,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "mul",
										"offset": 4,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Winninginfo)35_storage": {
								"encoding": "inplace",
								"label": "struct LotteryGame.Winninginfo",
								"members": [
									{
										"astId": 28,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "LotteryNum",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 30,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "mul",
										"offset": 4,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 32,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 34,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "winner",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(investorbalance)42_storage": {
								"encoding": "inplace",
								"label": "struct LotteryGame.investorbalance",
								"members": [
									{
										"astId": 37,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 39,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "LastInvestTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 41,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "HasInvested",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(userinfo)26_storage": {
								"encoding": "inplace",
								"label": "struct LotteryGame.userinfo",
								"members": [
									{
										"astId": 17,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "eggsinfo",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_struct(Egginfo)8_storage)dyn_storage"
									},
									{
										"astId": 21,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "openedeggs",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(OpenedLotInfo)13_storage)dyn_storage"
									},
									{
										"astId": 23,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "ReferralProfit",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 25,
										"contract": "contracts/Lottery.sol:LotteryGame",
										"label": "actived",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint248": {
								"encoding": "inplace",
								"label": "uint248",
								"numberOfBytes": "31"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5159",
				"formattedMessage": "Warning: \"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.\n   --> contracts/Lottery.sol:561:9:\n    |\n561 |         selfdestruct(payable(DevAddress));\n    |         ^^^^^^^^^^^^\n\n",
				"message": "\"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.",
				"severity": "warning",
				"sourceLocation": {
					"end": 18456,
					"file": "contracts/Lottery.sol",
					"start": 18444
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Lottery.sol": {
				"ast": {
					"absolutePath": "contracts/Lottery.sol",
					"exportedSymbols": {
						"LotteryGame": [
							1444
						]
					},
					"id": 1445,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LotteryGame",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1444,
							"linearizedBaseContracts": [
								1444
							],
							"name": "LotteryGame",
							"nameLocation": "79:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "LotteryGame.Egginfo",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "uid",
											"nameLocation": "150:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "142:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "142:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "mul",
											"nameLocation": "206:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "200:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 4,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "200:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "blocknumber",
											"nameLocation": "237:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "229:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint248",
												"typeString": "uint248"
											},
											"typeName": {
												"id": 6,
												"name": "uint248",
												"nodeType": "ElementaryTypeName",
												"src": "229:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Egginfo",
									"nameLocation": "124:7:0",
									"nodeType": "StructDefinition",
									"scope": 1444,
									"src": "117:153:0",
									"visibility": "public"
								},
								{
									"canonicalName": "LotteryGame.OpenedLotInfo",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "Lotterynum",
											"nameLocation": "334:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "327:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 9,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "327:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "mul",
											"nameLocation": "376:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "370:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 11,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "370:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OpenedLotInfo",
									"nameLocation": "303:13:0",
									"nodeType": "StructDefinition",
									"scope": 1444,
									"src": "296:100:0",
									"visibility": "public"
								},
								{
									"canonicalName": "LotteryGame.userinfo",
									"id": 26,
									"members": [
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "eggsinfo",
											"nameLocation": "458:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 26,
											"src": "448:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage_ptr",
												"typeString": "struct LotteryGame.Egginfo[]"
											},
											"typeName": {
												"baseType": {
													"id": 15,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 14,
														"name": "Egginfo",
														"nameLocations": [
															"448:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "448:7:0"
													},
													"referencedDeclaration": 8,
													"src": "448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Egginfo_$8_storage_ptr",
														"typeString": "struct LotteryGame.Egginfo"
													}
												},
												"id": 16,
												"nodeType": "ArrayTypeName",
												"src": "448:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage_ptr",
													"typeString": "struct LotteryGame.Egginfo[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "openedeggs",
											"nameLocation": "514:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 26,
											"src": "498:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_OpenedLotInfo_$13_storage_$dyn_storage_ptr",
												"typeString": "struct LotteryGame.OpenedLotInfo[]"
											},
											"typeName": {
												"baseType": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "OpenedLotInfo",
														"nameLocations": [
															"498:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 13,
														"src": "498:13:0"
													},
													"referencedDeclaration": 13,
													"src": "498:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OpenedLotInfo_$13_storage_ptr",
														"typeString": "struct LotteryGame.OpenedLotInfo"
													}
												},
												"id": 20,
												"nodeType": "ArrayTypeName",
												"src": "498:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_OpenedLotInfo_$13_storage_$dyn_storage_ptr",
													"typeString": "struct LotteryGame.OpenedLotInfo[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "ReferralProfit",
											"nameLocation": "570:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 26,
											"src": "562:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "562:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "actived",
											"nameLocation": "621:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 26,
											"src": "616:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 24,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "616:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "userinfo",
									"nameLocation": "429:8:0",
									"nodeType": "StructDefinition",
									"scope": 1444,
									"src": "422:287:0",
									"visibility": "public"
								},
								{
									"canonicalName": "LotteryGame.Winninginfo",
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 28,
											"mutability": "mutable",
											"name": "LotteryNum",
											"nameLocation": "771:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "764:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 27,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "764:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "mul",
											"nameLocation": "813:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "807:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 29,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "807:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "844:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "836:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "836:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "winner",
											"nameLocation": "908:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "900:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 33,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "900:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Winninginfo",
									"nameLocation": "742:11:0",
									"nodeType": "StructDefinition",
									"scope": 1444,
									"src": "735:205:0",
									"visibility": "public"
								},
								{
									"canonicalName": "LotteryGame.investorbalance",
									"id": 42,
									"members": [
										{
											"constant": false,
											"id": 37,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "1010:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 42,
											"src": "1002:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 36,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1002:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 39,
											"mutability": "mutable",
											"name": "LastInvestTime",
											"nameLocation": "1045:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 42,
											"src": "1037:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 38,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1037:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"mutability": "mutable",
											"name": "HasInvested",
											"nameLocation": "1143:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 42,
											"src": "1138:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 40,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1138:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "investorbalance",
									"nameLocation": "976:15:0",
									"nodeType": "StructDefinition",
									"scope": 1444,
									"src": "969:247:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 45,
									"mutability": "constant",
									"name": "PerEggPrice",
									"nameLocation": "1273:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "1248:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 43,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1248:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3032",
										"id": 44,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1287:10:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20000000000000000_by_1",
											"typeString": "int_const 20000000000000000"
										},
										"value": "0.02"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 48,
									"mutability": "constant",
									"name": "Maxinum_Investment_pool",
									"nameLocation": "1412:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "1387:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1387:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1438:11:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 51,
									"mutability": "constant",
									"name": "Mininum_Investment_amount",
									"nameLocation": "1519:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "1494:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1494:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1547:7:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 54,
									"mutability": "constant",
									"name": "Maxinum_Investment_amount",
									"nameLocation": "1620:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "1595:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1595:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 53,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1648:10:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"value": "1000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "89a4c1a0",
									"id": 56,
									"mutability": "mutable",
									"name": "DevAddress",
									"nameLocation": "1714:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "1699:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 55,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1699:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 58,
									"mutability": "mutable",
									"name": "DevProfit",
									"nameLocation": "1823:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "1807:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1807:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 61,
									"mutability": "mutable",
									"name": "investors",
									"nameLocation": "1908:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "1890:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 59,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1890:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 60,
										"nodeType": "ArrayTypeName",
										"src": "1890:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 66,
									"mutability": "mutable",
									"name": "InvestorsBalance",
									"nameLocation": "2024:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "1980:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
										"typeString": "mapping(address => struct LotteryGame.investorbalance)"
									},
									"typeName": {
										"id": 65,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 62,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1988:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1980:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
											"typeString": "mapping(address => struct LotteryGame.investorbalance)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 64,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 63,
												"name": "investorbalance",
												"nameLocations": [
													"1999:15:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "1999:15:0"
											},
											"referencedDeclaration": 42,
											"src": "1999:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_investorbalance_$42_storage_ptr",
												"typeString": "struct LotteryGame.investorbalance"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a659f4dc",
									"id": 68,
									"mutability": "mutable",
									"name": "TotalInvestmentAmount",
									"nameLocation": "2094:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "2079:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 67,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2079:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ca6aae29",
									"id": 70,
									"mutability": "mutable",
									"name": "InvestorsProfit",
									"nameLocation": "2185:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "2170:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2170:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b1c617ff",
									"id": 72,
									"mutability": "mutable",
									"name": "RecentDividendTime",
									"nameLocation": "2254:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "2239:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 71,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2239:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 74,
									"mutability": "mutable",
									"name": "TotalReferralProfit",
									"nameLocation": "2422:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "2406:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 73,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2406:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 76,
									"mutability": "mutable",
									"name": "LastBuyEggTime",
									"nameLocation": "2571:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "2555:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2555:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 81,
									"mutability": "mutable",
									"name": "UsersInfo",
									"nameLocation": "2655:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "2618:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
										"typeString": "mapping(address => struct LotteryGame.userinfo)"
									},
									"typeName": {
										"id": 80,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 77,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2626:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2618:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
											"typeString": "mapping(address => struct LotteryGame.userinfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 79,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 78,
												"name": "userinfo",
												"nameLocations": [
													"2637:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 26,
												"src": "2637:8:0"
											},
											"referencedDeclaration": 26,
											"src": "2637:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_userinfo_$26_storage_ptr",
												"typeString": "struct LotteryGame.userinfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "referrals",
									"nameLocation": "2782:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "2746:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 84,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 82,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2754:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2746:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 83,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2765:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "WinningRecord",
									"nameLocation": "2909:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "2887:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage",
										"typeString": "struct LotteryGame.Winninginfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 87,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 86,
												"name": "Winninginfo",
												"nameLocations": [
													"2887:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 35,
												"src": "2887:11:0"
											},
											"referencedDeclaration": 35,
											"src": "2887:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Winninginfo_$35_storage_ptr",
												"typeString": "struct LotteryGame.Winninginfo"
											}
										},
										"id": 88,
										"nodeType": "ArrayTypeName",
										"src": "2887:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage_ptr",
											"typeString": "struct LotteryGame.Winninginfo[]"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2943:128:0",
										"statements": [
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "DevAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2953:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 93,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2966:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2970:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2966:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2953:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2953:23:0"
											},
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 97,
														"name": "RecentDividendTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "2986:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 98,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3013:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3007:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2986:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2986:36:0"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 102,
														"name": "LastBuyEggTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "3032:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 103,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3049:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3055:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3049:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3032:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "3032:32:0"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2940:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2943:0:0"
									},
									"scope": 1444,
									"src": "2929:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "3479:77:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3497:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 131,
														"src": "3489:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "3501:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 120,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "3505:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3489:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3523:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "3528:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3523:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 123,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "3516:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3516:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "3516:14:0"
											},
											{
												"expression": {
													"id": 129,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 118,
													"src": "3548:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 130,
												"nodeType": "Return",
												"src": "3541:8:0"
											}
										]
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SafeMathadd",
									"nameLocation": "3413:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3433:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3425:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3444:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3436:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:22:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:9:0"
									},
									"scope": 1444,
									"src": "3404:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3657:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 142,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "3674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "3679:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3674:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 141,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "3667:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3667:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "3667:14:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 147,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "3699:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 148,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "3703:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3699:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 140,
												"id": 150,
												"nodeType": "Return",
												"src": "3692:12:0"
											}
										]
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SafeMathsub",
									"nameLocation": "3591:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3611:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3603:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3622:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3614:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:22:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3648:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3647:9:0"
									},
									"scope": 1444,
									"src": "3582:129:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "3812:139:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 161,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "3826:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3831:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3826:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "3822:45:0",
												"trueBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "3834:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3855:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 160,
															"id": 165,
															"nodeType": "Return",
															"src": "3848:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3885:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "3877:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3877:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "3889:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3893:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3889:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3877:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 175,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "3913:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 176,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 154,
																			"src": "3917:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3913:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3912:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 179,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "3923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3912:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 174,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "3905:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3905:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "3905:20:0"
											},
											{
												"expression": {
													"id": 183,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "3943:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 184,
												"nodeType": "Return",
												"src": "3936:8:0"
											}
										]
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SafeMathmul",
									"nameLocation": "3746:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3766:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3758:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:22:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3803:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:9:0"
									},
									"scope": 1444,
									"src": "3737:214:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "4052:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "4069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4069:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 195,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "4062:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "4062:13:0"
											},
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4094:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "4086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 206,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 203,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "4098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 204,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "4102:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4086:17:0"
											},
											{
												"expression": {
													"id": 207,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 202,
													"src": "4121:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 194,
												"id": 208,
												"nodeType": "Return",
												"src": "4114:8:0"
											}
										]
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SafeMathdiv",
									"nameLocation": "3986:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4006:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3998:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4017:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "4009:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:22:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "4043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4042:9:0"
									},
									"scope": 1444,
									"src": "3977:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "4285:2259:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 222,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4303:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4307:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4303:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 224,
																"name": "PerEggPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "4316:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4303:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "427579206174206c65617374206f6e6520656767",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4329:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54b29162b0568d907215ea48697c2b664b38e09efead77ab1fb9655c40990fdc",
																"typeString": "literal_string \"Buy at least one egg\""
															},
															"value": "Buy at least one egg"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54b29162b0568d907215ea48697c2b664b38e09efead77ab1fb9655c40990fdc",
																"typeString": "literal_string \"Buy at least one egg\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4295:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "4295:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 230,
																	"name": "mul",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4370:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4377:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4370:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 233,
																	"name": "mul",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4382:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4389:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "4382:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4370:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c7469706c6573206265747765656e203120616e6420313030",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4394:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a19b8179a644aee2fcf1e2d1d7b79f205cf86aaa919d9253e13348420dfd1d6",
																"typeString": "literal_string \"Multiples between 1 and 100\""
															},
															"value": "Multiples between 1 and 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a19b8179a644aee2fcf1e2d1d7b79f205cf86aaa919d9253e13348420dfd1d6",
																"typeString": "literal_string \"Multiples between 1 and 100\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4362:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "4362:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 241,
																	"name": "LotCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "4455:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4467:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4455:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 244,
																	"name": "LotCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "4472:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4484:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "4472:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4455:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f662065676773206265747765656e203120616e6420313030",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4502:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_796ec44d103b15b3fdf61562e61512ddb58363cfe331cf2a64d682079171b8d1",
																"typeString": "literal_string \"Number of eggs between 1 and 100\""
															},
															"value": "Number of eggs between 1 and 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_796ec44d103b15b3fdf61562e61512ddb58363cfe331cf2a64d682079171b8d1",
																"typeString": "literal_string \"Number of eggs between 1 and 100\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4434:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4434:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "4434:112:0"
											},
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "AllLotteryCount",
														"nameLocation": "4564:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "4556:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4556:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4594:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4598:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4594:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 256,
															"name": "PerEggPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4605:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "SafeMathdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "4582:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4556:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 260,
																"name": "AllLotteryCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "4636:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 261,
																	"name": "LotCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "4655:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 262,
																	"name": "mul",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4666:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4655:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "4636:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642064617461",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4671:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_572f6114a447449bdc659a7f37166aa023d9be832c6677aa410d20615c0f2646",
																"typeString": "literal_string \"Invalid data\""
															},
															"value": "Invalid data"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_572f6114a447449bdc659a7f37166aa023d9be832c6677aa410d20615c0f2646",
																"typeString": "literal_string \"Invalid data\""
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4628:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "4628:58:0"
											},
											{
												"body": {
													"id": 312,
													"nodeType": "Block",
													"src": "4736:447:0",
													"statements": [
														{
															"assignments": [
																280
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 280,
																	"mutability": "mutable",
																	"name": "egginfo",
																	"nameLocation": "4765:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 312,
																	"src": "4750:22:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Egginfo_$8_memory_ptr",
																		"typeString": "struct LotteryGame.Egginfo"
																	},
																	"typeName": {
																		"id": 279,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 278,
																			"name": "Egginfo",
																			"nameLocations": [
																				"4750:7:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 8,
																			"src": "4750:7:0"
																		},
																		"referencedDeclaration": 8,
																		"src": "4750:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Egginfo_$8_storage_ptr",
																			"typeString": "struct LotteryGame.Egginfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 302,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 285,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "4873:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 286,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4879:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "4873:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 287,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "4914:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 288,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4920:8:0",
																						"memberName": "coinbase",
																						"nodeType": "MemberAccess",
																						"src": "4914:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					{
																						"expression": {
																							"id": 289,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "4954:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 290,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4958:6:0",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "4954:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 292,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "4990:9:0",
																						"subExpression": {
																							"id": 291,
																							"name": "Lucknum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 216,
																							"src": "4990:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint232",
																								"typeString": "uint232"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint232",
																							"typeString": "uint232"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint232",
																							"typeString": "uint232"
																						}
																					],
																					"expression": {
																						"id": 283,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4831:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 284,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4835:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4831:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4831:190:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 282,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "4800:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4800:239:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 295,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "5057:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 298,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "5086:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5092:6:0",
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"src": "5086:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5078:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint248_$",
																				"typeString": "type(uint248)"
																			},
																			"typeName": {
																				"id": 296,
																				"name": "uint248",
																				"nodeType": "ElementaryTypeName",
																				"src": "5078:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5078:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint248",
																			"typeString": "uint248"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_uint248",
																			"typeString": "uint248"
																		}
																	],
																	"id": 281,
																	"name": "Egginfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4775:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Egginfo_$8_storage_ptr_$",
																		"typeString": "type(struct LotteryGame.Egginfo storage pointer)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:338:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Egginfo_$8_memory_ptr",
																	"typeString": "struct LotteryGame.Egginfo memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4750:363:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "egginfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "5164:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Egginfo_$8_memory_ptr",
																			"typeString": "struct LotteryGame.Egginfo memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Egginfo_$8_memory_ptr",
																			"typeString": "struct LotteryGame.Egginfo memory"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 303,
																				"name": "UsersInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 81,
																				"src": "5128:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																					"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																				}
																			},
																			"id": 306,
																			"indexExpression": {
																				"expression": {
																					"id": 304,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5138:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5142:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5138:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5128:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_userinfo_$26_storage",
																				"typeString": "struct LotteryGame.userinfo storage ref"
																			}
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5150:8:0",
																		"memberName": "eggsinfo",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 17,
																		"src": "5128:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																			"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																		}
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5159:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "5128:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage_ptr_$_t_struct$_Egginfo_$8_storage_$returns$__$attached_to$_t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct LotteryGame.Egginfo storage ref[] storage pointer,struct LotteryGame.Egginfo storage ref)"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5128:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 311,
															"nodeType": "ExpressionStatement",
															"src": "5128:44:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 272,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "4717:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 273,
														"name": "LotCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "4721:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "4717:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 313,
												"initializationExpression": {
													"assignments": [
														269
													],
													"declarations": [
														{
															"constant": false,
															"id": 269,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4710:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 313,
															"src": "4702:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 268,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 271,
													"initialValue": {
														"hexValue": "30",
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4714:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4702:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4731:3:0",
														"subExpression": {
															"id": 275,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "4731:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 277,
													"nodeType": "ExpressionStatement",
													"src": "4731:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4697:486:0"
											},
											{
												"condition": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5197:30:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 314,
																"name": "UsersInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "5198:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																	"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																}
															},
															"id": 317,
															"indexExpression": {
																"expression": {
																	"id": 315,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5208:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5212:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5208:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5198:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userinfo_$26_storage",
																"typeString": "struct LotteryGame.userinfo storage ref"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5220:7:0",
														"memberName": "actived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "5198:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "5193:84:0",
												"trueBody": {
													"expression": {
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"baseExpression": {
																	"id": 320,
																	"name": "UsersInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "5241:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																		"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																	}
																},
																"id": 323,
																"indexExpression": {
																	"expression": {
																		"id": 321,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5251:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5255:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5251:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5241:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_userinfo_$26_storage",
																	"typeString": "struct LotteryGame.userinfo storage ref"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberLocation": "5263:7:0",
															"memberName": "actived",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "5241:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "74727565",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "5241:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 327,
													"nodeType": "ExpressionStatement",
													"src": "5241:36:0"
												}
											},
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "profit",
														"nameLocation": "5320:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "5312:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 339,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 333,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5353:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5357:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "5353:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "33",
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5364:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	}
																],
																"id": 332,
																"name": "SafeMathmul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5341:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5341:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5368:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"id": 331,
														"name": "SafeMathdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "5329:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5329:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5312:60:0"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "Refprofit",
														"nameLocation": "5415:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "5407:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 344,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5451:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5455:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "5451:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "34",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5462:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	}
																],
																"id": 343,
																"name": "SafeMathmul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5439:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5439:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5466:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"id": 342,
														"name": "SafeMathdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "5427:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5427:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5407:63:0"
											},
											{
												"expression": {
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 351,
														"name": "DevProfit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "5510:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 352,
														"name": "profit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5523:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5510:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "5510:19:0"
											},
											{
												"expression": {
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 355,
														"name": "InvestorsProfit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "5569:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 356,
														"name": "profit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5588:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5569:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "5569:25:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 359,
															"name": "referrals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "5654:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 362,
														"indexExpression": {
															"expression": {
																"id": 360,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5664:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5668:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5664:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5654:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5687:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5679:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 363,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5679:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5679:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5654:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "5650:888:0",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "5691:847:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 368,
																			"name": "ref",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "5856:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 369,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5863:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5867:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5863:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5856:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 372,
																			"name": "ref",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "5893:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 375,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5908:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5900:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 373,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5900:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5900:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5893:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5856:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "5930:30:0",
																	"subExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 379,
																				"name": "UsersInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 81,
																				"src": "5931:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																					"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																				}
																			},
																			"id": 382,
																			"indexExpression": {
																				"expression": {
																					"id": 380,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5941:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5945:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5941:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5931:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_userinfo_$26_storage",
																				"typeString": "struct LotteryGame.userinfo storage ref"
																			}
																		},
																		"id": 383,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5953:7:0",
																		"memberName": "actived",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 25,
																		"src": "5931:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5856:104:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 391,
															"nodeType": "IfStatement",
															"src": "5835:266:0",
															"trueBody": {
																"id": 390,
																"nodeType": "Block",
																"src": "5975:126:0",
																"statements": [
																	{
																		"expression": {
																			"id": 388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 386,
																				"name": "ref",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 218,
																				"src": "6070:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 387,
																				"name": "DevAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 56,
																				"src": "6076:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6070:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 389,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:16:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 392,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "6114:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 395,
																	"indexExpression": {
																		"expression": {
																			"id": 393,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6124:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6128:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6124:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6114:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 396,
																	"name": "ref",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "6138:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6114:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 398,
															"nodeType": "ExpressionStatement",
															"src": "6114:27:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 399,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "6240:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 402,
																	"indexExpression": {
																		"expression": {
																			"id": 400,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6250:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6254:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6250:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6240:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 403,
																	"name": "DevAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "6265:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6240:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 424,
																"nodeType": "Block",
																"src": "6338:143:0",
																"statements": [
																	{
																		"expression": {
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 410,
																						"name": "UsersInfo",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 81,
																						"src": "6356:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																							"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																						}
																					},
																					"id": 415,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 411,
																							"name": "referrals",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 85,
																							"src": "6366:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																								"typeString": "mapping(address => address)"
																							}
																						},
																						"id": 414,
																						"indexExpression": {
																							"expression": {
																								"id": 412,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "6376:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 413,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6380:6:0",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "6376:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6366:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6356:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_userinfo_$26_storage",
																						"typeString": "struct LotteryGame.userinfo storage ref"
																					}
																				},
																				"id": 416,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "6389:14:0",
																				"memberName": "ReferralProfit",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 23,
																				"src": "6356:47:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 417,
																				"name": "Refprofit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 341,
																				"src": "6407:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6356:60:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 419,
																		"nodeType": "ExpressionStatement",
																		"src": "6356:60:0"
																	},
																	{
																		"expression": {
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 420,
																				"name": "TotalReferralProfit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 74,
																				"src": "6434:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 421,
																				"name": "Refprofit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 341,
																				"src": "6457:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6434:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 423,
																		"nodeType": "ExpressionStatement",
																		"src": "6434:32:0"
																	}
																]
															},
															"id": 425,
															"nodeType": "IfStatement",
															"src": "6236:245:0",
															"trueBody": {
																"id": 409,
																"nodeType": "Block",
																"src": "6277:55:0",
																"statements": [
																	{
																		"expression": {
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 405,
																				"name": "DevProfit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "6295:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 406,
																				"name": "Refprofit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 341,
																				"src": "6308:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6295:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 408,
																		"nodeType": "ExpressionStatement",
																		"src": "6295:22:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 426,
																	"name": "LastBuyEggTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "6495:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 427,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6512:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6518:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6512:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6495:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 430,
															"nodeType": "ExpressionStatement",
															"src": "6495:32:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c9ea0299",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "BuyEggs",
									"nameLocation": "4164:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "LotCount",
												"nameLocation": "4188:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4181:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 211,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4181:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "mul",
												"nameLocation": "4212:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4206:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 213,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "Lucknum",
												"nameLocation": "4233:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4225:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 215,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "ref",
												"nameLocation": "4258:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4250:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:96:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4285:0:0"
									},
									"scope": 1444,
									"src": "4155:2389:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "6669:507:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6683:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3637313038383634",
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6696:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_67108864_by_1",
															"typeString": "int_const 67108864"
														},
														"value": "67108864"
													},
													"src": "6683:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "6679:35:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6713:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 440,
													"id": 445,
													"nodeType": "Return",
													"src": "6706:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6728:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3136373737323136",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6742:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16777216_by_1",
															"typeString": "int_const 16777216"
														},
														"value": "16777216"
													},
													"src": "6728:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 452,
												"nodeType": "IfStatement",
												"src": "6724:37:0",
												"trueBody": {
													"expression": {
														"hexValue": "3130",
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6759:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"functionReturnParameters": 440,
													"id": 451,
													"nodeType": "Return",
													"src": "6752:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 453,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6775:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "34313934333034",
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4194304_by_1",
															"typeString": "int_const 4194304"
														},
														"value": "4194304"
													},
													"src": "6775:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "6771:35:0",
												"trueBody": {
													"expression": {
														"hexValue": "39",
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6805:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"functionReturnParameters": 440,
													"id": 457,
													"nodeType": "Return",
													"src": "6798:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 459,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6820:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "31303438353736",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1048576_by_1",
															"typeString": "int_const 1048576"
														},
														"value": "1048576"
													},
													"src": "6820:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 464,
												"nodeType": "IfStatement",
												"src": "6816:35:0",
												"trueBody": {
													"expression": {
														"hexValue": "38",
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6850:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"functionReturnParameters": 440,
													"id": 463,
													"nodeType": "Return",
													"src": "6843:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 465,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6865:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "323632313434",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6879:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_262144_by_1",
															"typeString": "int_const 262144"
														},
														"value": "262144"
													},
													"src": "6865:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"nodeType": "IfStatement",
												"src": "6861:34:0",
												"trueBody": {
													"expression": {
														"hexValue": "37",
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6894:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"functionReturnParameters": 440,
													"id": 469,
													"nodeType": "Return",
													"src": "6887:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 471,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6909:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3635353336",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6923:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "65536"
													},
													"src": "6909:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "6905:33:0",
												"trueBody": {
													"expression": {
														"hexValue": "36",
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6937:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"functionReturnParameters": 440,
													"id": 475,
													"nodeType": "Return",
													"src": "6930:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 477,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6952:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3136333834",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6966:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16384_by_1",
															"typeString": "int_const 16384"
														},
														"value": "16384"
													},
													"src": "6952:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "6948:33:0",
												"trueBody": {
													"expression": {
														"hexValue": "35",
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6980:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"functionReturnParameters": 440,
													"id": 481,
													"nodeType": "Return",
													"src": "6973:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 483,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6995:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "34303936",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7009:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4096_by_1",
															"typeString": "int_const 4096"
														},
														"value": "4096"
													},
													"src": "6995:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 488,
												"nodeType": "IfStatement",
												"src": "6991:32:0",
												"trueBody": {
													"expression": {
														"hexValue": "34",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7022:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"functionReturnParameters": 440,
													"id": 487,
													"nodeType": "Return",
													"src": "7015:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 489,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "7037:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "31303234",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7051:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1024_by_1",
															"typeString": "int_const 1024"
														},
														"value": "1024"
													},
													"src": "7037:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 494,
												"nodeType": "IfStatement",
												"src": "7033:32:0",
												"trueBody": {
													"expression": {
														"hexValue": "33",
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7064:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"functionReturnParameters": 440,
													"id": 493,
													"nodeType": "Return",
													"src": "7057:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 495,
														"name": "LotteryNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "7079:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "323536",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7093:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "256"
													},
													"src": "7079:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "7137:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 440,
															"id": 502,
															"nodeType": "Return",
															"src": "7151:8:0"
														}
													]
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "7075:95:0",
												"trueBody": {
													"id": 500,
													"nodeType": "Block",
													"src": "7098:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "32",
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7119:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"functionReturnParameters": 440,
															"id": 499,
															"nodeType": "Return",
															"src": "7112:8:0"
														}
													]
												}
											}
										]
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetWinninggrade",
									"nameLocation": "6603:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "LotteryNum",
												"nameLocation": "6626:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "6619:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 435,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6618:19:0"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "6660:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:9:0"
									},
									"scope": 1444,
									"src": "6594:582:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "7334:497:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 513,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7348:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7363:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7348:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 518,
												"nodeType": "IfStatement",
												"src": "7344:30:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7373:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 512,
													"id": 517,
													"nodeType": "Return",
													"src": "7366:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 519,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7388:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3130",
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7403:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "7388:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 524,
												"nodeType": "IfStatement",
												"src": "7384:31:0",
												"trueBody": {
													"expression": {
														"hexValue": "35",
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7414:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"functionReturnParameters": 512,
													"id": 523,
													"nodeType": "Return",
													"src": "7407:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 525,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7429:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "39",
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7444:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"src": "7429:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 530,
												"nodeType": "IfStatement",
												"src": "7425:31:0",
												"trueBody": {
													"expression": {
														"hexValue": "3230",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7454:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"functionReturnParameters": 512,
													"id": 529,
													"nodeType": "Return",
													"src": "7447:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 531,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7470:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "38",
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7485:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "7470:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7466:31:0",
												"trueBody": {
													"expression": {
														"hexValue": "3830",
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7495:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"functionReturnParameters": 512,
													"id": 535,
													"nodeType": "Return",
													"src": "7488:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7511:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "37",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7526:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "7511:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "7507:32:0",
												"trueBody": {
													"expression": {
														"hexValue": "333230",
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7536:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_320_by_1",
															"typeString": "int_const 320"
														},
														"value": "320"
													},
													"functionReturnParameters": 512,
													"id": 541,
													"nodeType": "Return",
													"src": "7529:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 543,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7553:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "36",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7568:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "7553:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 548,
												"nodeType": "IfStatement",
												"src": "7549:33:0",
												"trueBody": {
													"expression": {
														"hexValue": "31323030",
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7578:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1200_by_1",
															"typeString": "int_const 1200"
														},
														"value": "1200"
													},
													"functionReturnParameters": 512,
													"id": 547,
													"nodeType": "Return",
													"src": "7571:11:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 549,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7596:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "35",
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7611:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "7596:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7592:33:0",
												"trueBody": {
													"expression": {
														"hexValue": "34383030",
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7621:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4800_by_1",
															"typeString": "int_const 4800"
														},
														"value": "4800"
													},
													"functionReturnParameters": 512,
													"id": 553,
													"nodeType": "Return",
													"src": "7614:11:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 555,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7639:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7654:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "7639:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "7635:34:0",
												"trueBody": {
													"expression": {
														"hexValue": "3230303030",
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7664:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20000_by_1",
															"typeString": "int_const 20000"
														},
														"value": "20000"
													},
													"functionReturnParameters": 512,
													"id": 559,
													"nodeType": "Return",
													"src": "7657:12:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 561,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7683:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7698:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "7683:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 566,
												"nodeType": "IfStatement",
												"src": "7679:35:0",
												"trueBody": {
													"expression": {
														"hexValue": "313030303030",
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7708:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000_by_1",
															"typeString": "int_const 100000"
														},
														"value": "100000"
													},
													"functionReturnParameters": 512,
													"id": 565,
													"nodeType": "Return",
													"src": "7701:13:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 567,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7728:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7743:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "7728:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 572,
												"nodeType": "IfStatement",
												"src": "7724:35:0",
												"trueBody": {
													"expression": {
														"hexValue": "353030303030",
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7753:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000_by_1",
															"typeString": "int_const 500000"
														},
														"value": "500000"
													},
													"functionReturnParameters": 512,
													"id": 571,
													"nodeType": "Return",
													"src": "7746:13:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "winninginfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "7773:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7773:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 578,
												"nodeType": "IfStatement",
												"src": "7769:36:0",
												"trueBody": {
													"expression": {
														"hexValue": "32303030303030",
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2000000_by_1",
															"typeString": "int_const 2000000"
														},
														"value": "2000000"
													},
													"functionReturnParameters": 512,
													"id": 577,
													"nodeType": "Return",
													"src": "7791:14:0"
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7823:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 512,
												"id": 580,
												"nodeType": "Return",
												"src": "7816:8:0"
											}
										]
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetWinningmultiple",
									"nameLocation": "7235:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "winninginfo",
												"nameLocation": "7262:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "7254:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7253:21:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "7321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7320:9:0"
									},
									"scope": 1444,
									"src": "7226:605:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "7886:3364:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 586,
																			"name": "UsersInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 81,
																			"src": "7974:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																				"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																			}
																		},
																		"id": 589,
																		"indexExpression": {
																			"expression": {
																				"id": 587,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7984:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7988:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "7984:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7974:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_userinfo_$26_storage",
																			"typeString": "struct LotteryGame.userinfo storage ref"
																		}
																	},
																	"id": 590,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7996:8:0",
																	"memberName": "eggsinfo",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 17,
																	"src": "7974:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																		"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8005:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7974:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7974:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520756e64726177206c6f7474657279207469636b657473",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8029:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbcb3e84b1ed43636cc9086833c8a3c1965d67405383b25f200d36ccaad3ebb0",
																"typeString": "literal_string \"You don't have undraw lottery tickets\""
															},
															"value": "You don't have undraw lottery tickets"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbcb3e84b1ed43636cc9086833c8a3c1965d67405383b25f200d36ccaad3ebb0",
																"typeString": "literal_string \"You don't have undraw lottery tickets\""
															}
														],
														"id": 585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7953:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7953:125:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "7953:125:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 598,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8226:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8232:6:0",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "8226:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 600,
																				"name": "UsersInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 81,
																				"src": "8257:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																					"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																				}
																			},
																			"id": 603,
																			"indexExpression": {
																				"expression": {
																					"id": 601,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "8267:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8271:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "8267:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8257:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_userinfo_$26_storage",
																				"typeString": "struct LotteryGame.userinfo storage ref"
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8300:8:0",
																		"memberName": "eggsinfo",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 17,
																		"src": "8257:51:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																			"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																		}
																	},
																	"id": 613,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"baseExpression": {
																						"id": 605,
																						"name": "UsersInfo",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 81,
																						"src": "8309:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																							"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																						}
																					},
																					"id": 608,
																					"indexExpression": {
																						"expression": {
																							"id": 606,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "8319:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 607,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8323:6:0",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "8319:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8309:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_userinfo_$26_storage",
																						"typeString": "struct LotteryGame.userinfo storage ref"
																					}
																				},
																				"id": 609,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8331:8:0",
																				"memberName": "eggsinfo",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "8309:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																					"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																				}
																			},
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8340:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "8309:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8349:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8309:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8257:94:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Egginfo_$8_storage",
																		"typeString": "struct LotteryGame.Egginfo storage ref"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8373:11:0",
																"memberName": "blocknumber",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "8257:127:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint248",
																	"typeString": "uint248"
																}
															},
															"src": "8226:158:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49742773206e6f742074696d65",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8398:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_650dc1fb357829359fbf0a956d09cf3e8980961a8a919494bff661cc2fdd3f85",
																"typeString": "literal_string \"It's not time\""
															},
															"value": "It's not time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_650dc1fb357829359fbf0a956d09cf3e8980961a8a919494bff661cc2fdd3f85",
																"typeString": "literal_string \"It's not time\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8205:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8205:218:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "8205:218:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 619,
																	"name": "UsersInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "8513:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																		"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																	}
																},
																"id": 622,
																"indexExpression": {
																	"expression": {
																		"id": 620,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8523:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8527:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8523:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8513:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_userinfo_$26_storage",
																	"typeString": "struct LotteryGame.userinfo storage ref"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8535:10:0",
															"memberName": "openedeggs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "8513:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_OpenedLotInfo_$13_storage_$dyn_storage",
																"typeString": "struct LotteryGame.OpenedLotInfo storage ref[] storage ref"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8546:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8513:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8555:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8513:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 634,
												"nodeType": "IfStatement",
												"src": "8509:100:0",
												"trueBody": {
													"expression": {
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "delete",
														"prefix": true,
														"src": "8570:39:0",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 627,
																	"name": "UsersInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "8577:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																		"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																	}
																},
																"id": 630,
																"indexExpression": {
																	"expression": {
																		"id": 628,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8587:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8591:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8587:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8577:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_userinfo_$26_storage",
																	"typeString": "struct LotteryGame.userinfo storage ref"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberLocation": "8599:10:0",
															"memberName": "openedeggs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "8577:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_OpenedLotInfo_$13_storage_$dyn_storage",
																"typeString": "struct LotteryGame.OpenedLotInfo storage ref[] storage ref"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 633,
													"nodeType": "ExpressionStatement",
													"src": "8570:39:0"
												}
											},
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "WinningAmount",
														"nameLocation": "8661:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "8653:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"nodeType": "VariableDeclarationStatement",
												"src": "8653:21:0"
											},
											{
												"body": {
													"id": 786,
													"nodeType": "Block",
													"src": "8753:1622:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 656,
																									"name": "UsersInfo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 81,
																									"src": "8893:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																										"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																									}
																								},
																								"id": 659,
																								"indexExpression": {
																									"expression": {
																										"id": 657,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "8903:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 658,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "8907:6:0",
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "8903:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8893:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_userinfo_$26_storage",
																									"typeString": "struct LotteryGame.userinfo storage ref"
																								}
																							},
																							"id": 660,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8915:8:0",
																							"memberName": "eggsinfo",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 17,
																							"src": "8893:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																								"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																							}
																						},
																						"id": 662,
																						"indexExpression": {
																							"id": 661,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 639,
																							"src": "8924:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8893:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Egginfo_$8_storage",
																							"typeString": "struct LotteryGame.Egginfo storage ref"
																						}
																					},
																					"id": 663,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8927:11:0",
																					"memberName": "blocknumber",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 7,
																					"src": "8893:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint248",
																						"typeString": "uint248"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint248",
																						"typeString": "uint248"
																					}
																				],
																				"id": 655,
																				"name": "blockhash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967291,
																				"src": "8883:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (uint256) view returns (bytes32)"
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8883:56:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8854:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 653,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8854:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8854:103:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8961:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8854:108:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 669,
															"nodeType": "IfStatement",
															"src": "8833:152:0",
															"trueBody": {
																"id": 668,
																"nodeType": "Continue",
																"src": "8977:8:0"
															}
														},
														{
															"assignments": [
																671
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 671,
																	"mutability": "mutable",
																	"name": "LotteryNum",
																	"nameLocation": "9041:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "9034:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 670,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "9034:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 701,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"expression": {
																											"baseExpression": {
																												"id": 679,
																												"name": "UsersInfo",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 81,
																												"src": "9187:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																													"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																												}
																											},
																											"id": 682,
																											"indexExpression": {
																												"expression": {
																													"id": 680,
																													"name": "msg",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967281,
																													"src": "9197:3:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_magic_message",
																														"typeString": "msg"
																													}
																												},
																												"id": 681,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "9201:6:0",
																												"memberName": "sender",
																												"nodeType": "MemberAccess",
																												"src": "9197:10:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "9187:21:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_userinfo_$26_storage",
																												"typeString": "struct LotteryGame.userinfo storage ref"
																											}
																										},
																										"id": 683,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "9209:8:0",
																										"memberName": "eggsinfo",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 17,
																										"src": "9187:30:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																											"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																										}
																									},
																									"id": 685,
																									"indexExpression": {
																										"id": 684,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 639,
																										"src": "9218:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "9187:33:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Egginfo_$8_storage",
																										"typeString": "struct LotteryGame.Egginfo storage ref"
																									}
																								},
																								"id": 686,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "9221:3:0",
																								"memberName": "uid",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3,
																								"src": "9187:37:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"baseExpression": {
																														"id": 688,
																														"name": "UsersInfo",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 81,
																														"src": "9297:9:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																															"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																														}
																													},
																													"id": 691,
																													"indexExpression": {
																														"expression": {
																															"id": 689,
																															"name": "msg",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 4294967281,
																															"src": "9307:3:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_magic_message",
																																"typeString": "msg"
																															}
																														},
																														"id": 690,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "9311:6:0",
																														"memberName": "sender",
																														"nodeType": "MemberAccess",
																														"src": "9307:10:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "9297:21:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_userinfo_$26_storage",
																														"typeString": "struct LotteryGame.userinfo storage ref"
																													}
																												},
																												"id": 692,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "9319:8:0",
																												"memberName": "eggsinfo",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 17,
																												"src": "9297:30:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																													"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																												}
																											},
																											"id": 694,
																											"indexExpression": {
																												"id": 693,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 639,
																												"src": "9328:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "9297:33:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Egginfo_$8_storage",
																												"typeString": "struct LotteryGame.Egginfo storage ref"
																											}
																										},
																										"id": 695,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "9331:11:0",
																										"memberName": "blocknumber",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 7,
																										"src": "9297:45:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint248",
																											"typeString": "uint248"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint248",
																											"typeString": "uint248"
																										}
																									],
																									"id": 687,
																									"name": "blockhash",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967291,
																									"src": "9254:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																										"typeString": "function (uint256) view returns (bytes32)"
																									}
																								},
																								"id": 696,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9254:118:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"expression": {
																								"id": 677,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "9141:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 678,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "9145:12:0",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "9141:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 697,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9141:257:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 676,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "9106:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9106:314:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9078:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes4_$",
																				"typeString": "type(bytes4)"
																			},
																			"typeName": {
																				"id": 674,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "9078:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9078:360:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9054:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 672,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "9054:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9054:398:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9034:418:0"
														},
														{
															"assignments": [
																703
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 703,
																	"mutability": "mutable",
																	"name": "Winningrade",
																	"nameLocation": "9503:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "9495:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 702,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9495:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 707,
															"initialValue": {
																"arguments": [
																	{
																		"id": 705,
																		"name": "LotteryNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "9533:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 704,
																	"name": "GetWinninggrade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "9517:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_uint256_$",
																		"typeString": "function (uint32) pure returns (uint256)"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9517:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9495:49:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 708,
																	"name": "Winningrade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "9597:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9611:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9597:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 761,
															"nodeType": "IfStatement",
															"src": "9593:541:0",
															"trueBody": {
																"id": 760,
																"nodeType": "Block",
																"src": "9614:520:0",
																"statements": [
																	{
																		"assignments": [
																			712
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 712,
																				"mutability": "mutable",
																				"name": "WinningMoney",
																				"nameLocation": "9640:12:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 760,
																				"src": "9632:20:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 711,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9632:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 727,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 714,
																							"name": "Winningrade",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 703,
																							"src": "9674:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 713,
																						"name": "GetWinningmultiple",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 582,
																						"src": "9655:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (uint256)"
																						}
																					},
																					"id": 715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9655:31:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 716,
																									"name": "UsersInfo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 81,
																									"src": "9709:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																										"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																									}
																								},
																								"id": 719,
																								"indexExpression": {
																									"expression": {
																										"id": 717,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "9719:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 718,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "9723:6:0",
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "9719:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9709:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_userinfo_$26_storage",
																									"typeString": "struct LotteryGame.userinfo storage ref"
																								}
																							},
																							"id": 720,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9731:8:0",
																							"memberName": "eggsinfo",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 17,
																							"src": "9709:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																								"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																							}
																						},
																						"id": 722,
																						"indexExpression": {
																							"id": 721,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 639,
																							"src": "9740:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9709:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Egginfo_$8_storage",
																							"typeString": "struct LotteryGame.Egginfo storage ref"
																						}
																					},
																					"id": 723,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9743:3:0",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 5,
																					"src": "9709:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "9655:91:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 725,
																				"name": "PerEggPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 45,
																				"src": "9769:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9655:125:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9632:148:0"
																	},
																	{
																		"expression": {
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 728,
																				"name": "WinningAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "9799:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 729,
																				"name": "WinningMoney",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "9816:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9799:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 731,
																		"nodeType": "ExpressionStatement",
																		"src": "9799:29:0"
																	},
																	{
																		"assignments": [
																			734
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 734,
																				"mutability": "mutable",
																				"name": "winning",
																				"nameLocation": "9866:7:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 760,
																				"src": "9847:26:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Winninginfo_$35_memory_ptr",
																					"typeString": "struct LotteryGame.Winninginfo"
																				},
																				"typeName": {
																					"id": 733,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 732,
																						"name": "Winninginfo",
																						"nameLocations": [
																							"9847:11:0"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 35,
																						"src": "9847:11:0"
																					},
																					"referencedDeclaration": 35,
																					"src": "9847:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Winninginfo_$35_storage_ptr",
																						"typeString": "struct LotteryGame.Winninginfo"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 753,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 736,
																					"name": "LotteryNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 671,
																					"src": "9909:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 737,
																									"name": "UsersInfo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 81,
																									"src": "9941:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																										"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																									}
																								},
																								"id": 740,
																								"indexExpression": {
																									"expression": {
																										"id": 738,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "9951:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 739,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "9955:6:0",
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "9951:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9941:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_userinfo_$26_storage",
																									"typeString": "struct LotteryGame.userinfo storage ref"
																								}
																							},
																							"id": 741,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9963:8:0",
																							"memberName": "eggsinfo",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 17,
																							"src": "9941:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																								"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																							}
																						},
																						"id": 743,
																						"indexExpression": {
																							"id": 742,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 639,
																							"src": "9972:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9941:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Egginfo_$8_storage",
																							"typeString": "struct LotteryGame.Egginfo storage ref"
																						}
																					},
																					"id": 744,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9975:3:0",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 5,
																					"src": "9941:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 747,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "10007:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 748,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10013:9:0",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "10007:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 746,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "10000:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint40_$",
																							"typeString": "type(uint40)"
																						},
																						"typeName": {
																							"id": 745,
																							"name": "uint40",
																							"nodeType": "ElementaryTypeName",
																							"src": "10000:6:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 749,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10000:23:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint40",
																						"typeString": "uint40"
																					}
																				},
																				{
																					"expression": {
																						"id": 750,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "10045:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10049:6:0",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "10045:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					{
																						"typeIdentifier": "t_uint40",
																						"typeString": "uint40"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 735,
																				"name": "Winninginfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 35,
																				"src": "9876:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_struct$_Winninginfo_$35_storage_ptr_$",
																					"typeString": "type(struct LotteryGame.Winninginfo storage pointer)"
																				}
																			},
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "structConstructorCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9876:197:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Winninginfo_$35_memory_ptr",
																				"typeString": "struct LotteryGame.Winninginfo memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9847:226:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 757,
																					"name": "winning",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "10111:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Winninginfo_$35_memory_ptr",
																						"typeString": "struct LotteryGame.Winninginfo memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Winninginfo_$35_memory_ptr",
																						"typeString": "struct LotteryGame.Winninginfo memory"
																					}
																				],
																				"expression": {
																					"id": 754,
																					"name": "WinningRecord",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 89,
																					"src": "10092:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage",
																						"typeString": "struct LotteryGame.Winninginfo storage ref[] storage ref"
																					}
																				},
																				"id": 756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10106:4:0",
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "10092:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage_ptr_$_t_struct$_Winninginfo_$35_storage_$returns$__$attached_to$_t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage_ptr_$",
																					"typeString": "function (struct LotteryGame.Winninginfo storage ref[] storage pointer,struct LotteryGame.Winninginfo storage ref)"
																				}
																			},
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10092:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 759,
																		"nodeType": "ExpressionStatement",
																		"src": "10092:27:0"
																	}
																]
															}
														},
														{
															"assignments": [
																764
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 764,
																	"mutability": "mutable",
																	"name": "OpenedLotterys",
																	"nameLocation": "10169:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "10148:35:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OpenedLotInfo_$13_memory_ptr",
																		"typeString": "struct LotteryGame.OpenedLotInfo"
																	},
																	"typeName": {
																		"id": 763,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 762,
																			"name": "OpenedLotInfo",
																			"nameLocations": [
																				"10148:13:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 13,
																			"src": "10148:13:0"
																		},
																		"referencedDeclaration": 13,
																		"src": "10148:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_OpenedLotInfo_$13_storage_ptr",
																			"typeString": "struct LotteryGame.OpenedLotInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 776,
															"initialValue": {
																"arguments": [
																	{
																		"id": 766,
																		"name": "LotteryNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "10217:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 767,
																						"name": "UsersInfo",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 81,
																						"src": "10245:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																							"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																						}
																					},
																					"id": 770,
																					"indexExpression": {
																						"expression": {
																							"id": 768,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "10255:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 769,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10259:6:0",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "10255:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10245:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_userinfo_$26_storage",
																						"typeString": "struct LotteryGame.userinfo storage ref"
																					}
																				},
																				"id": 771,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10267:8:0",
																				"memberName": "eggsinfo",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "10245:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																					"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
																				}
																			},
																			"id": 773,
																			"indexExpression": {
																				"id": 772,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 639,
																				"src": "10276:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10245:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Egginfo_$8_storage",
																				"typeString": "struct LotteryGame.Egginfo storage ref"
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10279:3:0",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "10245:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 765,
																	"name": "OpenedLotInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "10186:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_OpenedLotInfo_$13_storage_ptr_$",
																		"typeString": "type(struct LotteryGame.OpenedLotInfo storage pointer)"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10186:110:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OpenedLotInfo_$13_memory_ptr",
																	"typeString": "struct LotteryGame.OpenedLotInfo memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10148:148:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 783,
																		"name": "OpenedLotterys",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "10349:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_OpenedLotInfo_$13_memory_ptr",
																			"typeString": "struct LotteryGame.OpenedLotInfo memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_OpenedLotInfo_$13_memory_ptr",
																			"typeString": "struct LotteryGame.OpenedLotInfo memory"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 777,
																				"name": "UsersInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 81,
																				"src": "10311:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																					"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																				}
																			},
																			"id": 780,
																			"indexExpression": {
																				"expression": {
																					"id": 778,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "10321:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10325:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "10321:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10311:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_userinfo_$26_storage",
																				"typeString": "struct LotteryGame.userinfo storage ref"
																			}
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10333:10:0",
																		"memberName": "openedeggs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 21,
																		"src": "10311:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_OpenedLotInfo_$13_storage_$dyn_storage",
																			"typeString": "struct LotteryGame.OpenedLotInfo storage ref[] storage ref"
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10344:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "10311:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_OpenedLotInfo_$13_storage_$dyn_storage_ptr_$_t_struct$_OpenedLotInfo_$13_storage_$returns$__$attached_to$_t_array$_t_struct$_OpenedLotInfo_$13_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct LotteryGame.OpenedLotInfo storage ref[] storage pointer,struct LotteryGame.OpenedLotInfo storage ref)"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10311:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 785,
															"nodeType": "ExpressionStatement",
															"src": "10311:53:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 642,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "8705:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 643,
																	"name": "UsersInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "8709:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																		"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																	}
																},
																"id": 646,
																"indexExpression": {
																	"expression": {
																		"id": 644,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8719:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8723:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8719:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8709:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_userinfo_$26_storage",
																	"typeString": "struct LotteryGame.userinfo storage ref"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8731:8:0",
															"memberName": "eggsinfo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "8709:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
																"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8740:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8709:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8705:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"initializationExpression": {
													"assignments": [
														639
													],
													"declarations": [
														{
															"constant": false,
															"id": 639,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8698:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 787,
															"src": "8690:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 638,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 641,
													"initialValue": {
														"hexValue": "30",
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8702:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8690:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8748:3:0",
														"subExpression": {
															"id": 650,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "8748:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 652,
													"nodeType": "ExpressionStatement",
													"src": "8748:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8685:1690:0"
											},
											{
												"expression": {
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10445:37:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 788,
																"name": "UsersInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "10452:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																	"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																}
															},
															"id": 791,
															"indexExpression": {
																"expression": {
																	"id": 789,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10462:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10466:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10462:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10452:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userinfo_$26_storage",
																"typeString": "struct LotteryGame.userinfo storage ref"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10474:8:0",
														"memberName": "eggsinfo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "10452:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Egginfo_$8_storage_$dyn_storage",
															"typeString": "struct LotteryGame.Egginfo storage ref[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "10445:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 795,
														"name": "WinningAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "10554:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10554:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "10550:694:0",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "10573:671:0",
													"statements": [
														{
															"assignments": [
																799
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 799,
																	"mutability": "mutable",
																	"name": "MaxWinningAmount",
																	"nameLocation": "10595:16:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 859,
																	"src": "10587:24:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 798,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10587:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 819,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"arguments": [
																								{
																									"id": 805,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967268,
																									"src": "10721:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_LotteryGame_$1444",
																										"typeString": "contract LotteryGame"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_LotteryGame_$1444",
																										"typeString": "contract LotteryGame"
																									}
																								],
																								"id": 804,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "10713:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 803,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "10713:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 806,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "10713:13:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"id": 807,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10727:7:0",
																						"memberName": "balance",
																						"nodeType": "MemberAccess",
																						"src": "10713:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 812,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 810,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 808,
																										"name": "InvestorsProfit",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 70,
																										"src": "10761:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"id": 809,
																										"name": "TotalReferralProfit",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 74,
																										"src": "10779:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "10761:37:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"id": 811,
																									"name": "DevProfit",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 58,
																									"src": "10801:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "10761:49:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 813,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "10760:51:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 802,
																					"name": "SafeMathsub",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 152,
																					"src": "10676:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10676:157:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "3730",
																				"id": 815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_70_by_1",
																					"typeString": "int_const 70"
																				},
																				"value": "70"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_70_by_1",
																					"typeString": "int_const 70"
																				}
																			],
																			"id": 801,
																			"name": "SafeMathmul",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "10643:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10643:232:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "313030",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10893:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"id": 800,
																	"name": "SafeMathdiv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "10614:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10614:296:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10587:323:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 820,
																	"name": "WinningAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "10929:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 821,
																	"name": "MaxWinningAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "10945:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10929:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 827,
															"nodeType": "IfStatement",
															"src": "10925:86:0",
															"trueBody": {
																"expression": {
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 823,
																		"name": "WinningAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "10979:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 824,
																		"name": "MaxWinningAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "10995:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10979:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 826,
																"nodeType": "ExpressionStatement",
																"src": "10979:32:0"
															}
														},
														{
															"assignments": [
																829
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 829,
																	"mutability": "mutable",
																	"name": "profit",
																	"nameLocation": "11034:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 859,
																	"src": "11026:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11026:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 837,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 832,
																				"name": "WinningAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "11067:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "35",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11082:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				}
																			],
																			"id": 831,
																			"name": "SafeMathmul",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "11055:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11055:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "313030",
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11086:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"id": 830,
																	"name": "SafeMathdiv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "11043:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11043:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11026:64:0"
														},
														{
															"expression": {
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 838,
																	"name": "InvestorsProfit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "11104:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 839,
																	"name": "profit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "11123:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11104:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 841,
															"nodeType": "ExpressionStatement",
															"src": "11104:25:0"
														},
														{
															"expression": {
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 842,
																	"name": "DevProfit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "11143:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 843,
																	"name": "profit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "11156:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11143:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "11143:19:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 852,
																			"name": "WinningAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "11206:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 853,
																				"name": "profit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "11222:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11231:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "11222:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11206:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 848,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "11185:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11189:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "11185:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11177:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 846,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11177:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11177:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11197:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "11177:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11177:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "11177:56:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7da384fd",
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "OpenEggs",
									"nameLocation": "7866:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7874:2:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7886:0:0"
									},
									"scope": 1444,
									"src": "7857:3393:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "11325:947:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 866,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11404:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11408:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "11404:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 868,
																	"name": "Mininum_Investment_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "11417:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11404:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 870,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11462:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11466:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "11462:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 872,
																	"name": "Maxinum_Investment_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "11475:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11462:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11404:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e766573746d656e7420616d6f756e7420626574657765656e203120616e642031303030",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11514:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af0d970ba88c4f8a655dbf7f723bd7f850579d1890238dc88401ed4220f9f6af",
																"typeString": "literal_string \"Investment amount beteween 1 and 1000\""
															},
															"value": "Investment amount beteween 1 and 1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af0d970ba88c4f8a655dbf7f723bd7f850579d1890238dc88401ed4220f9f6af",
																"typeString": "literal_string \"Investment amount beteween 1 and 1000\""
															}
														],
														"id": 865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11383:180:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "11383:180:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 882,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "11662:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_LotteryGame_$1444",
																						"typeString": "contract LotteryGame"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_LotteryGame_$1444",
																						"typeString": "contract LotteryGame"
																					}
																				],
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11654:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 880,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "11654:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11654:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11668:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "11654:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 887,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 885,
																						"name": "InvestorsProfit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 70,
																						"src": "11694:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 886,
																						"name": "TotalReferralProfit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 74,
																						"src": "11712:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11694:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 888,
																					"name": "DevProfit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 58,
																					"src": "11734:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11694:49:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 890,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11693:51:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 879,
																	"name": "SafeMathsub",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "11625:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11625:133:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 892,
																"name": "Maxinum_Investment_pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "11762:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11625:160:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 878,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11604:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11604:191:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "11604:191:0"
											},
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 896,
														"name": "TotalInvestmentAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "11839:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 897,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11864:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11868:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "11864:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11839:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "11839:34:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 901,
																"name": "InvestorsBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "11925:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																	"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																}
															},
															"id": 904,
															"indexExpression": {
																"expression": {
																	"id": 902,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11942:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11946:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "11942:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11925:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																"typeString": "struct LotteryGame.investorbalance storage ref"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11954:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "11925:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 906,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11965:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11969:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "11965:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11925:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "11925:49:0"
											},
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 910,
																"name": "InvestorsBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "11984:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																	"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																}
															},
															"id": 913,
															"indexExpression": {
																"expression": {
																	"id": 911,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12001:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12005:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12001:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11984:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																"typeString": "struct LotteryGame.investorbalance storage ref"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12013:14:0",
														"memberName": "LastInvestTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "11984:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 915,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12030:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12036:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12030:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11984:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "11984:61:0"
											},
											{
												"condition": {
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12111:41:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 919,
																"name": "InvestorsBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "12112:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																	"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																}
															},
															"id": 922,
															"indexExpression": {
																"expression": {
																	"id": 920,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12129:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12133:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12129:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12112:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																"typeString": "struct LotteryGame.investorbalance storage ref"
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12141:11:0",
														"memberName": "HasInvested",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "12112:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "IfStatement",
												"src": "12107:159:0",
												"trueBody": {
													"id": 940,
													"nodeType": "Block",
													"src": "12154:112:0",
													"statements": [
														{
															"expression": {
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 925,
																			"name": "InvestorsBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "12168:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																				"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																			}
																		},
																		"id": 928,
																		"indexExpression": {
																			"expression": {
																				"id": 926,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "12185:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12189:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "12185:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12168:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																			"typeString": "struct LotteryGame.investorbalance storage ref"
																		}
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "12197:11:0",
																	"memberName": "HasInvested",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 41,
																	"src": "12168:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12211:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "12168:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "12168:47:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 936,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12244:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12248:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12244:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 933,
																		"name": "investors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12229:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12239:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "12229:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12229:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 939,
															"nodeType": "ExpressionStatement",
															"src": "12229:26:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "49821332",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "InvestmentDeposit",
									"nameLocation": "11288:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11305:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11325:0:0"
									},
									"scope": 1444,
									"src": "11279:993:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "12366:1319:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "WithdrawalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "12457:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 950,
																"name": "Mininum_Investment_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "12477:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12457:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d20696e766573746d656e7420616d6f756e742069732072657175697265642c6974277320736d616c6c6572207468616e20746865206d696e696d756d206465706f736974",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12516:77:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6479ade4a0aff1580acde9c2dc167ca6615d7731639b04ad204344bff2291130",
																"typeString": "literal_string \"Minimum investment amount is required,it's smaller than the minimum deposit\""
															},
															"value": "Minimum investment amount is required,it's smaller than the minimum deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6479ade4a0aff1580acde9c2dc167ca6615d7731639b04ad204344bff2291130",
																"typeString": "literal_string \"Minimum investment amount is required,it's smaller than the minimum deposit\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12436:167:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "12436:167:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 956,
																"name": "WithdrawalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "12671:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 957,
																		"name": "InvestorsBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "12691:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																			"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																		}
																	},
																	"id": 960,
																	"indexExpression": {
																		"expression": {
																			"id": 958,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12708:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12712:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12708:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12691:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																		"typeString": "struct LotteryGame.investorbalance storage ref"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12720:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 37,
																"src": "12691:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12671:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682066756e6420746f20776974686472617721",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12741:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd9de04a809dc075d2c458d0a7216588503c49615166cd6954a88b6dfcfc3828",
																"typeString": "literal_string \"Not enough fund to withdraw!\""
															},
															"value": "Not enough fund to withdraw!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd9de04a809dc075d2c458d0a7216588503c49615166cd6954a88b6dfcfc3828",
																"typeString": "literal_string \"Not enough fund to withdraw!\""
															}
														],
														"id": 955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12650:131:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "12650:131:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 967,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "12920:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12926:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "12920:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 969,
																			"name": "InvestorsBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "12955:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																				"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																			}
																		},
																		"id": 972,
																		"indexExpression": {
																			"expression": {
																				"id": 970,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "12972:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12976:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "12972:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12955:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																			"typeString": "struct LotteryGame.investorbalance storage ref"
																		}
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12984:14:0",
																	"memberName": "LastInvestTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 39,
																	"src": "12955:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13001:7:0",
																	"subdenomination": "weeks",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	},
																	"value": "1"
																},
																"src": "12955:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12920:88:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207769746864726177206166746572206f6e65207765656b21",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13022:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82d6e6a7babd874cf9cbb174b435a0b95c477b5446fd9032ee38541b30847d96",
																"typeString": "literal_string \"Cannot withdraw after one week!\""
															},
															"value": "Cannot withdraw after one week!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_82d6e6a7babd874cf9cbb174b435a0b95c477b5446fd9032ee38541b30847d96",
																"typeString": "literal_string \"Cannot withdraw after one week!\""
															}
														],
														"id": 966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12899:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "12899:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 984,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "13200:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_LotteryGame_$1444",
																						"typeString": "contract LotteryGame"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_LotteryGame_$1444",
																						"typeString": "contract LotteryGame"
																					}
																				],
																				"id": 983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13192:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 982,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "13192:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13192:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13206:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "13192:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 989,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 987,
																						"name": "InvestorsProfit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 70,
																						"src": "13232:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 988,
																						"name": "TotalReferralProfit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 74,
																						"src": "13250:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13232:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 990,
																					"name": "DevProfit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 58,
																					"src": "13272:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13232:49:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 992,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "13231:51:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 981,
																	"name": "SafeMathsub",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "13163:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13163:133:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 994,
																"name": "WithdrawalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "13300:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13163:153:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6420746f20776974686472617721",
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13330:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b73d4bc61b22a5c83559e6d4843917f717089f0e08f7f6a74ea323a9597ff807",
																"typeString": "literal_string \"Insufficient fund to withdraw!\""
															},
															"value": "Insufficient fund to withdraw!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b73d4bc61b22a5c83559e6d4843917f717089f0e08f7f6a74ea323a9597ff807",
																"typeString": "literal_string \"Insufficient fund to withdraw!\""
															}
														],
														"id": 980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13142:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13142:230:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "13142:230:0"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 999,
																"name": "InvestorsBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "13443:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																	"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																}
															},
															"id": 1002,
															"indexExpression": {
																"expression": {
																	"id": 1000,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13460:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13464:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13460:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13443:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																"typeString": "struct LotteryGame.investorbalance storage ref"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13472:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "13443:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1004,
														"name": "WithdrawalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "13483:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13443:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "13443:56:0"
											},
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1007,
														"name": "TotalInvestmentAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "13542:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1008,
														"name": "WithdrawalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "13567:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13542:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "13542:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "WithdrawalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "13661:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1013,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "13640:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13644:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "13640:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13632:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13632:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13632:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13652:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "13632:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13632:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "13632:46:0"
											}
										]
									},
									"functionSelector": "dd5f6f4d",
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "InvestmentWithdrawal",
									"nameLocation": "12310:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "WithdrawalAmount",
												"nameLocation": "12339:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "12331:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12330:26:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12366:0:0"
									},
									"scope": 1444,
									"src": "12301:1384:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "13761:1536:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1025,
																			"name": "InvestorsBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "13883:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																				"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																			}
																		},
																		"id": 1028,
																		"indexExpression": {
																			"expression": {
																				"id": 1026,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "13900:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "13904:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "13900:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13883:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																			"typeString": "struct LotteryGame.investorbalance storage ref"
																		}
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13912:7:0",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "13883:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1030,
																	"name": "Mininum_Investment_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "13923:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13883:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1032,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "13968:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13972:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "13968:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1034,
																	"name": "DevAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "13982:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "13968:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13883:109:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d757374206265206120696e766573746f72",
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14006:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d19f3ae2e405bd6a9cc212ba46bfe12e20adf32eab8aa09d5e4d1904a928c8a2",
																"typeString": "literal_string \"You must be a investor\""
															},
															"value": "You must be a investor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d19f3ae2e405bd6a9cc212ba46bfe12e20adf32eab8aa09d5e4d1904a928c8a2",
																"typeString": "literal_string \"You must be a investor\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13862:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13862:178:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "13862:178:0"
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "Tmpinvestorsprofit",
														"nameLocation": "14059:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "14051:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14051:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1043,
												"initialValue": {
													"id": 1042,
													"name": "InvestorsProfit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 70,
													"src": "14080:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14051:44:0"
											},
											{
												"assignments": [
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "developeraward",
														"nameLocation": "14113:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "14105:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1044,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"hexValue": "30",
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14130:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14105:26:0"
											},
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "prizepool",
														"nameLocation": "14218:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "14210:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14210:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1063,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1053,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "14263:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LotteryGame_$1444",
																			"typeString": "contract LotteryGame"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LotteryGame_$1444",
																			"typeString": "contract LotteryGame"
																		}
																	],
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14255:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1051,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14255:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14255:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14269:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "14255:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1056,
																			"name": "InvestorsProfit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "14291:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1057,
																			"name": "TotalReferralProfit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 74,
																			"src": "14309:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14291:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1059,
																		"name": "DevProfit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "14331:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14291:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1061,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14290:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1050,
														"name": "SafeMathsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "14230:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14230:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14210:141:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1064,
														"name": "prizepool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "14366:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1065,
														"name": "Maxinum_Investment_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "14379:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14366:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1080,
												"nodeType": "IfStatement",
												"src": "14362:151:0",
												"trueBody": {
													"id": 1079,
													"nodeType": "Block",
													"src": "14404:109:0",
													"statements": [
														{
															"expression": {
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1067,
																	"name": "Tmpinvestorsprofit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "14418:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1068,
																		"name": "prizepool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "14440:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "323030",
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"src": "14440:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14418:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1072,
															"nodeType": "ExpressionStatement",
															"src": "14418:37:0"
														},
														{
															"expression": {
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1073,
																	"name": "developeraward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "14469:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1074,
																		"name": "prizepool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "14487:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "323030",
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14499:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"src": "14487:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14469:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1078,
															"nodeType": "ExpressionStatement",
															"src": "14469:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1081,
														"name": "InvestorsProfit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "14522:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14540:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14522:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "14522:19:0"
											},
											{
												"body": {
													"id": 1131,
													"nodeType": "Block",
													"src": "14599:589:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1096,
																			"name": "InvestorsBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "14634:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																				"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																			}
																		},
																		"id": 1100,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1097,
																				"name": "investors",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 61,
																				"src": "14651:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1099,
																			"indexExpression": {
																				"id": 1098,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1086,
																				"src": "14661:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14651:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14634:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																			"typeString": "struct LotteryGame.investorbalance storage ref"
																		}
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14665:7:0",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "14634:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1102,
																	"name": "Mininum_Investment_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "14692:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14634:83:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1130,
															"nodeType": "IfStatement",
															"src": "14613:565:0",
															"trueBody": {
																"id": 1129,
																"nodeType": "Block",
																"src": "14732:446:0",
																"statements": [
																	{
																		"assignments": [
																			1105
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1105,
																				"mutability": "mutable",
																				"name": "thisinvestorprofit",
																				"nameLocation": "14838:18:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1129,
																				"src": "14830:26:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1104,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14830:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1118,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1108,
																									"name": "InvestorsBalance",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 66,
																									"src": "14929:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																										"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																									}
																								},
																								"id": 1112,
																								"indexExpression": {
																									"baseExpression": {
																										"id": 1109,
																										"name": "investors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 61,
																										"src": "14946:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_address_$dyn_storage",
																											"typeString": "address[] storage ref"
																										}
																									},
																									"id": 1111,
																									"indexExpression": {
																										"id": 1110,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1086,
																										"src": "14956:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "14946:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "14929:30:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																									"typeString": "struct LotteryGame.investorbalance storage ref"
																								}
																							},
																							"id": 1113,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "14960:7:0",
																							"memberName": "balance",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 37,
																							"src": "14929:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1114,
																							"name": "Tmpinvestorsprofit",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1041,
																							"src": "14993:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1107,
																						"name": "SafeMathmul",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 186,
																						"src": "14892:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1115,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14892:141:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1116,
																					"name": "TotalInvestmentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "15055:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1106,
																				"name": "SafeMathdiv",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 210,
																				"src": "14859:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14859:235:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14830:264:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1126,
																					"name": "thisinvestorprofit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1105,
																					"src": "15144:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1121,
																								"name": "investors",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 61,
																								"src": "15121:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage",
																									"typeString": "address[] storage ref"
																								}
																							},
																							"id": 1123,
																							"indexExpression": {
																								"id": 1122,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1086,
																								"src": "15131:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15121:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15113:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "15113:8:0",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15113:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 1125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15135:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "15113:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15113:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1128,
																		"nodeType": "ExpressionStatement",
																		"src": "15113:50:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1089,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "14572:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1090,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "14576:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14586:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14576:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14572:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1132,
												"initializationExpression": {
													"assignments": [
														1086
													],
													"declarations": [
														{
															"constant": false,
															"id": 1086,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14565:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1132,
															"src": "14557:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1085,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14557:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1088,
													"initialValue": {
														"hexValue": "30",
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14569:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14557:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14594:3:0",
														"subExpression": {
															"id": 1093,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "14594:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1095,
													"nodeType": "ExpressionStatement",
													"src": "14594:3:0"
												},
												"nodeType": "ForStatement",
												"src": "14552:636:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1133,
														"name": "developeraward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "15202:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15219:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15202:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1145,
												"nodeType": "IfStatement",
												"src": "15198:93:0",
												"trueBody": {
													"id": 1144,
													"nodeType": "Block",
													"src": "15222:69:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1141,
																		"name": "developeraward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "15265:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1138,
																				"name": "DevAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 56,
																				"src": "15244:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15236:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1136,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15236:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15236:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15256:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "15236:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15236:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1143,
															"nodeType": "ExpressionStatement",
															"src": "15236:44:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "12db1357",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DistributeInvestmentIncome",
									"nameLocation": "13723:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13749:2:0"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13761:0:0"
									},
									"scope": 1444,
									"src": "13714:1583:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "15375:396:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1151,
																		"name": "UsersInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 81,
																		"src": "15458:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																			"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																		}
																	},
																	"id": 1154,
																	"indexExpression": {
																		"expression": {
																			"id": 1152,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "15468:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15472:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "15468:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15458:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_userinfo_$26_storage",
																		"typeString": "struct LotteryGame.userinfo storage ref"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15480:14:0",
																"memberName": "ReferralProfit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 23,
																"src": "15458:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "302e3031",
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15498:10:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"value": "0.01"
															},
															"src": "15458:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682070726f66697420746f20776974686472617721",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15522:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa0b0d924bce727ab99514b9f4c92115ad6db118fca10e53f88c8c4c48fc7dfc",
																"typeString": "literal_string \"Not enough profit to withdraw!\""
															},
															"value": "Not enough profit to withdraw!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa0b0d924bce727ab99514b9f4c92115ad6db118fca10e53f88c8c4c48fc7dfc",
																"typeString": "literal_string \"Not enough profit to withdraw!\""
															}
														],
														"id": 1150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15437:127:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15437:127:0"
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "profit",
														"nameLocation": "15583:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "15575:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15575:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1163,
															"name": "UsersInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "15592:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
															}
														},
														"id": 1166,
														"indexExpression": {
															"expression": {
																"id": 1164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15602:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15606:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15602:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15592:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_userinfo_$26_storage",
															"typeString": "struct LotteryGame.userinfo storage ref"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15614:14:0",
													"memberName": "ReferralProfit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 23,
													"src": "15592:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15575:53:0"
											},
											{
												"expression": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1169,
																"name": "UsersInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "15638:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																	"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
																}
															},
															"id": 1172,
															"indexExpression": {
																"expression": {
																	"id": 1170,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15648:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15652:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15648:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15638:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userinfo_$26_storage",
																"typeString": "struct LotteryGame.userinfo storage ref"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15660:14:0",
														"memberName": "ReferralProfit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "15638:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15638:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "15638:40:0"
											},
											{
												"expression": {
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1177,
														"name": "TotalReferralProfit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "15689:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1178,
														"name": "profit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "15712:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15689:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "15689:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1187,
															"name": "profit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "15757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1183,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15736:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15740:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15736:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15728:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1181,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15728:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15728:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15748:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "15728:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15728:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "15728:36:0"
											}
										]
									},
									"functionSelector": "22629256",
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "WithdrawReferralProfit",
									"nameLocation": "15341:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15363:2:0"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15375:0:0"
									},
									"scope": 1444,
									"src": "15332:439:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "15846:191:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1195,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15864:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15868:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15864:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1197,
																"name": "DevAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "15878:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15864:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d7573742062652074686520646576656c6f706572",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15890:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1258a82e70db9c0442027dc365b3d26ee4505a23a70abe09c692d11010a23a6",
																"typeString": "literal_string \"You must be the developer\""
															},
															"value": "You must be the developer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1258a82e70db9c0442027dc365b3d26ee4505a23a70abe09c692d11010a23a6",
																"typeString": "literal_string \"You must be the developer\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15856:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "15856:62:0"
											},
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "devprofit",
														"nameLocation": "15936:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "15928:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"id": 1204,
													"name": "DevProfit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 58,
													"src": "15948:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15928:29:0"
											},
											{
												"expression": {
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1206,
														"name": "DevProfit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "15967:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15979:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15967:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "15967:13:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1215,
															"name": "devprofit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "16020:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1212,
																	"name": "DevAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "15999:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15991:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1210,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15991:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15991:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16011:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "15991:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15991:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "15991:39:0"
											}
										]
									},
									"functionSelector": "f4e79b5b",
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DeveloperWithdrawal",
									"nameLocation": "15815:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15834:2:0"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15846:0:0"
									},
									"scope": 1444,
									"src": "15806:231:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "16187:455:0",
										"statements": [
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "RecordCt",
														"nameLocation": "16205:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1284,
														"src": "16197:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16197:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1231,
												"initialValue": {
													"id": 1230,
													"name": "RecordCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1221,
													"src": "16216:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16197:30:0"
											},
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "WinningRecordLen",
														"nameLocation": "16245:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1284,
														"src": "16237:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1236,
												"initialValue": {
													"expression": {
														"id": 1234,
														"name": "WinningRecord",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "16264:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage",
															"typeString": "struct LotteryGame.Winninginfo storage ref[] storage ref"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16278:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16264:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16237:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1237,
														"name": "RecordCt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "16299:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1238,
														"name": "WinningRecordLen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "16310:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16299:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"nodeType": "IfStatement",
												"src": "16295:85:0",
												"trueBody": {
													"id": 1244,
													"nodeType": "Block",
													"src": "16328:52:0",
													"statements": [
														{
															"expression": {
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1240,
																	"name": "RecordCt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "16342:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1241,
																	"name": "WinningRecordLen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "16353:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16342:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1243,
															"nodeType": "ExpressionStatement",
															"src": "16342:27:0"
														}
													]
												}
											},
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "LatelyWinnersRecord",
														"nameLocation": "16411:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1284,
														"src": "16390:40:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct LotteryGame.Winninginfo[]"
														},
														"typeName": {
															"baseType": {
																"id": 1248,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1247,
																	"name": "Winninginfo",
																	"nameLocations": [
																		"16390:11:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 35,
																	"src": "16390:11:0"
																},
																"referencedDeclaration": 35,
																"src": "16390:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Winninginfo_$35_storage_ptr",
																	"typeString": "struct LotteryGame.Winninginfo"
																}
															},
															"id": 1249,
															"nodeType": "ArrayTypeName",
															"src": "16390:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage_ptr",
																"typeString": "struct LotteryGame.Winninginfo[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"arguments": [
														{
															"id": 1255,
															"name": "RecordCt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "16451:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16433:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct LotteryGame.Winninginfo memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1252,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1251,
																	"name": "Winninginfo",
																	"nameLocations": [
																		"16437:11:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 35,
																	"src": "16437:11:0"
																},
																"referencedDeclaration": 35,
																"src": "16437:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Winninginfo_$35_storage_ptr",
																	"typeString": "struct LotteryGame.Winninginfo"
																}
															},
															"id": 1253,
															"nodeType": "ArrayTypeName",
															"src": "16437:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage_ptr",
																"typeString": "struct LotteryGame.Winninginfo[]"
															}
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16433:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct LotteryGame.Winninginfo memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16390:70:0"
											},
											{
												"body": {
													"id": 1280,
													"nodeType": "Block",
													"src": "16510:89:0",
													"statements": [
														{
															"expression": {
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1268,
																		"name": "LatelyWinnersRecord",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "16524:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct LotteryGame.Winninginfo memory[] memory"
																		}
																	},
																	"id": 1270,
																	"indexExpression": {
																		"id": 1269,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "16544:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16524:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Winninginfo_$35_memory_ptr",
																		"typeString": "struct LotteryGame.Winninginfo memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1271,
																		"name": "WinningRecord",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 89,
																		"src": "16549:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage",
																			"typeString": "struct LotteryGame.Winninginfo storage ref[] storage ref"
																		}
																	},
																	"id": 1277,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1272,
																				"name": "WinningRecordLen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "16563:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16582:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "16563:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1275,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "16586:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16563:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16549:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Winninginfo_$35_storage",
																		"typeString": "struct LotteryGame.Winninginfo storage ref"
																	}
																},
																"src": "16524:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Winninginfo_$35_memory_ptr",
																	"typeString": "struct LotteryGame.Winninginfo memory"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "16524:64:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1262,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "16491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1263,
														"name": "RecordCt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "16495:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16491:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"initializationExpression": {
													"assignments": [
														1259
													],
													"declarations": [
														{
															"constant": false,
															"id": 1259,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "16484:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1281,
															"src": "16476:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1258,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16476:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1261,
													"initialValue": {
														"hexValue": "30",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16488:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16476:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16505:3:0",
														"subExpression": {
															"id": 1265,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "16505:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1267,
													"nodeType": "ExpressionStatement",
													"src": "16505:3:0"
												},
												"nodeType": "ForStatement",
												"src": "16471:128:0"
											},
											{
												"expression": {
													"id": 1282,
													"name": "LatelyWinnersRecord",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1250,
													"src": "16616:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct LotteryGame.Winninginfo memory[] memory"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1283,
												"nodeType": "Return",
												"src": "16609:26:0"
											}
										]
									},
									"functionSelector": "2b5baca1",
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetWinningRecord",
									"nameLocation": "16078:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "RecordCount",
												"nameLocation": "16103:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "16095:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16094:21:0"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "16161:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LotteryGame.Winninginfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 1224,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1223,
															"name": "Winninginfo",
															"nameLocations": [
																"16161:11:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 35,
															"src": "16161:11:0"
														},
														"referencedDeclaration": 35,
														"src": "16161:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Winninginfo_$35_storage_ptr",
															"typeString": "struct LotteryGame.Winninginfo"
														}
													},
													"id": 1225,
													"nodeType": "ArrayTypeName",
													"src": "16161:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Winninginfo_$35_storage_$dyn_storage_ptr",
														"typeString": "struct LotteryGame.Winninginfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:22:0"
									},
									"scope": 1444,
									"src": "16069:573:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "16747:56:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1292,
															"name": "UsersInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "16764:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userinfo_$26_storage_$",
																"typeString": "mapping(address => struct LotteryGame.userinfo storage ref)"
															}
														},
														"id": 1295,
														"indexExpression": {
															"expression": {
																"id": 1293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16774:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16778:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16774:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16764:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_userinfo_$26_storage",
															"typeString": "struct LotteryGame.userinfo storage ref"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16786:10:0",
													"memberName": "openedeggs",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "16764:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_OpenedLotInfo_$13_storage_$dyn_storage",
														"typeString": "struct LotteryGame.OpenedLotInfo storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1297,
												"nodeType": "Return",
												"src": "16757:39:0"
											}
										]
									},
									"functionSelector": "d9498a83",
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetLatestLottery",
									"nameLocation": "16683:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16699:2:0"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "16723:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_OpenedLotInfo_$13_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LotteryGame.OpenedLotInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 1288,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1287,
															"name": "OpenedLotInfo",
															"nameLocations": [
																"16723:13:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 13,
															"src": "16723:13:0"
														},
														"referencedDeclaration": 13,
														"src": "16723:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OpenedLotInfo_$13_storage_ptr",
															"typeString": "struct LotteryGame.OpenedLotInfo"
														}
													},
													"id": 1289,
													"nodeType": "ArrayTypeName",
													"src": "16723:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_OpenedLotInfo_$13_storage_$dyn_storage_ptr",
														"typeString": "struct LotteryGame.OpenedLotInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16722:24:0"
									},
									"scope": 1444,
									"src": "16674:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "16909:54:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1306,
															"name": "InvestorsBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "16926:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
															}
														},
														"id": 1308,
														"indexExpression": {
															"id": 1307,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "16943:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16926:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_investorbalance_$42_storage",
															"typeString": "struct LotteryGame.investorbalance storage ref"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16949:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 37,
													"src": "16926:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1305,
												"id": 1310,
												"nodeType": "Return",
												"src": "16919:37:0"
											}
										]
									},
									"functionSelector": "cf438305",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetInvestmentBalance",
									"nameLocation": "16844:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "16873:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16865:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16864:14:0"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16900:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16899:9:0"
									},
									"scope": 1444,
									"src": "16835:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "17094:1390:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1316,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "17112:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17116:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "17112:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1318,
																"name": "DevAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "17126:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17112:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17104:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "17104:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1323,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "17155:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17161:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "17155:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1325,
																	"name": "LastBuyEggTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "17174:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3135",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17191:7:0",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1296000_by_1",
																		"typeString": "int_const 1296000"
																	},
																	"value": "15"
																},
																"src": "17174:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17155:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17147:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "17147:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1333,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17222:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LotteryGame_$1444",
																		"typeString": "contract LotteryGame"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LotteryGame_$1444",
																		"typeString": "contract LotteryGame"
																	}
																],
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17214:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1331,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17214:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17214:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17228:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "17214:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1336,
														"name": "TotalInvestmentAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "17239:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17214:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1433,
													"nodeType": "Block",
													"src": "17659:775:0",
													"statements": [
														{
															"assignments": [
																1378
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1378,
																	"mutability": "mutable",
																	"name": "contractBalance",
																	"nameLocation": "17727:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1433,
																	"src": "17719:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1377,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17719:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1384,
															"initialValue": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1381,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "17753:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LotteryGame_$1444",
																				"typeString": "contract LotteryGame"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LotteryGame_$1444",
																				"typeString": "contract LotteryGame"
																			}
																		],
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17745:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1379,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17745:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17745:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17759:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "17745:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17719:47:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1385,
																	"name": "contractBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "17785:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1386,
																	"name": "Mininum_Investment_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "17804:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17785:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1432,
															"nodeType": "IfStatement",
															"src": "17781:643:0",
															"trueBody": {
																"id": 1431,
																"nodeType": "Block",
																"src": "17831:593:0",
																"statements": [
																	{
																		"body": {
																			"id": 1429,
																			"nodeType": "Block",
																			"src": "17896:514:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1406,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1399,
																									"name": "InvestorsBalance",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 66,
																									"src": "17947:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																										"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																									}
																								},
																								"id": 1403,
																								"indexExpression": {
																									"baseExpression": {
																										"id": 1400,
																										"name": "investors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 61,
																										"src": "17964:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_address_$dyn_storage",
																											"typeString": "address[] storage ref"
																										}
																									},
																									"id": 1402,
																									"indexExpression": {
																										"id": 1401,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1389,
																										"src": "17974:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "17964:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "17947:30:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																									"typeString": "struct LotteryGame.investorbalance storage ref"
																								}
																							},
																							"id": 1404,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "17978:7:0",
																							"memberName": "balance",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 37,
																							"src": "17947:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"id": 1405,
																							"name": "Mininum_Investment_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 51,
																							"src": "18013:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17947:91:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1428,
																					"nodeType": "IfStatement",
																					"src": "17918:474:0",
																					"trueBody": {
																						"id": 1427,
																						"nodeType": "Block",
																						"src": "18061:331:0",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 1424,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"components": [
																													{
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 1421,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"expression": {
																																"baseExpression": {
																																	"id": 1414,
																																	"name": "InvestorsBalance",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 66,
																																	"src": "18230:16:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																																		"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																																	}
																																},
																																"id": 1418,
																																"indexExpression": {
																																	"baseExpression": {
																																		"id": 1415,
																																		"name": "investors",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 61,
																																		"src": "18247:9:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																																			"typeString": "address[] storage ref"
																																		}
																																	},
																																	"id": 1417,
																																	"indexExpression": {
																																		"id": 1416,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1389,
																																		"src": "18257:1:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "18247:12:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_address",
																																		"typeString": "address"
																																	}
																																},
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "IndexAccess",
																																"src": "18230:30:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																																	"typeString": "struct LotteryGame.investorbalance storage ref"
																																}
																															},
																															"id": 1419,
																															"isConstant": false,
																															"isLValue": true,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberLocation": "18261:7:0",
																															"memberName": "balance",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 37,
																															"src": "18230:38:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"id": 1420,
																															"name": "contractBalance",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1378,
																															"src": "18303:15:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "18230:88:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 1422,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "18229:90:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "/",
																											"rightExpression": {
																												"id": 1423,
																												"name": "TotalInvestmentAmount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 68,
																												"src": "18322:21:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "18229:114:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"arguments": [
																												{
																													"baseExpression": {
																														"id": 1409,
																														"name": "investors",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 61,
																														"src": "18177:9:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_address_$dyn_storage",
																															"typeString": "address[] storage ref"
																														}
																													},
																													"id": 1411,
																													"indexExpression": {
																														"id": 1410,
																														"name": "i",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1389,
																														"src": "18187:1:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "18177:12:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 1408,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "18169:8:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_address_payable_$",
																													"typeString": "type(address payable)"
																												},
																												"typeName": {
																													"id": 1407,
																													"name": "address",
																													"nodeType": "ElementaryTypeName",
																													"src": "18169:8:0",
																													"stateMutability": "payable",
																													"typeDescriptions": {}
																												}
																											},
																											"id": 1412,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "18169:21:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_address_payable",
																												"typeString": "address payable"
																											}
																										},
																										"id": 1413,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "18191:8:0",
																										"memberName": "transfer",
																										"nodeType": "MemberAccess",
																										"src": "18169:30:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																											"typeString": "function (uint256)"
																										}
																									},
																									"id": 1425,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "18169:200:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 1426,
																								"nodeType": "ExpressionStatement",
																								"src": "18169:200:0"
																							}
																						]
																					}
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1392,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1389,
																				"src": "17869:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"expression": {
																					"id": 1393,
																					"name": "investors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 61,
																					"src": "17873:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "17883:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "17873:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17869:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1430,
																		"initializationExpression": {
																			"assignments": [
																				1389
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1389,
																					"mutability": "mutable",
																					"name": "i",
																					"nameLocation": "17862:1:0",
																					"nodeType": "VariableDeclaration",
																					"scope": 1430,
																					"src": "17854:9:0",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1388,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "17854:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1391,
																			"initialValue": {
																				"hexValue": "30",
																				"id": 1390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17866:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "17854:13:0"
																		},
																		"isSimpleCounterLoop": true,
																		"loopExpression": {
																			"expression": {
																				"id": 1397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "17891:3:0",
																				"subExpression": {
																					"id": 1396,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1389,
																					"src": "17891:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1398,
																			"nodeType": "ExpressionStatement",
																			"src": "17891:3:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "17849:561:0"
																	}
																]
															}
														}
													]
												},
												"id": 1434,
												"nodeType": "IfStatement",
												"src": "17210:1224:0",
												"trueBody": {
													"id": 1376,
													"nodeType": "Block",
													"src": "17262:391:0",
													"statements": [
														{
															"body": {
																"id": 1374,
																"nodeType": "Block",
																"src": "17323:320:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1349,
																						"name": "InvestorsBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 66,
																						"src": "17366:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																							"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																						}
																					},
																					"id": 1353,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1350,
																							"name": "investors",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 61,
																							"src": "17383:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1352,
																						"indexExpression": {
																							"id": 1351,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1339,
																							"src": "17393:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "17383:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "17366:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																						"typeString": "struct LotteryGame.investorbalance storage ref"
																					}
																				},
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "17397:7:0",
																				"memberName": "balance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 37,
																				"src": "17366:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1355,
																				"name": "Mininum_Investment_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 51,
																				"src": "17428:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17366:87:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1373,
																		"nodeType": "IfStatement",
																		"src": "17341:288:0",
																		"trueBody": {
																			"id": 1372,
																			"nodeType": "Block",
																			"src": "17472:157:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 1364,
																										"name": "InvestorsBalance",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 66,
																										"src": "17550:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_investorbalance_$42_storage_$",
																											"typeString": "mapping(address => struct LotteryGame.investorbalance storage ref)"
																										}
																									},
																									"id": 1368,
																									"indexExpression": {
																										"baseExpression": {
																											"id": 1365,
																											"name": "investors",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 61,
																											"src": "17567:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_storage",
																												"typeString": "address[] storage ref"
																											}
																										},
																										"id": 1367,
																										"indexExpression": {
																											"id": 1366,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1339,
																											"src": "17577:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "17567:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "17550:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_investorbalance_$42_storage",
																										"typeString": "struct LotteryGame.investorbalance storage ref"
																									}
																								},
																								"id": 1369,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "17581:7:0",
																								"memberName": "balance",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 37,
																								"src": "17550:38:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"baseExpression": {
																											"id": 1359,
																											"name": "investors",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 61,
																											"src": "17502:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_storage",
																												"typeString": "address[] storage ref"
																											}
																										},
																										"id": 1361,
																										"indexExpression": {
																											"id": 1360,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1339,
																											"src": "17512:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "17502:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1358,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "17494:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_payable_$",
																										"typeString": "type(address payable)"
																									},
																									"typeName": {
																										"id": 1357,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "17494:8:0",
																										"stateMutability": "payable",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1362,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17494:21:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"id": 1363,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "17516:8:0",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"src": "17494:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																								"typeString": "function (uint256)"
																							}
																						},
																						"id": 1370,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "17494:116:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1371,
																					"nodeType": "ExpressionStatement",
																					"src": "17494:116:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1342,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "17296:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1343,
																		"name": "investors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "17300:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17310:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "17300:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17296:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1375,
															"initializationExpression": {
																"assignments": [
																	1339
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1339,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "17289:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1375,
																		"src": "17281:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1338,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "17281:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1341,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17293:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "17281:13:0"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "17318:3:0",
																	"subExpression": {
																		"id": 1346,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "17318:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1348,
																"nodeType": "ExpressionStatement",
																"src": "17318:3:0"
															},
															"nodeType": "ForStatement",
															"src": "17276:367:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1438,
																	"name": "DevAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "18465:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18457:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1436,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18457:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18457:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1435,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "18444:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18444:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "18444:33:0"
											}
										]
									},
									"functionSelector": "289f9019",
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DestructContract",
									"nameLocation": "17066:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17082:2:0"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17094:0:0"
									},
									"scope": 1444,
									"src": "17057:1427:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1445,
							"src": "70:18416:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:18450:0"
				},
				"id": 0
			}
		}
	}
}